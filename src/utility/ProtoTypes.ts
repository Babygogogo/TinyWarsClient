
namespace TinyWars.Utility {
 export namespace ProtoTypes {
/** Properties of a Config. */
export declare interface IConfig {
}

/** Represents a Config. */
export declare class Config implements IConfig {

    /**
     * Constructs a new Config.
     * @param [properties] Properties to set
     */
    constructor(properties?: IConfig);

    /**
     * Creates a new Config instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Config instance
     */
    public static create(properties?: IConfig): Config;

    /**
     * Encodes the specified Config message. Does not implicitly {@link Config.verify|verify} messages.
     * @param message Config message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IConfig, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Config message, length delimited. Does not implicitly {@link Config.verify|verify} messages.
     * @param message Config message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IConfig, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Config message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Config
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config;

    /**
     * Decodes a Config message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Config
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config;

    /**
     * Verifies a Config message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Config message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Config
     */
    public static fromObject(object: { [k: string]: any }): Config;

    /**
     * Creates a plain object from a Config message. Also converts values to other types if specified.
     * @param message Config
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Config, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Config to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Config {

    /** Properties of a TileCategoryCfg. */
    interface ITileCategoryCfg {

        /** TileCategoryCfg category */
        category?: (number|null);

        /** TileCategoryCfg tileTypes */
        tileTypes?: (number[]|null);
    }

    /** Represents a TileCategoryCfg. */
    class TileCategoryCfg implements ITileCategoryCfg {

        /**
         * Constructs a new TileCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ITileCategoryCfg);

        /** TileCategoryCfg category. */
        public category: number;

        /** TileCategoryCfg tileTypes. */
        public tileTypes: number[];

        /**
         * Creates a new TileCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileCategoryCfg instance
         */
        public static create(properties?: Config.ITileCategoryCfg): Config.TileCategoryCfg;

        /**
         * Encodes the specified TileCategoryCfg message. Does not implicitly {@link Config.TileCategoryCfg.verify|verify} messages.
         * @param message TileCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileCategoryCfg message, length delimited. Does not implicitly {@link Config.TileCategoryCfg.verify|verify} messages.
         * @param message TileCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ITileCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.TileCategoryCfg;

        /**
         * Decodes a TileCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.TileCategoryCfg;

        /**
         * Verifies a TileCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.TileCategoryCfg;

        /**
         * Creates a plain object from a TileCategoryCfg message. Also converts values to other types if specified.
         * @param message TileCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.TileCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitCategoryCfg. */
    interface IUnitCategoryCfg {

        /** UnitCategoryCfg category */
        category?: (number|null);

        /** UnitCategoryCfg unitTypes */
        unitTypes?: (number[]|null);
    }

    /** Represents an UnitCategoryCfg. */
    class UnitCategoryCfg implements IUnitCategoryCfg {

        /**
         * Constructs a new UnitCategoryCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitCategoryCfg);

        /** UnitCategoryCfg category. */
        public category: number;

        /** UnitCategoryCfg unitTypes. */
        public unitTypes: number[];

        /**
         * Creates a new UnitCategoryCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitCategoryCfg instance
         */
        public static create(properties?: Config.IUnitCategoryCfg): Config.UnitCategoryCfg;

        /**
         * Encodes the specified UnitCategoryCfg message. Does not implicitly {@link Config.UnitCategoryCfg.verify|verify} messages.
         * @param message UnitCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitCategoryCfg message, length delimited. Does not implicitly {@link Config.UnitCategoryCfg.verify|verify} messages.
         * @param message UnitCategoryCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitCategoryCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitCategoryCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitCategoryCfg;

        /**
         * Decodes an UnitCategoryCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitCategoryCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitCategoryCfg;

        /**
         * Verifies an UnitCategoryCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitCategoryCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitCategoryCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitCategoryCfg;

        /**
         * Creates a plain object from an UnitCategoryCfg message. Also converts values to other types if specified.
         * @param message UnitCategoryCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitCategoryCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitCategoryCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TileTemplateCfg. */
    interface ITileTemplateCfg {

        /** TileTemplateCfg type */
        type?: (number|null);

        /** TileTemplateCfg defenseAmount */
        defenseAmount?: (number|null);

        /** TileTemplateCfg defenseUnitCategory */
        defenseUnitCategory?: (number|null);

        /** TileTemplateCfg maxBuildPoint */
        maxBuildPoint?: (number|null);

        /** TileTemplateCfg maxCapturePoint */
        maxCapturePoint?: (number|null);

        /** TileTemplateCfg isDefeatedOnCapture */
        isDefeatedOnCapture?: (number|null);

        /** TileTemplateCfg repairAmount */
        repairAmount?: (number|null);

        /** TileTemplateCfg repairUnitCategory */
        repairUnitCategory?: (number|null);

        /** TileTemplateCfg incomePerTurn */
        incomePerTurn?: (number|null);

        /** TileTemplateCfg visionRange */
        visionRange?: (number|null);

        /** TileTemplateCfg isVisionEnabledForAllPlayers */
        isVisionEnabledForAllPlayers?: (number|null);

        /** TileTemplateCfg hideUnitCategory */
        hideUnitCategory?: (number|null);

        /** TileTemplateCfg isDestroyedWithAdjacentMeteor */
        isDestroyedWithAdjacentMeteor?: (number|null);

        /** TileTemplateCfg produceUnitCategory */
        produceUnitCategory?: (number|null);

        /** TileTemplateCfg globalAttackBonus */
        globalAttackBonus?: (number|null);

        /** TileTemplateCfg globalDefenseBonus */
        globalDefenseBonus?: (number|null);

        /** TileTemplateCfg maxHp */
        maxHp?: (number|null);

        /** TileTemplateCfg armorType */
        armorType?: (number|null);

        /** TileTemplateCfg isAffectedByLuck */
        isAffectedByLuck?: (number|null);

        /** TileTemplateCfg loadCoUnitCategory */
        loadCoUnitCategory?: (number|null);
    }

    /** Represents a TileTemplateCfg. */
    class TileTemplateCfg implements ITileTemplateCfg {

        /**
         * Constructs a new TileTemplateCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ITileTemplateCfg);

        /** TileTemplateCfg type. */
        public type: number;

        /** TileTemplateCfg defenseAmount. */
        public defenseAmount: number;

        /** TileTemplateCfg defenseUnitCategory. */
        public defenseUnitCategory: number;

        /** TileTemplateCfg maxBuildPoint. */
        public maxBuildPoint: number;

        /** TileTemplateCfg maxCapturePoint. */
        public maxCapturePoint: number;

        /** TileTemplateCfg isDefeatedOnCapture. */
        public isDefeatedOnCapture: number;

        /** TileTemplateCfg repairAmount. */
        public repairAmount: number;

        /** TileTemplateCfg repairUnitCategory. */
        public repairUnitCategory: number;

        /** TileTemplateCfg incomePerTurn. */
        public incomePerTurn: number;

        /** TileTemplateCfg visionRange. */
        public visionRange: number;

        /** TileTemplateCfg isVisionEnabledForAllPlayers. */
        public isVisionEnabledForAllPlayers: number;

        /** TileTemplateCfg hideUnitCategory. */
        public hideUnitCategory: number;

        /** TileTemplateCfg isDestroyedWithAdjacentMeteor. */
        public isDestroyedWithAdjacentMeteor: number;

        /** TileTemplateCfg produceUnitCategory. */
        public produceUnitCategory: number;

        /** TileTemplateCfg globalAttackBonus. */
        public globalAttackBonus: number;

        /** TileTemplateCfg globalDefenseBonus. */
        public globalDefenseBonus: number;

        /** TileTemplateCfg maxHp. */
        public maxHp: number;

        /** TileTemplateCfg armorType. */
        public armorType: number;

        /** TileTemplateCfg isAffectedByLuck. */
        public isAffectedByLuck: number;

        /** TileTemplateCfg loadCoUnitCategory. */
        public loadCoUnitCategory: number;

        /**
         * Creates a new TileTemplateCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TileTemplateCfg instance
         */
        public static create(properties?: Config.ITileTemplateCfg): Config.TileTemplateCfg;

        /**
         * Encodes the specified TileTemplateCfg message. Does not implicitly {@link Config.TileTemplateCfg.verify|verify} messages.
         * @param message TileTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified TileTemplateCfg message, length delimited. Does not implicitly {@link Config.TileTemplateCfg.verify|verify} messages.
         * @param message TileTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ITileTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a TileTemplateCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TileTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.TileTemplateCfg;

        /**
         * Decodes a TileTemplateCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TileTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.TileTemplateCfg;

        /**
         * Verifies a TileTemplateCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TileTemplateCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TileTemplateCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.TileTemplateCfg;

        /**
         * Creates a plain object from a TileTemplateCfg message. Also converts values to other types if specified.
         * @param message TileTemplateCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.TileTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TileTemplateCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitTemplateCfg. */
    interface IUnitTemplateCfg {

        /** UnitTemplateCfg type */
        type?: (number|null);

        /** UnitTemplateCfg minAttackRange */
        minAttackRange?: (number|null);

        /** UnitTemplateCfg maxAttackRange */
        maxAttackRange?: (number|null);

        /** UnitTemplateCfg canAttackAfterMove */
        canAttackAfterMove?: (number|null);

        /** UnitTemplateCfg canAttackDivingUnits */
        canAttackDivingUnits?: (number|null);

        /** UnitTemplateCfg primaryWeaponMaxAmmo */
        primaryWeaponMaxAmmo?: (number|null);

        /** UnitTemplateCfg maxHp */
        maxHp?: (number|null);

        /** UnitTemplateCfg armorType */
        armorType?: (number|null);

        /** UnitTemplateCfg isAffectedByLuck */
        isAffectedByLuck?: (number|null);

        /** UnitTemplateCfg moveRange */
        moveRange?: (number|null);

        /** UnitTemplateCfg moveType */
        moveType?: (number|null);

        /** UnitTemplateCfg maxFuel */
        maxFuel?: (number|null);

        /** UnitTemplateCfg fuelConsumptionPerTurn */
        fuelConsumptionPerTurn?: (number|null);

        /** UnitTemplateCfg diveCfgs */
        diveCfgs?: (number[]|null);

        /** UnitTemplateCfg isDestroyedOnOutOfFuel */
        isDestroyedOnOutOfFuel?: (number|null);

        /** UnitTemplateCfg maxLoadUnitsCount */
        maxLoadUnitsCount?: (number|null);

        /** UnitTemplateCfg loadUnitCategory */
        loadUnitCategory?: (number|null);

        /** UnitTemplateCfg canLaunchLoadedUnits */
        canLaunchLoadedUnits?: (number|null);

        /** UnitTemplateCfg canDropLoadedUnits */
        canDropLoadedUnits?: (number|null);

        /** UnitTemplateCfg canSupplyLoadedUnits */
        canSupplyLoadedUnits?: (number|null);

        /** UnitTemplateCfg repairAmountForLoadedUnits */
        repairAmountForLoadedUnits?: (number|null);

        /** UnitTemplateCfg loadableTileCategory */
        loadableTileCategory?: (number|null);

        /** UnitTemplateCfg canSupplyAdjacentUnits */
        canSupplyAdjacentUnits?: (number|null);

        /** UnitTemplateCfg produceUnitType */
        produceUnitType?: (number|null);

        /** UnitTemplateCfg maxProduceMaterial */
        maxProduceMaterial?: (number|null);

        /** UnitTemplateCfg maxBuildMaterial */
        maxBuildMaterial?: (number|null);

        /** UnitTemplateCfg canCaptureTile */
        canCaptureTile?: (number|null);

        /** UnitTemplateCfg canLaunchSilo */
        canLaunchSilo?: (number|null);

        /** UnitTemplateCfg productionCost */
        productionCost?: (number|null);

        /** UnitTemplateCfg visionRange */
        visionRange?: (number|null);

        /** UnitTemplateCfg flareMaxAmmo */
        flareMaxAmmo?: (number|null);

        /** UnitTemplateCfg flareMaxRange */
        flareMaxRange?: (number|null);

        /** UnitTemplateCfg flareRadius */
        flareRadius?: (number|null);
    }

    /** Represents an UnitTemplateCfg. */
    class UnitTemplateCfg implements IUnitTemplateCfg {

        /**
         * Constructs a new UnitTemplateCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitTemplateCfg);

        /** UnitTemplateCfg type. */
        public type: number;

        /** UnitTemplateCfg minAttackRange. */
        public minAttackRange: number;

        /** UnitTemplateCfg maxAttackRange. */
        public maxAttackRange: number;

        /** UnitTemplateCfg canAttackAfterMove. */
        public canAttackAfterMove: number;

        /** UnitTemplateCfg canAttackDivingUnits. */
        public canAttackDivingUnits: number;

        /** UnitTemplateCfg primaryWeaponMaxAmmo. */
        public primaryWeaponMaxAmmo: number;

        /** UnitTemplateCfg maxHp. */
        public maxHp: number;

        /** UnitTemplateCfg armorType. */
        public armorType: number;

        /** UnitTemplateCfg isAffectedByLuck. */
        public isAffectedByLuck: number;

        /** UnitTemplateCfg moveRange. */
        public moveRange: number;

        /** UnitTemplateCfg moveType. */
        public moveType: number;

        /** UnitTemplateCfg maxFuel. */
        public maxFuel: number;

        /** UnitTemplateCfg fuelConsumptionPerTurn. */
        public fuelConsumptionPerTurn: number;

        /** UnitTemplateCfg diveCfgs. */
        public diveCfgs: number[];

        /** UnitTemplateCfg isDestroyedOnOutOfFuel. */
        public isDestroyedOnOutOfFuel: number;

        /** UnitTemplateCfg maxLoadUnitsCount. */
        public maxLoadUnitsCount: number;

        /** UnitTemplateCfg loadUnitCategory. */
        public loadUnitCategory: number;

        /** UnitTemplateCfg canLaunchLoadedUnits. */
        public canLaunchLoadedUnits: number;

        /** UnitTemplateCfg canDropLoadedUnits. */
        public canDropLoadedUnits: number;

        /** UnitTemplateCfg canSupplyLoadedUnits. */
        public canSupplyLoadedUnits: number;

        /** UnitTemplateCfg repairAmountForLoadedUnits. */
        public repairAmountForLoadedUnits: number;

        /** UnitTemplateCfg loadableTileCategory. */
        public loadableTileCategory: number;

        /** UnitTemplateCfg canSupplyAdjacentUnits. */
        public canSupplyAdjacentUnits: number;

        /** UnitTemplateCfg produceUnitType. */
        public produceUnitType: number;

        /** UnitTemplateCfg maxProduceMaterial. */
        public maxProduceMaterial: number;

        /** UnitTemplateCfg maxBuildMaterial. */
        public maxBuildMaterial: number;

        /** UnitTemplateCfg canCaptureTile. */
        public canCaptureTile: number;

        /** UnitTemplateCfg canLaunchSilo. */
        public canLaunchSilo: number;

        /** UnitTemplateCfg productionCost. */
        public productionCost: number;

        /** UnitTemplateCfg visionRange. */
        public visionRange: number;

        /** UnitTemplateCfg flareMaxAmmo. */
        public flareMaxAmmo: number;

        /** UnitTemplateCfg flareMaxRange. */
        public flareMaxRange: number;

        /** UnitTemplateCfg flareRadius. */
        public flareRadius: number;

        /**
         * Creates a new UnitTemplateCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitTemplateCfg instance
         */
        public static create(properties?: Config.IUnitTemplateCfg): Config.UnitTemplateCfg;

        /**
         * Encodes the specified UnitTemplateCfg message. Does not implicitly {@link Config.UnitTemplateCfg.verify|verify} messages.
         * @param message UnitTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitTemplateCfg message, length delimited. Does not implicitly {@link Config.UnitTemplateCfg.verify|verify} messages.
         * @param message UnitTemplateCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitTemplateCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitTemplateCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitTemplateCfg;

        /**
         * Decodes an UnitTemplateCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitTemplateCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitTemplateCfg;

        /**
         * Verifies an UnitTemplateCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitTemplateCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitTemplateCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitTemplateCfg;

        /**
         * Creates a plain object from an UnitTemplateCfg message. Also converts values to other types if specified.
         * @param message UnitTemplateCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitTemplateCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitTemplateCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DamageChartCfg. */
    interface IDamageChartCfg {

        /** DamageChartCfg attackerType */
        attackerType?: (number|null);

        /** DamageChartCfg armorType */
        armorType?: (number|null);

        /** DamageChartCfg weaponType */
        weaponType?: (number|null);

        /** DamageChartCfg damage */
        damage?: (number|null);
    }

    /** Represents a DamageChartCfg. */
    class DamageChartCfg implements IDamageChartCfg {

        /**
         * Constructs a new DamageChartCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IDamageChartCfg);

        /** DamageChartCfg attackerType. */
        public attackerType: number;

        /** DamageChartCfg armorType. */
        public armorType: number;

        /** DamageChartCfg weaponType. */
        public weaponType: number;

        /** DamageChartCfg damage. */
        public damage: number;

        /**
         * Creates a new DamageChartCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DamageChartCfg instance
         */
        public static create(properties?: Config.IDamageChartCfg): Config.DamageChartCfg;

        /**
         * Encodes the specified DamageChartCfg message. Does not implicitly {@link Config.DamageChartCfg.verify|verify} messages.
         * @param message DamageChartCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DamageChartCfg message, length delimited. Does not implicitly {@link Config.DamageChartCfg.verify|verify} messages.
         * @param message DamageChartCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IDamageChartCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DamageChartCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DamageChartCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.DamageChartCfg;

        /**
         * Decodes a DamageChartCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DamageChartCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.DamageChartCfg;

        /**
         * Verifies a DamageChartCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DamageChartCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DamageChartCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.DamageChartCfg;

        /**
         * Creates a plain object from a DamageChartCfg message. Also converts values to other types if specified.
         * @param message DamageChartCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.DamageChartCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DamageChartCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MoveCostCfg. */
    interface IMoveCostCfg {

        /** MoveCostCfg tileType */
        tileType?: (number|null);

        /** MoveCostCfg moveType */
        moveType?: (number|null);

        /** MoveCostCfg cost */
        cost?: (number|null);
    }

    /** Represents a MoveCostCfg. */
    class MoveCostCfg implements IMoveCostCfg {

        /**
         * Constructs a new MoveCostCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IMoveCostCfg);

        /** MoveCostCfg tileType. */
        public tileType: number;

        /** MoveCostCfg moveType. */
        public moveType: number;

        /** MoveCostCfg cost. */
        public cost: number;

        /**
         * Creates a new MoveCostCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MoveCostCfg instance
         */
        public static create(properties?: Config.IMoveCostCfg): Config.MoveCostCfg;

        /**
         * Encodes the specified MoveCostCfg message. Does not implicitly {@link Config.MoveCostCfg.verify|verify} messages.
         * @param message MoveCostCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MoveCostCfg message, length delimited. Does not implicitly {@link Config.MoveCostCfg.verify|verify} messages.
         * @param message MoveCostCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IMoveCostCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MoveCostCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MoveCostCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.MoveCostCfg;

        /**
         * Decodes a MoveCostCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MoveCostCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.MoveCostCfg;

        /**
         * Verifies a MoveCostCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MoveCostCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MoveCostCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.MoveCostCfg;

        /**
         * Creates a plain object from a MoveCostCfg message. Also converts values to other types if specified.
         * @param message MoveCostCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.MoveCostCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MoveCostCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an UnitPromotionCfg. */
    interface IUnitPromotionCfg {

        /** UnitPromotionCfg promotion */
        promotion?: (number|null);

        /** UnitPromotionCfg attackBonus */
        attackBonus?: (number|null);

        /** UnitPromotionCfg defenseBonus */
        defenseBonus?: (number|null);
    }

    /** Represents an UnitPromotionCfg. */
    class UnitPromotionCfg implements IUnitPromotionCfg {

        /**
         * Constructs a new UnitPromotionCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IUnitPromotionCfg);

        /** UnitPromotionCfg promotion. */
        public promotion: number;

        /** UnitPromotionCfg attackBonus. */
        public attackBonus: number;

        /** UnitPromotionCfg defenseBonus. */
        public defenseBonus: number;

        /**
         * Creates a new UnitPromotionCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UnitPromotionCfg instance
         */
        public static create(properties?: Config.IUnitPromotionCfg): Config.UnitPromotionCfg;

        /**
         * Encodes the specified UnitPromotionCfg message. Does not implicitly {@link Config.UnitPromotionCfg.verify|verify} messages.
         * @param message UnitPromotionCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UnitPromotionCfg message, length delimited. Does not implicitly {@link Config.UnitPromotionCfg.verify|verify} messages.
         * @param message UnitPromotionCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IUnitPromotionCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes an UnitPromotionCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UnitPromotionCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.UnitPromotionCfg;

        /**
         * Decodes an UnitPromotionCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UnitPromotionCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.UnitPromotionCfg;

        /**
         * Verifies an UnitPromotionCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an UnitPromotionCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UnitPromotionCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.UnitPromotionCfg;

        /**
         * Creates a plain object from an UnitPromotionCfg message. Also converts values to other types if specified.
         * @param message UnitPromotionCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.UnitPromotionCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UnitPromotionCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VisionBonusCfg. */
    interface IVisionBonusCfg {

        /** VisionBonusCfg unitType */
        unitType?: (number|null);

        /** VisionBonusCfg tileType */
        tileType?: (number|null);

        /** VisionBonusCfg visionBonus */
        visionBonus?: (number|null);
    }

    /** Represents a VisionBonusCfg. */
    class VisionBonusCfg implements IVisionBonusCfg {

        /**
         * Constructs a new VisionBonusCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IVisionBonusCfg);

        /** VisionBonusCfg unitType. */
        public unitType: number;

        /** VisionBonusCfg tileType. */
        public tileType: number;

        /** VisionBonusCfg visionBonus. */
        public visionBonus: number;

        /**
         * Creates a new VisionBonusCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VisionBonusCfg instance
         */
        public static create(properties?: Config.IVisionBonusCfg): Config.VisionBonusCfg;

        /**
         * Encodes the specified VisionBonusCfg message. Does not implicitly {@link Config.VisionBonusCfg.verify|verify} messages.
         * @param message VisionBonusCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified VisionBonusCfg message, length delimited. Does not implicitly {@link Config.VisionBonusCfg.verify|verify} messages.
         * @param message VisionBonusCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IVisionBonusCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a VisionBonusCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VisionBonusCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.VisionBonusCfg;

        /**
         * Decodes a VisionBonusCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VisionBonusCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.VisionBonusCfg;

        /**
         * Verifies a VisionBonusCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VisionBonusCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VisionBonusCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.VisionBonusCfg;

        /**
         * Creates a plain object from a VisionBonusCfg message. Also converts values to other types if specified.
         * @param message VisionBonusCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.VisionBonusCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VisionBonusCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BuildableTileCfg. */
    interface IBuildableTileCfg {

        /** BuildableTileCfg unitType */
        unitType?: (number|null);

        /** BuildableTileCfg srcBaseType */
        srcBaseType?: (number|null);

        /** BuildableTileCfg srcObjectType */
        srcObjectType?: (number|null);

        /** BuildableTileCfg dstBaseType */
        dstBaseType?: (number|null);

        /** BuildableTileCfg dstObjectType */
        dstObjectType?: (number|null);
    }

    /** Represents a BuildableTileCfg. */
    class BuildableTileCfg implements IBuildableTileCfg {

        /**
         * Constructs a new BuildableTileCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IBuildableTileCfg);

        /** BuildableTileCfg unitType. */
        public unitType: number;

        /** BuildableTileCfg srcBaseType. */
        public srcBaseType: number;

        /** BuildableTileCfg srcObjectType. */
        public srcObjectType: number;

        /** BuildableTileCfg dstBaseType. */
        public dstBaseType: number;

        /** BuildableTileCfg dstObjectType. */
        public dstObjectType: number;

        /**
         * Creates a new BuildableTileCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BuildableTileCfg instance
         */
        public static create(properties?: Config.IBuildableTileCfg): Config.BuildableTileCfg;

        /**
         * Encodes the specified BuildableTileCfg message. Does not implicitly {@link Config.BuildableTileCfg.verify|verify} messages.
         * @param message BuildableTileCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BuildableTileCfg message, length delimited. Does not implicitly {@link Config.BuildableTileCfg.verify|verify} messages.
         * @param message BuildableTileCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IBuildableTileCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BuildableTileCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BuildableTileCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.BuildableTileCfg;

        /**
         * Decodes a BuildableTileCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BuildableTileCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.BuildableTileCfg;

        /**
         * Verifies a BuildableTileCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BuildableTileCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BuildableTileCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.BuildableTileCfg;

        /**
         * Creates a plain object from a BuildableTileCfg message. Also converts values to other types if specified.
         * @param message BuildableTileCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.BuildableTileCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BuildableTileCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlayerRankCfg. */
    interface IPlayerRankCfg {

        /** PlayerRankCfg minScore */
        minScore?: (number|null);

        /** PlayerRankCfg rank */
        rank?: (number|null);

        /** PlayerRankCfg nameList */
        nameList?: (string[]|null);
    }

    /** Represents a PlayerRankCfg. */
    class PlayerRankCfg implements IPlayerRankCfg {

        /**
         * Constructs a new PlayerRankCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IPlayerRankCfg);

        /** PlayerRankCfg minScore. */
        public minScore: number;

        /** PlayerRankCfg rank. */
        public rank: number;

        /** PlayerRankCfg nameList. */
        public nameList: string[];

        /**
         * Creates a new PlayerRankCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlayerRankCfg instance
         */
        public static create(properties?: Config.IPlayerRankCfg): Config.PlayerRankCfg;

        /**
         * Encodes the specified PlayerRankCfg message. Does not implicitly {@link Config.PlayerRankCfg.verify|verify} messages.
         * @param message PlayerRankCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified PlayerRankCfg message, length delimited. Does not implicitly {@link Config.PlayerRankCfg.verify|verify} messages.
         * @param message PlayerRankCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IPlayerRankCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a PlayerRankCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlayerRankCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.PlayerRankCfg;

        /**
         * Decodes a PlayerRankCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlayerRankCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.PlayerRankCfg;

        /**
         * Verifies a PlayerRankCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlayerRankCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlayerRankCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.PlayerRankCfg;

        /**
         * Creates a plain object from a PlayerRankCfg message. Also converts values to other types if specified.
         * @param message PlayerRankCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.PlayerRankCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlayerRankCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoBasicCfg. */
    interface ICoBasicCfg {

        /** CoBasicCfg coId */
        coId?: (number|null);

        /** CoBasicCfg name */
        name?: (string|null);

        /** CoBasicCfg zoneRadius */
        zoneRadius?: (number|null);

        /** CoBasicCfg boardCostPercentage */
        boardCostPercentage?: (number|null);

        /** CoBasicCfg zoneExpansionEnergyList */
        zoneExpansionEnergyList?: (number[]|null);

        /** CoBasicCfg powerEnergyList */
        powerEnergyList?: (number[]|null);

        /** CoBasicCfg isEnabled */
        isEnabled?: (number|null);

        /** CoBasicCfg designer */
        designer?: (string|null);

        /** CoBasicCfg fullPortrait */
        fullPortrait?: (string|null);

        /** CoBasicCfg tier */
        tier?: (number|null);

        /** CoBasicCfg maxLoadCount */
        maxLoadCount?: (number|null);

        /** CoBasicCfg passiveSkills */
        passiveSkills?: (number[]|null);

        /** CoBasicCfg powerSkills */
        powerSkills?: (number[]|null);

        /** CoBasicCfg superPowerSkills */
        superPowerSkills?: (number[]|null);
    }

    /** Represents a CoBasicCfg. */
    class CoBasicCfg implements ICoBasicCfg {

        /**
         * Constructs a new CoBasicCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ICoBasicCfg);

        /** CoBasicCfg coId. */
        public coId: number;

        /** CoBasicCfg name. */
        public name: string;

        /** CoBasicCfg zoneRadius. */
        public zoneRadius: number;

        /** CoBasicCfg boardCostPercentage. */
        public boardCostPercentage: number;

        /** CoBasicCfg zoneExpansionEnergyList. */
        public zoneExpansionEnergyList: number[];

        /** CoBasicCfg powerEnergyList. */
        public powerEnergyList: number[];

        /** CoBasicCfg isEnabled. */
        public isEnabled: number;

        /** CoBasicCfg designer. */
        public designer: string;

        /** CoBasicCfg fullPortrait. */
        public fullPortrait: string;

        /** CoBasicCfg tier. */
        public tier: number;

        /** CoBasicCfg maxLoadCount. */
        public maxLoadCount: number;

        /** CoBasicCfg passiveSkills. */
        public passiveSkills: number[];

        /** CoBasicCfg powerSkills. */
        public powerSkills: number[];

        /** CoBasicCfg superPowerSkills. */
        public superPowerSkills: number[];

        /**
         * Creates a new CoBasicCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoBasicCfg instance
         */
        public static create(properties?: Config.ICoBasicCfg): Config.CoBasicCfg;

        /**
         * Encodes the specified CoBasicCfg message. Does not implicitly {@link Config.CoBasicCfg.verify|verify} messages.
         * @param message CoBasicCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoBasicCfg message, length delimited. Does not implicitly {@link Config.CoBasicCfg.verify|verify} messages.
         * @param message CoBasicCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ICoBasicCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoBasicCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoBasicCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.CoBasicCfg;

        /**
         * Decodes a CoBasicCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoBasicCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.CoBasicCfg;

        /**
         * Verifies a CoBasicCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoBasicCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoBasicCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.CoBasicCfg;

        /**
         * Creates a plain object from a CoBasicCfg message. Also converts values to other types if specified.
         * @param message CoBasicCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.CoBasicCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoBasicCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a CoSkillCfg. */
    interface ICoSkillCfg {

        /** CoSkillCfg skillId */
        skillId?: (number|null);

        /** CoSkillCfg name */
        name?: (string|null);

        /** CoSkillCfg showZone */
        showZone?: (number|null);

        /** CoSkillCfg desc */
        desc?: (string[]|null);

        /** CoSkillCfg attackBonus */
        attackBonus?: (number[]|null);

        /** CoSkillCfg defenseBonus */
        defenseBonus?: (number[]|null);

        /** CoSkillCfg moveRangeBonus */
        moveRangeBonus?: (number[]|null);

        /** CoSkillCfg maxAttackRangeBonus */
        maxAttackRangeBonus?: (number[]|null);

        /** CoSkillCfg selfHpGain */
        selfHpGain?: (number[]|null);

        /** CoSkillCfg enemyHpGain */
        enemyHpGain?: (number[]|null);

        /** CoSkillCfg selfPrimaryAmmoGain */
        selfPrimaryAmmoGain?: (number[]|null);

        /** CoSkillCfg enemyPrimaryAmmoGain */
        enemyPrimaryAmmoGain?: (number[]|null);

        /** CoSkillCfg selfFuelGain */
        selfFuelGain?: (number[]|null);

        /** CoSkillCfg enemyFuelGain */
        enemyFuelGain?: (number[]|null);

        /** CoSkillCfg selfMaterialGain */
        selfMaterialGain?: (number[]|null);

        /** CoSkillCfg enemyMaterialGain */
        enemyMaterialGain?: (number[]|null);

        /** CoSkillCfg selfHpRecovery */
        selfHpRecovery?: (number[]|null);

        /** CoSkillCfg indiscriminateAreaDamage */
        indiscriminateAreaDamage?: (number[]|null);

        /** CoSkillCfg selfPromotionGain */
        selfPromotionGain?: (number[]|null);

        /** CoSkillCfg unitVisionRangeBonus */
        unitVisionRangeBonus?: (number[]|null);

        /** CoSkillCfg unitTrueVision */
        unitTrueVision?: (number[]|null);

        /** CoSkillCfg attackBonusByPromotion */
        attackBonusByPromotion?: (number[]|null);

        /** CoSkillCfg defenseBonusByPromotion */
        defenseBonusByPromotion?: (number[]|null);

        /** CoSkillCfg promotionBonusByAttack */
        promotionBonusByAttack?: (number[]|null);

        /** CoSkillCfg selfPrimaryAmmoRecovery */
        selfPrimaryAmmoRecovery?: (number[]|null);

        /** CoSkillCfg selfFuelRecovery */
        selfFuelRecovery?: (number[]|null);

        /** CoSkillCfg selfUnitProduction */
        selfUnitProduction?: (number[]|null);
    }

    /** Represents a CoSkillCfg. */
    class CoSkillCfg implements ICoSkillCfg {

        /**
         * Constructs a new CoSkillCfg.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.ICoSkillCfg);

        /** CoSkillCfg skillId. */
        public skillId: number;

        /** CoSkillCfg name. */
        public name: string;

        /** CoSkillCfg showZone. */
        public showZone: number;

        /** CoSkillCfg desc. */
        public desc: string[];

        /** CoSkillCfg attackBonus. */
        public attackBonus: number[];

        /** CoSkillCfg defenseBonus. */
        public defenseBonus: number[];

        /** CoSkillCfg moveRangeBonus. */
        public moveRangeBonus: number[];

        /** CoSkillCfg maxAttackRangeBonus. */
        public maxAttackRangeBonus: number[];

        /** CoSkillCfg selfHpGain. */
        public selfHpGain: number[];

        /** CoSkillCfg enemyHpGain. */
        public enemyHpGain: number[];

        /** CoSkillCfg selfPrimaryAmmoGain. */
        public selfPrimaryAmmoGain: number[];

        /** CoSkillCfg enemyPrimaryAmmoGain. */
        public enemyPrimaryAmmoGain: number[];

        /** CoSkillCfg selfFuelGain. */
        public selfFuelGain: number[];

        /** CoSkillCfg enemyFuelGain. */
        public enemyFuelGain: number[];

        /** CoSkillCfg selfMaterialGain. */
        public selfMaterialGain: number[];

        /** CoSkillCfg enemyMaterialGain. */
        public enemyMaterialGain: number[];

        /** CoSkillCfg selfHpRecovery. */
        public selfHpRecovery: number[];

        /** CoSkillCfg indiscriminateAreaDamage. */
        public indiscriminateAreaDamage: number[];

        /** CoSkillCfg selfPromotionGain. */
        public selfPromotionGain: number[];

        /** CoSkillCfg unitVisionRangeBonus. */
        public unitVisionRangeBonus: number[];

        /** CoSkillCfg unitTrueVision. */
        public unitTrueVision: number[];

        /** CoSkillCfg attackBonusByPromotion. */
        public attackBonusByPromotion: number[];

        /** CoSkillCfg defenseBonusByPromotion. */
        public defenseBonusByPromotion: number[];

        /** CoSkillCfg promotionBonusByAttack. */
        public promotionBonusByAttack: number[];

        /** CoSkillCfg selfPrimaryAmmoRecovery. */
        public selfPrimaryAmmoRecovery: number[];

        /** CoSkillCfg selfFuelRecovery. */
        public selfFuelRecovery: number[];

        /** CoSkillCfg selfUnitProduction. */
        public selfUnitProduction: number[];

        /**
         * Creates a new CoSkillCfg instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CoSkillCfg instance
         */
        public static create(properties?: Config.ICoSkillCfg): Config.CoSkillCfg;

        /**
         * Encodes the specified CoSkillCfg message. Does not implicitly {@link Config.CoSkillCfg.verify|verify} messages.
         * @param message CoSkillCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified CoSkillCfg message, length delimited. Does not implicitly {@link Config.CoSkillCfg.verify|verify} messages.
         * @param message CoSkillCfg message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.ICoSkillCfg, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a CoSkillCfg message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CoSkillCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.CoSkillCfg;

        /**
         * Decodes a CoSkillCfg message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CoSkillCfg
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.CoSkillCfg;

        /**
         * Verifies a CoSkillCfg message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CoSkillCfg message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CoSkillCfg
         */
        public static fromObject(object: { [k: string]: any }): Config.CoSkillCfg;

        /**
         * Creates a plain object from a CoSkillCfg message. Also converts values to other types if specified.
         * @param message CoSkillCfg
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.CoSkillCfg, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CoSkillCfg to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a FullConfig. */
    interface IFullConfig {

        /** FullConfig TileCategory */
        TileCategory?: (Config.ITileCategoryCfg[]|null);

        /** FullConfig UnitCategory */
        UnitCategory?: (Config.IUnitCategoryCfg[]|null);

        /** FullConfig TileTemplate */
        TileTemplate?: (Config.ITileTemplateCfg[]|null);

        /** FullConfig UnitTemplate */
        UnitTemplate?: (Config.IUnitTemplateCfg[]|null);

        /** FullConfig DamageChart */
        DamageChart?: (Config.IDamageChartCfg[]|null);

        /** FullConfig MoveCost */
        MoveCost?: (Config.IMoveCostCfg[]|null);

        /** FullConfig UnitPromotion */
        UnitPromotion?: (Config.IUnitPromotionCfg[]|null);

        /** FullConfig VisionBonus */
        VisionBonus?: (Config.IVisionBonusCfg[]|null);

        /** FullConfig BuildableTile */
        BuildableTile?: (Config.IBuildableTileCfg[]|null);

        /** FullConfig PlayerRank */
        PlayerRank?: (Config.IPlayerRankCfg[]|null);

        /** FullConfig CoBasic */
        CoBasic?: (Config.ICoBasicCfg[]|null);

        /** FullConfig CoSkill */
        CoSkill?: (Config.ICoSkillCfg[]|null);
    }

    /** Represents a FullConfig. */
    class FullConfig implements IFullConfig {

        /**
         * Constructs a new FullConfig.
         * @param [properties] Properties to set
         */
        constructor(properties?: Config.IFullConfig);

        /** FullConfig TileCategory. */
        public TileCategory: Config.ITileCategoryCfg[];

        /** FullConfig UnitCategory. */
        public UnitCategory: Config.IUnitCategoryCfg[];

        /** FullConfig TileTemplate. */
        public TileTemplate: Config.ITileTemplateCfg[];

        /** FullConfig UnitTemplate. */
        public UnitTemplate: Config.IUnitTemplateCfg[];

        /** FullConfig DamageChart. */
        public DamageChart: Config.IDamageChartCfg[];

        /** FullConfig MoveCost. */
        public MoveCost: Config.IMoveCostCfg[];

        /** FullConfig UnitPromotion. */
        public UnitPromotion: Config.IUnitPromotionCfg[];

        /** FullConfig VisionBonus. */
        public VisionBonus: Config.IVisionBonusCfg[];

        /** FullConfig BuildableTile. */
        public BuildableTile: Config.IBuildableTileCfg[];

        /** FullConfig PlayerRank. */
        public PlayerRank: Config.IPlayerRankCfg[];

        /** FullConfig CoBasic. */
        public CoBasic: Config.ICoBasicCfg[];

        /** FullConfig CoSkill. */
        public CoSkill: Config.ICoSkillCfg[];

        /**
         * Creates a new FullConfig instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FullConfig instance
         */
        public static create(properties?: Config.IFullConfig): Config.FullConfig;

        /**
         * Encodes the specified FullConfig message. Does not implicitly {@link Config.FullConfig.verify|verify} messages.
         * @param message FullConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified FullConfig message, length delimited. Does not implicitly {@link Config.FullConfig.verify|verify} messages.
         * @param message FullConfig message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Config.IFullConfig, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a FullConfig message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FullConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Config.FullConfig;

        /**
         * Decodes a FullConfig message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FullConfig
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Config.FullConfig;

        /**
         * Verifies a FullConfig message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FullConfig message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FullConfig
         */
        public static fromObject(object: { [k: string]: any }): Config.FullConfig;

        /**
         * Creates a plain object from a FullConfig message. Also converts values to other types if specified.
         * @param message FullConfig
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Config.FullConfig, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FullConfig to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Map. */
export declare interface IMap {
}

/** Represents a Map. */
export declare class Map implements IMap {

    /**
     * Constructs a new Map.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMap);

    /**
     * Creates a new Map instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Map instance
     */
    public static create(properties?: IMap): Map;

    /**
     * Encodes the specified Map message. Does not implicitly {@link Map.verify|verify} messages.
     * @param message Map message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMap, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Map message, length delimited. Does not implicitly {@link Map.verify|verify} messages.
     * @param message Map message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMap, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Map message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Map
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map;

    /**
     * Decodes a Map message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Map
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map;

    /**
     * Verifies a Map message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Map message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Map
     */
    public static fromObject(object: { [k: string]: any }): Map;

    /**
     * Creates a plain object from a Map message. Also converts values to other types if specified.
     * @param message Map
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Map, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Map to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Map {

    /** Properties of a DataForMapWarPlayerStatistics. */
    interface IDataForMapWarPlayerStatistics {

        /** DataForMapWarPlayerStatistics playerIndex */
        playerIndex?: (number|null);

        /** DataForMapWarPlayerStatistics wins */
        wins?: (number|null);

        /** DataForMapWarPlayerStatistics loses */
        loses?: (number|null);

        /** DataForMapWarPlayerStatistics draws */
        draws?: (number|null);
    }

    /** Represents a DataForMapWarPlayerStatistics. */
    class DataForMapWarPlayerStatistics implements IDataForMapWarPlayerStatistics {

        /**
         * Constructs a new DataForMapWarPlayerStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForMapWarPlayerStatistics);

        /** DataForMapWarPlayerStatistics playerIndex. */
        public playerIndex: number;

        /** DataForMapWarPlayerStatistics wins. */
        public wins: number;

        /** DataForMapWarPlayerStatistics loses. */
        public loses: number;

        /** DataForMapWarPlayerStatistics draws. */
        public draws: number;

        /**
         * Creates a new DataForMapWarPlayerStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMapWarPlayerStatistics instance
         */
        public static create(properties?: Map.IDataForMapWarPlayerStatistics): Map.DataForMapWarPlayerStatistics;

        /**
         * Encodes the specified DataForMapWarPlayerStatistics message. Does not implicitly {@link Map.DataForMapWarPlayerStatistics.verify|verify} messages.
         * @param message DataForMapWarPlayerStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForMapWarPlayerStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMapWarPlayerStatistics message, length delimited. Does not implicitly {@link Map.DataForMapWarPlayerStatistics.verify|verify} messages.
         * @param message DataForMapWarPlayerStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForMapWarPlayerStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMapWarPlayerStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMapWarPlayerStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForMapWarPlayerStatistics;

        /**
         * Decodes a DataForMapWarPlayerStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMapWarPlayerStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForMapWarPlayerStatistics;

        /**
         * Verifies a DataForMapWarPlayerStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMapWarPlayerStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMapWarPlayerStatistics
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForMapWarPlayerStatistics;

        /**
         * Creates a plain object from a DataForMapWarPlayerStatistics message. Also converts values to other types if specified.
         * @param message DataForMapWarPlayerStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForMapWarPlayerStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMapWarPlayerStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForMapWarStatistics. */
    interface IDataForMapWarStatistics {

        /** DataForMapWarStatistics totalPlayedTimes */
        totalPlayedTimes?: (number|null);

        /** DataForMapWarStatistics totalTurns */
        totalTurns?: (number|null);

        /** DataForMapWarStatistics warType */
        warType?: (number|null);

        /** DataForMapWarStatistics playerStatisticsArray */
        playerStatisticsArray?: (Map.IDataForMapWarPlayerStatistics[]|null);
    }

    /** Represents a DataForMapWarStatistics. */
    class DataForMapWarStatistics implements IDataForMapWarStatistics {

        /**
         * Constructs a new DataForMapWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForMapWarStatistics);

        /** DataForMapWarStatistics totalPlayedTimes. */
        public totalPlayedTimes: number;

        /** DataForMapWarStatistics totalTurns. */
        public totalTurns: number;

        /** DataForMapWarStatistics warType. */
        public warType: number;

        /** DataForMapWarStatistics playerStatisticsArray. */
        public playerStatisticsArray: Map.IDataForMapWarPlayerStatistics[];

        /**
         * Creates a new DataForMapWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMapWarStatistics instance
         */
        public static create(properties?: Map.IDataForMapWarStatistics): Map.DataForMapWarStatistics;

        /**
         * Encodes the specified DataForMapWarStatistics message. Does not implicitly {@link Map.DataForMapWarStatistics.verify|verify} messages.
         * @param message DataForMapWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForMapWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMapWarStatistics message, length delimited. Does not implicitly {@link Map.DataForMapWarStatistics.verify|verify} messages.
         * @param message DataForMapWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForMapWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMapWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMapWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForMapWarStatistics;

        /**
         * Decodes a DataForMapWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMapWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForMapWarStatistics;

        /**
         * Verifies a DataForMapWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMapWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMapWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForMapWarStatistics;

        /**
         * Creates a plain object from a DataForMapWarStatistics message. Also converts values to other types if specified.
         * @param message DataForMapWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForMapWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMapWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForMapAvailability. */
    interface IDataForMapAvailability {

        /** DataForMapAvailability canMcw */
        canMcw?: (boolean|null);

        /** DataForMapAvailability canScw */
        canScw?: (boolean|null);

        /** DataForMapAvailability canMrwStd */
        canMrwStd?: (boolean|null);

        /** DataForMapAvailability canMrwFog */
        canMrwFog?: (boolean|null);
    }

    /** Represents a DataForMapAvailability. */
    class DataForMapAvailability implements IDataForMapAvailability {

        /**
         * Constructs a new DataForMapAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForMapAvailability);

        /** DataForMapAvailability canMcw. */
        public canMcw: boolean;

        /** DataForMapAvailability canScw. */
        public canScw: boolean;

        /** DataForMapAvailability canMrwStd. */
        public canMrwStd: boolean;

        /** DataForMapAvailability canMrwFog. */
        public canMrwFog: boolean;

        /**
         * Creates a new DataForMapAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMapAvailability instance
         */
        public static create(properties?: Map.IDataForMapAvailability): Map.DataForMapAvailability;

        /**
         * Encodes the specified DataForMapAvailability message. Does not implicitly {@link Map.DataForMapAvailability.verify|verify} messages.
         * @param message DataForMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMapAvailability message, length delimited. Does not implicitly {@link Map.DataForMapAvailability.verify|verify} messages.
         * @param message DataForMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMapAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForMapAvailability;

        /**
         * Decodes a DataForMapAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForMapAvailability;

        /**
         * Verifies a DataForMapAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMapAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMapAvailability
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForMapAvailability;

        /**
         * Creates a plain object from a DataForMapAvailability message. Also converts values to other types if specified.
         * @param message DataForMapAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForMapAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMapAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForMapTag. */
    interface IDataForMapTag {

        /** DataForMapTag fog */
        fog?: (boolean|null);
    }

    /** Represents a DataForMapTag. */
    class DataForMapTag implements IDataForMapTag {

        /**
         * Constructs a new DataForMapTag.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IDataForMapTag);

        /** DataForMapTag fog. */
        public fog: boolean;

        /**
         * Creates a new DataForMapTag instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMapTag instance
         */
        public static create(properties?: Map.IDataForMapTag): Map.DataForMapTag;

        /**
         * Encodes the specified DataForMapTag message. Does not implicitly {@link Map.DataForMapTag.verify|verify} messages.
         * @param message DataForMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IDataForMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMapTag message, length delimited. Does not implicitly {@link Map.DataForMapTag.verify|verify} messages.
         * @param message DataForMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IDataForMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMapTag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.DataForMapTag;

        /**
         * Decodes a DataForMapTag message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.DataForMapTag;

        /**
         * Verifies a DataForMapTag message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMapTag message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMapTag
         */
        public static fromObject(object: { [k: string]: any }): Map.DataForMapTag;

        /**
         * Creates a plain object from a DataForMapTag message. Also converts values to other types if specified.
         * @param message DataForMapTag
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.DataForMapTag, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMapTag to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventFullData. */
    interface IWarEventFullData {

        /** WarEventFullData conditionArray */
        conditionArray?: (WarEvent.IWarEventCondition[]|null);

        /** WarEventFullData conditionNodeArray */
        conditionNodeArray?: (WarEvent.IWarEventConditionNode[]|null);

        /** WarEventFullData actionArray */
        actionArray?: (WarEvent.IWarEventAction[]|null);

        /** WarEventFullData eventArray */
        eventArray?: (WarEvent.IWarEvent[]|null);
    }

    /** Represents a WarEventFullData. */
    class WarEventFullData implements IWarEventFullData {

        /**
         * Constructs a new WarEventFullData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IWarEventFullData);

        /** WarEventFullData conditionArray. */
        public conditionArray: WarEvent.IWarEventCondition[];

        /** WarEventFullData conditionNodeArray. */
        public conditionNodeArray: WarEvent.IWarEventConditionNode[];

        /** WarEventFullData actionArray. */
        public actionArray: WarEvent.IWarEventAction[];

        /** WarEventFullData eventArray. */
        public eventArray: WarEvent.IWarEvent[];

        /**
         * Creates a new WarEventFullData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventFullData instance
         */
        public static create(properties?: Map.IWarEventFullData): Map.WarEventFullData;

        /**
         * Encodes the specified WarEventFullData message. Does not implicitly {@link Map.WarEventFullData.verify|verify} messages.
         * @param message WarEventFullData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IWarEventFullData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventFullData message, length delimited. Does not implicitly {@link Map.WarEventFullData.verify|verify} messages.
         * @param message WarEventFullData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IWarEventFullData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventFullData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventFullData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.WarEventFullData;

        /**
         * Decodes a WarEventFullData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventFullData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.WarEventFullData;

        /**
         * Verifies a WarEventFullData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventFullData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventFullData
         */
        public static fromObject(object: { [k: string]: any }): Map.WarEventFullData;

        /**
         * Creates a plain object from a WarEventFullData message. Also converts values to other types if specified.
         * @param message WarEventFullData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.WarEventFullData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventFullData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapComplexInfo. */
    interface IMapComplexInfo {

        /** MapComplexInfo availability */
        availability?: (Map.IDataForMapAvailability|null);

        /** MapComplexInfo warStatisticsArray */
        warStatisticsArray?: (Map.IDataForMapWarStatistics[]|null);
    }

    /** Represents a MapComplexInfo. */
    class MapComplexInfo implements IMapComplexInfo {

        /**
         * Constructs a new MapComplexInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapComplexInfo);

        /** MapComplexInfo availability. */
        public availability?: (Map.IDataForMapAvailability|null);

        /** MapComplexInfo warStatisticsArray. */
        public warStatisticsArray: Map.IDataForMapWarStatistics[];

        /**
         * Creates a new MapComplexInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapComplexInfo instance
         */
        public static create(properties?: Map.IMapComplexInfo): Map.MapComplexInfo;

        /**
         * Encodes the specified MapComplexInfo message. Does not implicitly {@link Map.MapComplexInfo.verify|verify} messages.
         * @param message MapComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapComplexInfo message, length delimited. Does not implicitly {@link Map.MapComplexInfo.verify|verify} messages.
         * @param message MapComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapComplexInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapComplexInfo;

        /**
         * Decodes a MapComplexInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapComplexInfo;

        /**
         * Verifies a MapComplexInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapComplexInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapComplexInfo
         */
        public static fromObject(object: { [k: string]: any }): Map.MapComplexInfo;

        /**
         * Creates a plain object from a MapComplexInfo message. Also converts values to other types if specified.
         * @param message MapComplexInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapComplexInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapRawData. */
    interface IMapRawData {

        /** MapRawData mapId */
        mapId?: (number|null);

        /** MapRawData designerName */
        designerName?: (string|null);

        /** MapRawData designerUserId */
        designerUserId?: (number|null);

        /** MapRawData mapNameArray */
        mapNameArray?: (Structure.ILanguageText[]|null);

        /** MapRawData mapWidth */
        mapWidth?: (number|null);

        /** MapRawData mapHeight */
        mapHeight?: (number|null);

        /** MapRawData playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** MapRawData modifiedTime */
        modifiedTime?: (number|null);

        /** MapRawData tileDataArray */
        tileDataArray?: (WarSerialization.ISerialTile[]|null);

        /** MapRawData unitDataArray */
        unitDataArray?: (WarSerialization.ISerialUnit[]|null);

        /** MapRawData warRuleArray */
        warRuleArray?: (WarRule.IWarRule[]|null);

        /** MapRawData warEventFullData */
        warEventFullData?: (Map.IWarEventFullData|null);

        /** MapRawData mapTag */
        mapTag?: (Map.IDataForMapTag|null);
    }

    /** Represents a MapRawData. */
    class MapRawData implements IMapRawData {

        /**
         * Constructs a new MapRawData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapRawData);

        /** MapRawData mapId. */
        public mapId: number;

        /** MapRawData designerName. */
        public designerName: string;

        /** MapRawData designerUserId. */
        public designerUserId: number;

        /** MapRawData mapNameArray. */
        public mapNameArray: Structure.ILanguageText[];

        /** MapRawData mapWidth. */
        public mapWidth: number;

        /** MapRawData mapHeight. */
        public mapHeight: number;

        /** MapRawData playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** MapRawData modifiedTime. */
        public modifiedTime: number;

        /** MapRawData tileDataArray. */
        public tileDataArray: WarSerialization.ISerialTile[];

        /** MapRawData unitDataArray. */
        public unitDataArray: WarSerialization.ISerialUnit[];

        /** MapRawData warRuleArray. */
        public warRuleArray: WarRule.IWarRule[];

        /** MapRawData warEventFullData. */
        public warEventFullData?: (Map.IWarEventFullData|null);

        /** MapRawData mapTag. */
        public mapTag?: (Map.IDataForMapTag|null);

        /**
         * Creates a new MapRawData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapRawData instance
         */
        public static create(properties?: Map.IMapRawData): Map.MapRawData;

        /**
         * Encodes the specified MapRawData message. Does not implicitly {@link Map.MapRawData.verify|verify} messages.
         * @param message MapRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapRawData message, length delimited. Does not implicitly {@link Map.MapRawData.verify|verify} messages.
         * @param message MapRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapRawData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapRawData;

        /**
         * Decodes a MapRawData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapRawData;

        /**
         * Verifies a MapRawData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapRawData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapRawData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapRawData;

        /**
         * Creates a plain object from a MapRawData message. Also converts values to other types if specified.
         * @param message MapRawData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapRawData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapExtraData. */
    interface IMapExtraData {

        /** MapExtraData mapId */
        mapId?: (number|null);

        /** MapExtraData isEnabled */
        isEnabled?: (boolean|null);

        /** MapExtraData totalRating */
        totalRating?: (number|null);

        /** MapExtraData totalRaters */
        totalRaters?: (number|null);

        /** MapExtraData mapComplexInfo */
        mapComplexInfo?: (Map.IMapComplexInfo|null);
    }

    /** Represents a MapExtraData. */
    class MapExtraData implements IMapExtraData {

        /**
         * Constructs a new MapExtraData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapExtraData);

        /** MapExtraData mapId. */
        public mapId: number;

        /** MapExtraData isEnabled. */
        public isEnabled: boolean;

        /** MapExtraData totalRating. */
        public totalRating: number;

        /** MapExtraData totalRaters. */
        public totalRaters: number;

        /** MapExtraData mapComplexInfo. */
        public mapComplexInfo?: (Map.IMapComplexInfo|null);

        /**
         * Creates a new MapExtraData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapExtraData instance
         */
        public static create(properties?: Map.IMapExtraData): Map.MapExtraData;

        /**
         * Encodes the specified MapExtraData message. Does not implicitly {@link Map.MapExtraData.verify|verify} messages.
         * @param message MapExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapExtraData message, length delimited. Does not implicitly {@link Map.MapExtraData.verify|verify} messages.
         * @param message MapExtraData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapExtraData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapExtraData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapExtraData;

        /**
         * Decodes a MapExtraData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapExtraData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapExtraData;

        /**
         * Verifies a MapExtraData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapExtraData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapExtraData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapExtraData;

        /**
         * Creates a plain object from a MapExtraData message. Also converts values to other types if specified.
         * @param message MapExtraData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapExtraData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapExtraData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapBriefData. */
    interface IMapBriefData {

        /** MapBriefData mapExtraData */
        mapExtraData?: (Map.IMapExtraData|null);

        /** MapBriefData playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** MapBriefData designerName */
        designerName?: (string|null);

        /** MapBriefData mapNameArray */
        mapNameArray?: (Structure.ILanguageText[]|null);

        /** MapBriefData mapTag */
        mapTag?: (Map.IDataForMapTag|null);
    }

    /** Represents a MapBriefData. */
    class MapBriefData implements IMapBriefData {

        /**
         * Constructs a new MapBriefData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapBriefData);

        /** MapBriefData mapExtraData. */
        public mapExtraData?: (Map.IMapExtraData|null);

        /** MapBriefData playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** MapBriefData designerName. */
        public designerName: string;

        /** MapBriefData mapNameArray. */
        public mapNameArray: Structure.ILanguageText[];

        /** MapBriefData mapTag. */
        public mapTag?: (Map.IDataForMapTag|null);

        /**
         * Creates a new MapBriefData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapBriefData instance
         */
        public static create(properties?: Map.IMapBriefData): Map.MapBriefData;

        /**
         * Encodes the specified MapBriefData message. Does not implicitly {@link Map.MapBriefData.verify|verify} messages.
         * @param message MapBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapBriefData message, length delimited. Does not implicitly {@link Map.MapBriefData.verify|verify} messages.
         * @param message MapBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapBriefData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapBriefData;

        /**
         * Decodes a MapBriefData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapBriefData;

        /**
         * Verifies a MapBriefData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapBriefData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapBriefData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapBriefData;

        /**
         * Creates a plain object from a MapBriefData message. Also converts values to other types if specified.
         * @param message MapBriefData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapBriefData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapBriefData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MapEditorData. */
    interface IMapEditorData {

        /** MapEditorData slotIndex */
        slotIndex?: (number|null);

        /** MapEditorData mapRawData */
        mapRawData?: (Map.IMapRawData|null);

        /** MapEditorData reviewStatus */
        reviewStatus?: (number|null);

        /** MapEditorData reviewComment */
        reviewComment?: (string|null);
    }

    /** Represents a MapEditorData. */
    class MapEditorData implements IMapEditorData {

        /**
         * Constructs a new MapEditorData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Map.IMapEditorData);

        /** MapEditorData slotIndex. */
        public slotIndex: number;

        /** MapEditorData mapRawData. */
        public mapRawData?: (Map.IMapRawData|null);

        /** MapEditorData reviewStatus. */
        public reviewStatus: number;

        /** MapEditorData reviewComment. */
        public reviewComment: string;

        /**
         * Creates a new MapEditorData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MapEditorData instance
         */
        public static create(properties?: Map.IMapEditorData): Map.MapEditorData;

        /**
         * Encodes the specified MapEditorData message. Does not implicitly {@link Map.MapEditorData.verify|verify} messages.
         * @param message MapEditorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MapEditorData message, length delimited. Does not implicitly {@link Map.MapEditorData.verify|verify} messages.
         * @param message MapEditorData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Map.IMapEditorData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MapEditorData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MapEditorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Map.MapEditorData;

        /**
         * Decodes a MapEditorData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MapEditorData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Map.MapEditorData;

        /**
         * Verifies a MapEditorData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MapEditorData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MapEditorData
         */
        public static fromObject(object: { [k: string]: any }): Map.MapEditorData;

        /**
         * Creates a plain object from a MapEditorData message. Also converts values to other types if specified.
         * @param message MapEditorData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Map.MapEditorData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MapEditorData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarEvent. */
export declare interface IWarEvent {
}

/** Represents a WarEvent. */
export declare class WarEvent implements IWarEvent {

    /**
     * Constructs a new WarEvent.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarEvent);

    /**
     * Creates a new WarEvent instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarEvent instance
     */
    public static create(properties?: IWarEvent): WarEvent;

    /**
     * Encodes the specified WarEvent message. Does not implicitly {@link WarEvent.verify|verify} messages.
     * @param message WarEvent message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarEvent message, length delimited. Does not implicitly {@link WarEvent.verify|verify} messages.
     * @param message WarEvent message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarEvent message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarEvent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent;

    /**
     * Decodes a WarEvent message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarEvent
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent;

    /**
     * Verifies a WarEvent message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarEvent message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarEvent
     */
    public static fromObject(object: { [k: string]: any }): WarEvent;

    /**
     * Creates a plain object from a WarEvent message. Also converts values to other types if specified.
     * @param message WarEvent
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarEvent to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarEvent {

    /** Properties of a WecCommonData. */
    interface IWecCommonData {

        /** WecCommonData conditionId */
        conditionId?: (number|null);
    }

    /** Represents a WecCommonData. */
    class WecCommonData implements IWecCommonData {

        /**
         * Constructs a new WecCommonData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecCommonData);

        /** WecCommonData conditionId. */
        public conditionId: number;

        /**
         * Creates a new WecCommonData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecCommonData instance
         */
        public static create(properties?: WarEvent.IWecCommonData): WarEvent.WecCommonData;

        /**
         * Encodes the specified WecCommonData message. Does not implicitly {@link WarEvent.WecCommonData.verify|verify} messages.
         * @param message WecCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecCommonData message, length delimited. Does not implicitly {@link WarEvent.WecCommonData.verify|verify} messages.
         * @param message WecCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecCommonData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecCommonData;

        /**
         * Decodes a WecCommonData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecCommonData;

        /**
         * Verifies a WecCommonData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecCommonData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecCommonData
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecCommonData;

        /**
         * Creates a plain object from a WecCommonData message. Also converts values to other types if specified.
         * @param message WecCommonData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecCommonData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecCommonData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexEqualTo. */
    interface IWecTurnIndexEqualTo {

        /** WecTurnIndexEqualTo valueEqualTo */
        valueEqualTo?: (number|null);

        /** WecTurnIndexEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexEqualTo. */
    class WecTurnIndexEqualTo implements IWecTurnIndexEqualTo {

        /**
         * Constructs a new WecTurnIndexEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexEqualTo);

        /** WecTurnIndexEqualTo valueEqualTo. */
        public valueEqualTo: number;

        /** WecTurnIndexEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexEqualTo): WarEvent.WecTurnIndexEqualTo;

        /**
         * Encodes the specified WecTurnIndexEqualTo message. Does not implicitly {@link WarEvent.WecTurnIndexEqualTo.verify|verify} messages.
         * @param message WecTurnIndexEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexEqualTo.verify|verify} messages.
         * @param message WecTurnIndexEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexEqualTo;

        /**
         * Decodes a WecTurnIndexEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexEqualTo;

        /**
         * Verifies a WecTurnIndexEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexEqualTo;

        /**
         * Creates a plain object from a WecTurnIndexEqualTo message. Also converts values to other types if specified.
         * @param message WecTurnIndexEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexGreaterThan. */
    interface IWecTurnIndexGreaterThan {

        /** WecTurnIndexGreaterThan valueGreaterThan */
        valueGreaterThan?: (number|null);

        /** WecTurnIndexGreaterThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexGreaterThan. */
    class WecTurnIndexGreaterThan implements IWecTurnIndexGreaterThan {

        /**
         * Constructs a new WecTurnIndexGreaterThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexGreaterThan);

        /** WecTurnIndexGreaterThan valueGreaterThan. */
        public valueGreaterThan: number;

        /** WecTurnIndexGreaterThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexGreaterThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexGreaterThan instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexGreaterThan): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Encodes the specified WecTurnIndexGreaterThan message. Does not implicitly {@link WarEvent.WecTurnIndexGreaterThan.verify|verify} messages.
         * @param message WecTurnIndexGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexGreaterThan message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexGreaterThan.verify|verify} messages.
         * @param message WecTurnIndexGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexGreaterThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Decodes a WecTurnIndexGreaterThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Verifies a WecTurnIndexGreaterThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexGreaterThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexGreaterThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexGreaterThan;

        /**
         * Creates a plain object from a WecTurnIndexGreaterThan message. Also converts values to other types if specified.
         * @param message WecTurnIndexGreaterThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexGreaterThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexGreaterThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexLessThan. */
    interface IWecTurnIndexLessThan {

        /** WecTurnIndexLessThan valueLessThan */
        valueLessThan?: (number|null);

        /** WecTurnIndexLessThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexLessThan. */
    class WecTurnIndexLessThan implements IWecTurnIndexLessThan {

        /**
         * Constructs a new WecTurnIndexLessThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexLessThan);

        /** WecTurnIndexLessThan valueLessThan. */
        public valueLessThan: number;

        /** WecTurnIndexLessThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexLessThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexLessThan instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexLessThan): WarEvent.WecTurnIndexLessThan;

        /**
         * Encodes the specified WecTurnIndexLessThan message. Does not implicitly {@link WarEvent.WecTurnIndexLessThan.verify|verify} messages.
         * @param message WecTurnIndexLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexLessThan message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexLessThan.verify|verify} messages.
         * @param message WecTurnIndexLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexLessThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexLessThan;

        /**
         * Decodes a WecTurnIndexLessThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexLessThan;

        /**
         * Verifies a WecTurnIndexLessThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexLessThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexLessThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexLessThan;

        /**
         * Creates a plain object from a WecTurnIndexLessThan message. Also converts values to other types if specified.
         * @param message WecTurnIndexLessThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexLessThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexLessThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnIndexRemainderEqualTo. */
    interface IWecTurnIndexRemainderEqualTo {

        /** WecTurnIndexRemainderEqualTo divider */
        divider?: (number|null);

        /** WecTurnIndexRemainderEqualTo remainderEqualTo */
        remainderEqualTo?: (number|null);

        /** WecTurnIndexRemainderEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnIndexRemainderEqualTo. */
    class WecTurnIndexRemainderEqualTo implements IWecTurnIndexRemainderEqualTo {

        /**
         * Constructs a new WecTurnIndexRemainderEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnIndexRemainderEqualTo);

        /** WecTurnIndexRemainderEqualTo divider. */
        public divider: number;

        /** WecTurnIndexRemainderEqualTo remainderEqualTo. */
        public remainderEqualTo: number;

        /** WecTurnIndexRemainderEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnIndexRemainderEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnIndexRemainderEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTurnIndexRemainderEqualTo): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Encodes the specified WecTurnIndexRemainderEqualTo message. Does not implicitly {@link WarEvent.WecTurnIndexRemainderEqualTo.verify|verify} messages.
         * @param message WecTurnIndexRemainderEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnIndexRemainderEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnIndexRemainderEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTurnIndexRemainderEqualTo.verify|verify} messages.
         * @param message WecTurnIndexRemainderEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnIndexRemainderEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnIndexRemainderEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnIndexRemainderEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Decodes a WecTurnIndexRemainderEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnIndexRemainderEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Verifies a WecTurnIndexRemainderEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnIndexRemainderEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnIndexRemainderEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnIndexRemainderEqualTo;

        /**
         * Creates a plain object from a WecTurnIndexRemainderEqualTo message. Also converts values to other types if specified.
         * @param message WecTurnIndexRemainderEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnIndexRemainderEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnIndexRemainderEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecTurnPhaseEqualTo. */
    interface IWecTurnPhaseEqualTo {

        /** WecTurnPhaseEqualTo valueEqualTo */
        valueEqualTo?: (number|null);

        /** WecTurnPhaseEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecTurnPhaseEqualTo. */
    class WecTurnPhaseEqualTo implements IWecTurnPhaseEqualTo {

        /**
         * Constructs a new WecTurnPhaseEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecTurnPhaseEqualTo);

        /** WecTurnPhaseEqualTo valueEqualTo. */
        public valueEqualTo: number;

        /** WecTurnPhaseEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecTurnPhaseEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecTurnPhaseEqualTo instance
         */
        public static create(properties?: WarEvent.IWecTurnPhaseEqualTo): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Encodes the specified WecTurnPhaseEqualTo message. Does not implicitly {@link WarEvent.WecTurnPhaseEqualTo.verify|verify} messages.
         * @param message WecTurnPhaseEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecTurnPhaseEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecTurnPhaseEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecTurnPhaseEqualTo.verify|verify} messages.
         * @param message WecTurnPhaseEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecTurnPhaseEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecTurnPhaseEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecTurnPhaseEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Decodes a WecTurnPhaseEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecTurnPhaseEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Verifies a WecTurnPhaseEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecTurnPhaseEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecTurnPhaseEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecTurnPhaseEqualTo;

        /**
         * Creates a plain object from a WecTurnPhaseEqualTo message. Also converts values to other types if specified.
         * @param message WecTurnPhaseEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecTurnPhaseEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecTurnPhaseEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerIndexInTurnEqualTo. */
    interface IWecPlayerIndexInTurnEqualTo {

        /** WecPlayerIndexInTurnEqualTo valueEqualTo */
        valueEqualTo?: (number|null);

        /** WecPlayerIndexInTurnEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerIndexInTurnEqualTo. */
    class WecPlayerIndexInTurnEqualTo implements IWecPlayerIndexInTurnEqualTo {

        /**
         * Constructs a new WecPlayerIndexInTurnEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerIndexInTurnEqualTo);

        /** WecPlayerIndexInTurnEqualTo valueEqualTo. */
        public valueEqualTo: number;

        /** WecPlayerIndexInTurnEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerIndexInTurnEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerIndexInTurnEqualTo instance
         */
        public static create(properties?: WarEvent.IWecPlayerIndexInTurnEqualTo): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Encodes the specified WecPlayerIndexInTurnEqualTo message. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnEqualTo.verify|verify} messages.
         * @param message WecPlayerIndexInTurnEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerIndexInTurnEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerIndexInTurnEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnEqualTo.verify|verify} messages.
         * @param message WecPlayerIndexInTurnEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerIndexInTurnEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerIndexInTurnEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerIndexInTurnEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Decodes a WecPlayerIndexInTurnEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerIndexInTurnEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Verifies a WecPlayerIndexInTurnEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerIndexInTurnEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerIndexInTurnEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerIndexInTurnEqualTo;

        /**
         * Creates a plain object from a WecPlayerIndexInTurnEqualTo message. Also converts values to other types if specified.
         * @param message WecPlayerIndexInTurnEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerIndexInTurnEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerIndexInTurnEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerIndexInTurnGreaterThan. */
    interface IWecPlayerIndexInTurnGreaterThan {

        /** WecPlayerIndexInTurnGreaterThan valueGreaterThan */
        valueGreaterThan?: (number|null);

        /** WecPlayerIndexInTurnGreaterThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerIndexInTurnGreaterThan. */
    class WecPlayerIndexInTurnGreaterThan implements IWecPlayerIndexInTurnGreaterThan {

        /**
         * Constructs a new WecPlayerIndexInTurnGreaterThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerIndexInTurnGreaterThan);

        /** WecPlayerIndexInTurnGreaterThan valueGreaterThan. */
        public valueGreaterThan: number;

        /** WecPlayerIndexInTurnGreaterThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerIndexInTurnGreaterThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerIndexInTurnGreaterThan instance
         */
        public static create(properties?: WarEvent.IWecPlayerIndexInTurnGreaterThan): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Encodes the specified WecPlayerIndexInTurnGreaterThan message. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnGreaterThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerIndexInTurnGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerIndexInTurnGreaterThan message, length delimited. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnGreaterThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerIndexInTurnGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerIndexInTurnGreaterThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerIndexInTurnGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Decodes a WecPlayerIndexInTurnGreaterThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerIndexInTurnGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Verifies a WecPlayerIndexInTurnGreaterThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerIndexInTurnGreaterThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerIndexInTurnGreaterThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerIndexInTurnGreaterThan;

        /**
         * Creates a plain object from a WecPlayerIndexInTurnGreaterThan message. Also converts values to other types if specified.
         * @param message WecPlayerIndexInTurnGreaterThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerIndexInTurnGreaterThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerIndexInTurnGreaterThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerIndexInTurnLessThan. */
    interface IWecPlayerIndexInTurnLessThan {

        /** WecPlayerIndexInTurnLessThan valueLessThan */
        valueLessThan?: (number|null);

        /** WecPlayerIndexInTurnLessThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerIndexInTurnLessThan. */
    class WecPlayerIndexInTurnLessThan implements IWecPlayerIndexInTurnLessThan {

        /**
         * Constructs a new WecPlayerIndexInTurnLessThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerIndexInTurnLessThan);

        /** WecPlayerIndexInTurnLessThan valueLessThan. */
        public valueLessThan: number;

        /** WecPlayerIndexInTurnLessThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerIndexInTurnLessThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerIndexInTurnLessThan instance
         */
        public static create(properties?: WarEvent.IWecPlayerIndexInTurnLessThan): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Encodes the specified WecPlayerIndexInTurnLessThan message. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnLessThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerIndexInTurnLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerIndexInTurnLessThan message, length delimited. Does not implicitly {@link WarEvent.WecPlayerIndexInTurnLessThan.verify|verify} messages.
         * @param message WecPlayerIndexInTurnLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerIndexInTurnLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerIndexInTurnLessThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerIndexInTurnLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Decodes a WecPlayerIndexInTurnLessThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerIndexInTurnLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Verifies a WecPlayerIndexInTurnLessThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerIndexInTurnLessThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerIndexInTurnLessThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerIndexInTurnLessThan;

        /**
         * Creates a plain object from a WecPlayerIndexInTurnLessThan message. Also converts values to other types if specified.
         * @param message WecPlayerIndexInTurnLessThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerIndexInTurnLessThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerIndexInTurnLessThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCountTotalEqualTo. */
    interface IWecEventCalledCountTotalEqualTo {

        /** WecEventCalledCountTotalEqualTo eventIdEqualTo */
        eventIdEqualTo?: (number|null);

        /** WecEventCalledCountTotalEqualTo countEqualTo */
        countEqualTo?: (number|null);

        /** WecEventCalledCountTotalEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecEventCalledCountTotalEqualTo. */
    class WecEventCalledCountTotalEqualTo implements IWecEventCalledCountTotalEqualTo {

        /**
         * Constructs a new WecEventCalledCountTotalEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCountTotalEqualTo);

        /** WecEventCalledCountTotalEqualTo eventIdEqualTo. */
        public eventIdEqualTo: number;

        /** WecEventCalledCountTotalEqualTo countEqualTo. */
        public countEqualTo: number;

        /** WecEventCalledCountTotalEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecEventCalledCountTotalEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCountTotalEqualTo instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCountTotalEqualTo): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Encodes the specified WecEventCalledCountTotalEqualTo message. Does not implicitly {@link WarEvent.WecEventCalledCountTotalEqualTo.verify|verify} messages.
         * @param message WecEventCalledCountTotalEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCountTotalEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCountTotalEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCountTotalEqualTo.verify|verify} messages.
         * @param message WecEventCalledCountTotalEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCountTotalEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCountTotalEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCountTotalEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Decodes a WecEventCalledCountTotalEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCountTotalEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Verifies a WecEventCalledCountTotalEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCountTotalEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCountTotalEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCountTotalEqualTo;

        /**
         * Creates a plain object from a WecEventCalledCountTotalEqualTo message. Also converts values to other types if specified.
         * @param message WecEventCalledCountTotalEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCountTotalEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCountTotalEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCountTotalGreaterThan. */
    interface IWecEventCalledCountTotalGreaterThan {

        /** WecEventCalledCountTotalGreaterThan eventIdEqualTo */
        eventIdEqualTo?: (number|null);

        /** WecEventCalledCountTotalGreaterThan countGreaterThan */
        countGreaterThan?: (number|null);

        /** WecEventCalledCountTotalGreaterThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecEventCalledCountTotalGreaterThan. */
    class WecEventCalledCountTotalGreaterThan implements IWecEventCalledCountTotalGreaterThan {

        /**
         * Constructs a new WecEventCalledCountTotalGreaterThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCountTotalGreaterThan);

        /** WecEventCalledCountTotalGreaterThan eventIdEqualTo. */
        public eventIdEqualTo: number;

        /** WecEventCalledCountTotalGreaterThan countGreaterThan. */
        public countGreaterThan: number;

        /** WecEventCalledCountTotalGreaterThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecEventCalledCountTotalGreaterThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCountTotalGreaterThan instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCountTotalGreaterThan): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Encodes the specified WecEventCalledCountTotalGreaterThan message. Does not implicitly {@link WarEvent.WecEventCalledCountTotalGreaterThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCountTotalGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCountTotalGreaterThan message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCountTotalGreaterThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalGreaterThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCountTotalGreaterThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCountTotalGreaterThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCountTotalGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Decodes a WecEventCalledCountTotalGreaterThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCountTotalGreaterThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Verifies a WecEventCalledCountTotalGreaterThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCountTotalGreaterThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCountTotalGreaterThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCountTotalGreaterThan;

        /**
         * Creates a plain object from a WecEventCalledCountTotalGreaterThan message. Also converts values to other types if specified.
         * @param message WecEventCalledCountTotalGreaterThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCountTotalGreaterThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCountTotalGreaterThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecEventCalledCountTotalLessThan. */
    interface IWecEventCalledCountTotalLessThan {

        /** WecEventCalledCountTotalLessThan eventIdEqualTo */
        eventIdEqualTo?: (number|null);

        /** WecEventCalledCountTotalLessThan countLessThan */
        countLessThan?: (number|null);

        /** WecEventCalledCountTotalLessThan isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecEventCalledCountTotalLessThan. */
    class WecEventCalledCountTotalLessThan implements IWecEventCalledCountTotalLessThan {

        /**
         * Constructs a new WecEventCalledCountTotalLessThan.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecEventCalledCountTotalLessThan);

        /** WecEventCalledCountTotalLessThan eventIdEqualTo. */
        public eventIdEqualTo: number;

        /** WecEventCalledCountTotalLessThan countLessThan. */
        public countLessThan: number;

        /** WecEventCalledCountTotalLessThan isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecEventCalledCountTotalLessThan instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecEventCalledCountTotalLessThan instance
         */
        public static create(properties?: WarEvent.IWecEventCalledCountTotalLessThan): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Encodes the specified WecEventCalledCountTotalLessThan message. Does not implicitly {@link WarEvent.WecEventCalledCountTotalLessThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecEventCalledCountTotalLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecEventCalledCountTotalLessThan message, length delimited. Does not implicitly {@link WarEvent.WecEventCalledCountTotalLessThan.verify|verify} messages.
         * @param message WecEventCalledCountTotalLessThan message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecEventCalledCountTotalLessThan, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecEventCalledCountTotalLessThan message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecEventCalledCountTotalLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Decodes a WecEventCalledCountTotalLessThan message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecEventCalledCountTotalLessThan
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Verifies a WecEventCalledCountTotalLessThan message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecEventCalledCountTotalLessThan message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecEventCalledCountTotalLessThan
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecEventCalledCountTotalLessThan;

        /**
         * Creates a plain object from a WecEventCalledCountTotalLessThan message. Also converts values to other types if specified.
         * @param message WecEventCalledCountTotalLessThan
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecEventCalledCountTotalLessThan, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecEventCalledCountTotalLessThan to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WecPlayerAliveStateEqualTo. */
    interface IWecPlayerAliveStateEqualTo {

        /** WecPlayerAliveStateEqualTo playerIndexEqualTo */
        playerIndexEqualTo?: (number|null);

        /** WecPlayerAliveStateEqualTo aliveStateEqualTo */
        aliveStateEqualTo?: (number|null);

        /** WecPlayerAliveStateEqualTo isNot */
        isNot?: (boolean|null);
    }

    /** Represents a WecPlayerAliveStateEqualTo. */
    class WecPlayerAliveStateEqualTo implements IWecPlayerAliveStateEqualTo {

        /**
         * Constructs a new WecPlayerAliveStateEqualTo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWecPlayerAliveStateEqualTo);

        /** WecPlayerAliveStateEqualTo playerIndexEqualTo. */
        public playerIndexEqualTo: number;

        /** WecPlayerAliveStateEqualTo aliveStateEqualTo. */
        public aliveStateEqualTo: number;

        /** WecPlayerAliveStateEqualTo isNot. */
        public isNot: boolean;

        /**
         * Creates a new WecPlayerAliveStateEqualTo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WecPlayerAliveStateEqualTo instance
         */
        public static create(properties?: WarEvent.IWecPlayerAliveStateEqualTo): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Encodes the specified WecPlayerAliveStateEqualTo message. Does not implicitly {@link WarEvent.WecPlayerAliveStateEqualTo.verify|verify} messages.
         * @param message WecPlayerAliveStateEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWecPlayerAliveStateEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WecPlayerAliveStateEqualTo message, length delimited. Does not implicitly {@link WarEvent.WecPlayerAliveStateEqualTo.verify|verify} messages.
         * @param message WecPlayerAliveStateEqualTo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWecPlayerAliveStateEqualTo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WecPlayerAliveStateEqualTo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WecPlayerAliveStateEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Decodes a WecPlayerAliveStateEqualTo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WecPlayerAliveStateEqualTo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Verifies a WecPlayerAliveStateEqualTo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WecPlayerAliveStateEqualTo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WecPlayerAliveStateEqualTo
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WecPlayerAliveStateEqualTo;

        /**
         * Creates a plain object from a WecPlayerAliveStateEqualTo message. Also converts values to other types if specified.
         * @param message WecPlayerAliveStateEqualTo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WecPlayerAliveStateEqualTo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WecPlayerAliveStateEqualTo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventCondition. */
    interface IWarEventCondition {

        /** WarEventCondition WecCommonData */
        WecCommonData?: (WarEvent.IWecCommonData|null);

        /** WarEventCondition WecTurnIndexEqualTo */
        WecTurnIndexEqualTo?: (WarEvent.IWecTurnIndexEqualTo|null);

        /** WarEventCondition WecTurnIndexGreaterThan */
        WecTurnIndexGreaterThan?: (WarEvent.IWecTurnIndexGreaterThan|null);

        /** WarEventCondition WecTurnIndexLessThan */
        WecTurnIndexLessThan?: (WarEvent.IWecTurnIndexLessThan|null);

        /** WarEventCondition WecTurnIndexRemainderEqualTo */
        WecTurnIndexRemainderEqualTo?: (WarEvent.IWecTurnIndexRemainderEqualTo|null);

        /** WarEventCondition WecTurnPhaseEqualTo */
        WecTurnPhaseEqualTo?: (WarEvent.IWecTurnPhaseEqualTo|null);

        /** WarEventCondition WecPlayerIndexInTurnEqualTo */
        WecPlayerIndexInTurnEqualTo?: (WarEvent.IWecPlayerIndexInTurnEqualTo|null);

        /** WarEventCondition WecPlayerIndexInTurnGreaterThan */
        WecPlayerIndexInTurnGreaterThan?: (WarEvent.IWecPlayerIndexInTurnGreaterThan|null);

        /** WarEventCondition WecPlayerIndexInTurnLessThan */
        WecPlayerIndexInTurnLessThan?: (WarEvent.IWecPlayerIndexInTurnLessThan|null);

        /** WarEventCondition WecEventCalledCountTotalEqualTo */
        WecEventCalledCountTotalEqualTo?: (WarEvent.IWecEventCalledCountTotalEqualTo|null);

        /** WarEventCondition WecEventCalledCountTotalGreaterThan */
        WecEventCalledCountTotalGreaterThan?: (WarEvent.IWecEventCalledCountTotalGreaterThan|null);

        /** WarEventCondition WecEventCalledCountTotalLessThan */
        WecEventCalledCountTotalLessThan?: (WarEvent.IWecEventCalledCountTotalLessThan|null);

        /** WarEventCondition WecPlayerAliveStateEqualTo */
        WecPlayerAliveStateEqualTo?: (WarEvent.IWecPlayerAliveStateEqualTo|null);
    }

    /** Represents a WarEventCondition. */
    class WarEventCondition implements IWarEventCondition {

        /**
         * Constructs a new WarEventCondition.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventCondition);

        /** WarEventCondition WecCommonData. */
        public WecCommonData?: (WarEvent.IWecCommonData|null);

        /** WarEventCondition WecTurnIndexEqualTo. */
        public WecTurnIndexEqualTo?: (WarEvent.IWecTurnIndexEqualTo|null);

        /** WarEventCondition WecTurnIndexGreaterThan. */
        public WecTurnIndexGreaterThan?: (WarEvent.IWecTurnIndexGreaterThan|null);

        /** WarEventCondition WecTurnIndexLessThan. */
        public WecTurnIndexLessThan?: (WarEvent.IWecTurnIndexLessThan|null);

        /** WarEventCondition WecTurnIndexRemainderEqualTo. */
        public WecTurnIndexRemainderEqualTo?: (WarEvent.IWecTurnIndexRemainderEqualTo|null);

        /** WarEventCondition WecTurnPhaseEqualTo. */
        public WecTurnPhaseEqualTo?: (WarEvent.IWecTurnPhaseEqualTo|null);

        /** WarEventCondition WecPlayerIndexInTurnEqualTo. */
        public WecPlayerIndexInTurnEqualTo?: (WarEvent.IWecPlayerIndexInTurnEqualTo|null);

        /** WarEventCondition WecPlayerIndexInTurnGreaterThan. */
        public WecPlayerIndexInTurnGreaterThan?: (WarEvent.IWecPlayerIndexInTurnGreaterThan|null);

        /** WarEventCondition WecPlayerIndexInTurnLessThan. */
        public WecPlayerIndexInTurnLessThan?: (WarEvent.IWecPlayerIndexInTurnLessThan|null);

        /** WarEventCondition WecEventCalledCountTotalEqualTo. */
        public WecEventCalledCountTotalEqualTo?: (WarEvent.IWecEventCalledCountTotalEqualTo|null);

        /** WarEventCondition WecEventCalledCountTotalGreaterThan. */
        public WecEventCalledCountTotalGreaterThan?: (WarEvent.IWecEventCalledCountTotalGreaterThan|null);

        /** WarEventCondition WecEventCalledCountTotalLessThan. */
        public WecEventCalledCountTotalLessThan?: (WarEvent.IWecEventCalledCountTotalLessThan|null);

        /** WarEventCondition WecPlayerAliveStateEqualTo. */
        public WecPlayerAliveStateEqualTo?: (WarEvent.IWecPlayerAliveStateEqualTo|null);

        /**
         * Creates a new WarEventCondition instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventCondition instance
         */
        public static create(properties?: WarEvent.IWarEventCondition): WarEvent.WarEventCondition;

        /**
         * Encodes the specified WarEventCondition message. Does not implicitly {@link WarEvent.WarEventCondition.verify|verify} messages.
         * @param message WarEventCondition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventCondition, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventCondition message, length delimited. Does not implicitly {@link WarEvent.WarEventCondition.verify|verify} messages.
         * @param message WarEventCondition message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventCondition, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventCondition message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventCondition;

        /**
         * Decodes a WarEventCondition message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventCondition
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventCondition;

        /**
         * Verifies a WarEventCondition message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventCondition message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventCondition
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventCondition;

        /**
         * Creates a plain object from a WarEventCondition message. Also converts values to other types if specified.
         * @param message WarEventCondition
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventCondition, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventCondition to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventConditionNode. */
    interface IWarEventConditionNode {

        /** WarEventConditionNode nodeId */
        nodeId?: (number|null);

        /** WarEventConditionNode isAnd */
        isAnd?: (boolean|null);

        /** WarEventConditionNode subNodeIdArray */
        subNodeIdArray?: (number[]|null);

        /** WarEventConditionNode conditionIdArray */
        conditionIdArray?: (number[]|null);
    }

    /** Represents a WarEventConditionNode. */
    class WarEventConditionNode implements IWarEventConditionNode {

        /**
         * Constructs a new WarEventConditionNode.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventConditionNode);

        /** WarEventConditionNode nodeId. */
        public nodeId: number;

        /** WarEventConditionNode isAnd. */
        public isAnd: boolean;

        /** WarEventConditionNode subNodeIdArray. */
        public subNodeIdArray: number[];

        /** WarEventConditionNode conditionIdArray. */
        public conditionIdArray: number[];

        /**
         * Creates a new WarEventConditionNode instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventConditionNode instance
         */
        public static create(properties?: WarEvent.IWarEventConditionNode): WarEvent.WarEventConditionNode;

        /**
         * Encodes the specified WarEventConditionNode message. Does not implicitly {@link WarEvent.WarEventConditionNode.verify|verify} messages.
         * @param message WarEventConditionNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventConditionNode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventConditionNode message, length delimited. Does not implicitly {@link WarEvent.WarEventConditionNode.verify|verify} messages.
         * @param message WarEventConditionNode message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventConditionNode, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventConditionNode message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventConditionNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventConditionNode;

        /**
         * Decodes a WarEventConditionNode message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventConditionNode
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventConditionNode;

        /**
         * Verifies a WarEventConditionNode message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventConditionNode message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventConditionNode
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventConditionNode;

        /**
         * Creates a plain object from a WarEventConditionNode message. Also converts values to other types if specified.
         * @param message WarEventConditionNode
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventConditionNode, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventConditionNode to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventActionCommonData. */
    interface IWarEventActionCommonData {

        /** WarEventActionCommonData actionId */
        actionId?: (number|null);
    }

    /** Represents a WarEventActionCommonData. */
    class WarEventActionCommonData implements IWarEventActionCommonData {

        /**
         * Constructs a new WarEventActionCommonData.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventActionCommonData);

        /** WarEventActionCommonData actionId. */
        public actionId: number;

        /**
         * Creates a new WarEventActionCommonData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventActionCommonData instance
         */
        public static create(properties?: WarEvent.IWarEventActionCommonData): WarEvent.WarEventActionCommonData;

        /**
         * Encodes the specified WarEventActionCommonData message. Does not implicitly {@link WarEvent.WarEventActionCommonData.verify|verify} messages.
         * @param message WarEventActionCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventActionCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventActionCommonData message, length delimited. Does not implicitly {@link WarEvent.WarEventActionCommonData.verify|verify} messages.
         * @param message WarEventActionCommonData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventActionCommonData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventActionCommonData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventActionCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventActionCommonData;

        /**
         * Decodes a WarEventActionCommonData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventActionCommonData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventActionCommonData;

        /**
         * Verifies a WarEventActionCommonData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventActionCommonData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventActionCommonData
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventActionCommonData;

        /**
         * Creates a plain object from a WarEventActionCommonData message. Also converts values to other types if specified.
         * @param message WarEventActionCommonData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventActionCommonData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventActionCommonData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEventActionAddUnit. */
    interface IWarEventActionAddUnit {

        /** WarEventActionAddUnit unitArray */
        unitArray?: (WarEvent.WarEventActionAddUnit.IDataForAddUnit[]|null);
    }

    /** Represents a WarEventActionAddUnit. */
    class WarEventActionAddUnit implements IWarEventActionAddUnit {

        /**
         * Constructs a new WarEventActionAddUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventActionAddUnit);

        /** WarEventActionAddUnit unitArray. */
        public unitArray: WarEvent.WarEventActionAddUnit.IDataForAddUnit[];

        /**
         * Creates a new WarEventActionAddUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventActionAddUnit instance
         */
        public static create(properties?: WarEvent.IWarEventActionAddUnit): WarEvent.WarEventActionAddUnit;

        /**
         * Encodes the specified WarEventActionAddUnit message. Does not implicitly {@link WarEvent.WarEventActionAddUnit.verify|verify} messages.
         * @param message WarEventActionAddUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventActionAddUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventActionAddUnit message, length delimited. Does not implicitly {@link WarEvent.WarEventActionAddUnit.verify|verify} messages.
         * @param message WarEventActionAddUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventActionAddUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventActionAddUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventActionAddUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventActionAddUnit;

        /**
         * Decodes a WarEventActionAddUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventActionAddUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventActionAddUnit;

        /**
         * Verifies a WarEventActionAddUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventActionAddUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventActionAddUnit
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventActionAddUnit;

        /**
         * Creates a plain object from a WarEventActionAddUnit message. Also converts values to other types if specified.
         * @param message WarEventActionAddUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventActionAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventActionAddUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarEventActionAddUnit {

        /** Properties of a DataForAddUnit. */
        interface IDataForAddUnit {

            /** DataForAddUnit unitData */
            unitData?: (WarSerialization.ISerialUnit|null);

            /** DataForAddUnit canBeBlockedByUnit */
            canBeBlockedByUnit?: (boolean|null);

            /** DataForAddUnit needMovableTile */
            needMovableTile?: (boolean|null);
        }

        /** Represents a DataForAddUnit. */
        class DataForAddUnit implements IDataForAddUnit {

            /**
             * Constructs a new DataForAddUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarEvent.WarEventActionAddUnit.IDataForAddUnit);

            /** DataForAddUnit unitData. */
            public unitData?: (WarSerialization.ISerialUnit|null);

            /** DataForAddUnit canBeBlockedByUnit. */
            public canBeBlockedByUnit: boolean;

            /** DataForAddUnit needMovableTile. */
            public needMovableTile: boolean;

            /**
             * Creates a new DataForAddUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns DataForAddUnit instance
             */
            public static create(properties?: WarEvent.WarEventActionAddUnit.IDataForAddUnit): WarEvent.WarEventActionAddUnit.DataForAddUnit;

            /**
             * Encodes the specified DataForAddUnit message. Does not implicitly {@link WarEvent.WarEventActionAddUnit.DataForAddUnit.verify|verify} messages.
             * @param message DataForAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarEvent.WarEventActionAddUnit.IDataForAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified DataForAddUnit message, length delimited. Does not implicitly {@link WarEvent.WarEventActionAddUnit.DataForAddUnit.verify|verify} messages.
             * @param message DataForAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarEvent.WarEventActionAddUnit.IDataForAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a DataForAddUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns DataForAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventActionAddUnit.DataForAddUnit;

            /**
             * Decodes a DataForAddUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns DataForAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventActionAddUnit.DataForAddUnit;

            /**
             * Verifies a DataForAddUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a DataForAddUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns DataForAddUnit
             */
            public static fromObject(object: { [k: string]: any }): WarEvent.WarEventActionAddUnit.DataForAddUnit;

            /**
             * Creates a plain object from a DataForAddUnit message. Also converts values to other types if specified.
             * @param message DataForAddUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarEvent.WarEventActionAddUnit.DataForAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this DataForAddUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarEventAction. */
    interface IWarEventAction {

        /** WarEventAction WarEventActionCommonData */
        WarEventActionCommonData?: (WarEvent.IWarEventActionCommonData|null);

        /** WarEventAction WarEventActionAddUnit */
        WarEventActionAddUnit?: (WarEvent.IWarEventActionAddUnit|null);
    }

    /** Represents a WarEventAction. */
    class WarEventAction implements IWarEventAction {

        /**
         * Constructs a new WarEventAction.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEventAction);

        /** WarEventAction WarEventActionCommonData. */
        public WarEventActionCommonData?: (WarEvent.IWarEventActionCommonData|null);

        /** WarEventAction WarEventActionAddUnit. */
        public WarEventActionAddUnit?: (WarEvent.IWarEventActionAddUnit|null);

        /**
         * Creates a new WarEventAction instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEventAction instance
         */
        public static create(properties?: WarEvent.IWarEventAction): WarEvent.WarEventAction;

        /**
         * Encodes the specified WarEventAction message. Does not implicitly {@link WarEvent.WarEventAction.verify|verify} messages.
         * @param message WarEventAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEventAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEventAction message, length delimited. Does not implicitly {@link WarEvent.WarEventAction.verify|verify} messages.
         * @param message WarEventAction message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEventAction, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEventAction message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEventAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEventAction;

        /**
         * Decodes a WarEventAction message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEventAction
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEventAction;

        /**
         * Verifies a WarEventAction message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEventAction message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEventAction
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEventAction;

        /**
         * Creates a plain object from a WarEventAction message. Also converts values to other types if specified.
         * @param message WarEventAction
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEventAction, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEventAction to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarEvent. */
    interface IWarEvent {

        /** WarEvent eventId */
        eventId?: (number|null);

        /** WarEvent eventNameArray */
        eventNameArray?: (Structure.ILanguageText[]|null);

        /** WarEvent maxCallCountInPlayerTurn */
        maxCallCountInPlayerTurn?: (number|null);

        /** WarEvent maxCallCountTotal */
        maxCallCountTotal?: (number|null);

        /** WarEvent conditionNodeId */
        conditionNodeId?: (number|null);

        /** WarEvent actionIdArray */
        actionIdArray?: (number[]|null);
    }

    /** Represents a WarEvent. */
    class WarEvent implements IWarEvent {

        /**
         * Constructs a new WarEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarEvent.IWarEvent);

        /** WarEvent eventId. */
        public eventId: number;

        /** WarEvent eventNameArray. */
        public eventNameArray: Structure.ILanguageText[];

        /** WarEvent maxCallCountInPlayerTurn. */
        public maxCallCountInPlayerTurn: number;

        /** WarEvent maxCallCountTotal. */
        public maxCallCountTotal: number;

        /** WarEvent conditionNodeId. */
        public conditionNodeId: number;

        /** WarEvent actionIdArray. */
        public actionIdArray: number[];

        /**
         * Creates a new WarEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarEvent instance
         */
        public static create(properties?: WarEvent.IWarEvent): WarEvent.WarEvent;

        /**
         * Encodes the specified WarEvent message. Does not implicitly {@link WarEvent.WarEvent.verify|verify} messages.
         * @param message WarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarEvent.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarEvent message, length delimited. Does not implicitly {@link WarEvent.WarEvent.verify|verify} messages.
         * @param message WarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarEvent.IWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarEvent.WarEvent;

        /**
         * Decodes a WarEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarEvent.WarEvent;

        /**
         * Verifies a WarEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarEvent
         */
        public static fromObject(object: { [k: string]: any }): WarEvent.WarEvent;

        /**
         * Creates a plain object from a WarEvent message. Also converts values to other types if specified.
         * @param message WarEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarEvent.WarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarRule. */
export declare interface IWarRule {
}

/** Represents a WarRule. */
export declare class WarRule implements IWarRule {

    /**
     * Constructs a new WarRule.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarRule);

    /**
     * Creates a new WarRule instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarRule instance
     */
    public static create(properties?: IWarRule): WarRule;

    /**
     * Encodes the specified WarRule message. Does not implicitly {@link WarRule.verify|verify} messages.
     * @param message WarRule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarRule, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarRule message, length delimited. Does not implicitly {@link WarRule.verify|verify} messages.
     * @param message WarRule message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarRule, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarRule message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarRule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule;

    /**
     * Decodes a WarRule message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarRule
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule;

    /**
     * Verifies a WarRule message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarRule
     */
    public static fromObject(object: { [k: string]: any }): WarRule;

    /**
     * Creates a plain object from a WarRule message. Also converts values to other types if specified.
     * @param message WarRule
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarRule to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarRule {

    /** Properties of a DataForPlayerRule. */
    interface IDataForPlayerRule {

        /** DataForPlayerRule playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerRule teamIndex */
        teamIndex?: (number|null);

        /** DataForPlayerRule initialFund */
        initialFund?: (number|null);

        /** DataForPlayerRule incomeMultiplier */
        incomeMultiplier?: (number|null);

        /** DataForPlayerRule initialEnergyPercentage */
        initialEnergyPercentage?: (number|null);

        /** DataForPlayerRule energyGrowthMultiplier */
        energyGrowthMultiplier?: (number|null);

        /** DataForPlayerRule moveRangeModifier */
        moveRangeModifier?: (number|null);

        /** DataForPlayerRule attackPowerModifier */
        attackPowerModifier?: (number|null);

        /** DataForPlayerRule visionRangeModifier */
        visionRangeModifier?: (number|null);

        /** DataForPlayerRule luckLowerLimit */
        luckLowerLimit?: (number|null);

        /** DataForPlayerRule luckUpperLimit */
        luckUpperLimit?: (number|null);

        /** DataForPlayerRule availableCoIdArray */
        availableCoIdArray?: (number[]|null);
    }

    /** Represents a DataForPlayerRule. */
    class DataForPlayerRule implements IDataForPlayerRule {

        /**
         * Constructs a new DataForPlayerRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IDataForPlayerRule);

        /** DataForPlayerRule playerIndex. */
        public playerIndex: number;

        /** DataForPlayerRule teamIndex. */
        public teamIndex: number;

        /** DataForPlayerRule initialFund. */
        public initialFund: number;

        /** DataForPlayerRule incomeMultiplier. */
        public incomeMultiplier: number;

        /** DataForPlayerRule initialEnergyPercentage. */
        public initialEnergyPercentage: number;

        /** DataForPlayerRule energyGrowthMultiplier. */
        public energyGrowthMultiplier: number;

        /** DataForPlayerRule moveRangeModifier. */
        public moveRangeModifier: number;

        /** DataForPlayerRule attackPowerModifier. */
        public attackPowerModifier: number;

        /** DataForPlayerRule visionRangeModifier. */
        public visionRangeModifier: number;

        /** DataForPlayerRule luckLowerLimit. */
        public luckLowerLimit: number;

        /** DataForPlayerRule luckUpperLimit. */
        public luckUpperLimit: number;

        /** DataForPlayerRule availableCoIdArray. */
        public availableCoIdArray: number[];

        /**
         * Creates a new DataForPlayerRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerRule instance
         */
        public static create(properties?: WarRule.IDataForPlayerRule): WarRule.DataForPlayerRule;

        /**
         * Encodes the specified DataForPlayerRule message. Does not implicitly {@link WarRule.DataForPlayerRule.verify|verify} messages.
         * @param message DataForPlayerRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerRule message, length delimited. Does not implicitly {@link WarRule.DataForPlayerRule.verify|verify} messages.
         * @param message DataForPlayerRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IDataForPlayerRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.DataForPlayerRule;

        /**
         * Decodes a DataForPlayerRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.DataForPlayerRule;

        /**
         * Verifies a DataForPlayerRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerRule
         */
        public static fromObject(object: { [k: string]: any }): WarRule.DataForPlayerRule;

        /**
         * Creates a plain object from a DataForPlayerRule message. Also converts values to other types if specified.
         * @param message DataForPlayerRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.DataForPlayerRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForWarRuleAvailability. */
    interface IDataForWarRuleAvailability {

        /** DataForWarRuleAvailability canMcw */
        canMcw?: (boolean|null);

        /** DataForWarRuleAvailability canScw */
        canScw?: (boolean|null);

        /** DataForWarRuleAvailability canMrw */
        canMrw?: (boolean|null);
    }

    /** Represents a DataForWarRuleAvailability. */
    class DataForWarRuleAvailability implements IDataForWarRuleAvailability {

        /**
         * Constructs a new DataForWarRuleAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IDataForWarRuleAvailability);

        /** DataForWarRuleAvailability canMcw. */
        public canMcw: boolean;

        /** DataForWarRuleAvailability canScw. */
        public canScw: boolean;

        /** DataForWarRuleAvailability canMrw. */
        public canMrw: boolean;

        /**
         * Creates a new DataForWarRuleAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForWarRuleAvailability instance
         */
        public static create(properties?: WarRule.IDataForWarRuleAvailability): WarRule.DataForWarRuleAvailability;

        /**
         * Encodes the specified DataForWarRuleAvailability message. Does not implicitly {@link WarRule.DataForWarRuleAvailability.verify|verify} messages.
         * @param message DataForWarRuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IDataForWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForWarRuleAvailability message, length delimited. Does not implicitly {@link WarRule.DataForWarRuleAvailability.verify|verify} messages.
         * @param message DataForWarRuleAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IDataForWarRuleAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForWarRuleAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForWarRuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.DataForWarRuleAvailability;

        /**
         * Decodes a DataForWarRuleAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForWarRuleAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.DataForWarRuleAvailability;

        /**
         * Verifies a DataForWarRuleAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForWarRuleAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForWarRuleAvailability
         */
        public static fromObject(object: { [k: string]: any }): WarRule.DataForWarRuleAvailability;

        /**
         * Creates a plain object from a DataForWarRuleAvailability message. Also converts values to other types if specified.
         * @param message DataForWarRuleAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.DataForWarRuleAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForWarRuleAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleForPlayers. */
    interface IRuleForPlayers {

        /** RuleForPlayers playerRuleDataArray */
        playerRuleDataArray?: (WarRule.IDataForPlayerRule[]|null);
    }

    /** Represents a RuleForPlayers. */
    class RuleForPlayers implements IRuleForPlayers {

        /**
         * Constructs a new RuleForPlayers.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleForPlayers);

        /** RuleForPlayers playerRuleDataArray. */
        public playerRuleDataArray: WarRule.IDataForPlayerRule[];

        /**
         * Creates a new RuleForPlayers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleForPlayers instance
         */
        public static create(properties?: WarRule.IRuleForPlayers): WarRule.RuleForPlayers;

        /**
         * Encodes the specified RuleForPlayers message. Does not implicitly {@link WarRule.RuleForPlayers.verify|verify} messages.
         * @param message RuleForPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleForPlayers message, length delimited. Does not implicitly {@link WarRule.RuleForPlayers.verify|verify} messages.
         * @param message RuleForPlayers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleForPlayers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleForPlayers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleForPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleForPlayers;

        /**
         * Decodes a RuleForPlayers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleForPlayers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleForPlayers;

        /**
         * Verifies a RuleForPlayers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleForPlayers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleForPlayers
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleForPlayers;

        /**
         * Creates a plain object from a RuleForPlayers message. Also converts values to other types if specified.
         * @param message RuleForPlayers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleForPlayers, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleForPlayers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a RuleForGlobalParams. */
    interface IRuleForGlobalParams {

        /** RuleForGlobalParams hasFogByDefault */
        hasFogByDefault?: (boolean|null);
    }

    /** Represents a RuleForGlobalParams. */
    class RuleForGlobalParams implements IRuleForGlobalParams {

        /**
         * Constructs a new RuleForGlobalParams.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IRuleForGlobalParams);

        /** RuleForGlobalParams hasFogByDefault. */
        public hasFogByDefault: boolean;

        /**
         * Creates a new RuleForGlobalParams instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RuleForGlobalParams instance
         */
        public static create(properties?: WarRule.IRuleForGlobalParams): WarRule.RuleForGlobalParams;

        /**
         * Encodes the specified RuleForGlobalParams message. Does not implicitly {@link WarRule.RuleForGlobalParams.verify|verify} messages.
         * @param message RuleForGlobalParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified RuleForGlobalParams message, length delimited. Does not implicitly {@link WarRule.RuleForGlobalParams.verify|verify} messages.
         * @param message RuleForGlobalParams message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IRuleForGlobalParams, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a RuleForGlobalParams message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RuleForGlobalParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.RuleForGlobalParams;

        /**
         * Decodes a RuleForGlobalParams message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RuleForGlobalParams
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.RuleForGlobalParams;

        /**
         * Verifies a RuleForGlobalParams message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RuleForGlobalParams message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RuleForGlobalParams
         */
        public static fromObject(object: { [k: string]: any }): WarRule.RuleForGlobalParams;

        /**
         * Creates a plain object from a RuleForGlobalParams message. Also converts values to other types if specified.
         * @param message RuleForGlobalParams
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.RuleForGlobalParams, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RuleForGlobalParams to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarRule. */
    interface IWarRule {

        /** WarRule ruleId */
        ruleId?: (number|null);

        /** WarRule ruleNameArray */
        ruleNameArray?: (Structure.ILanguageText[]|null);

        /** WarRule ruleAvailability */
        ruleAvailability?: (WarRule.IDataForWarRuleAvailability|null);

        /** WarRule ruleForGlobalParams */
        ruleForGlobalParams?: (WarRule.IRuleForGlobalParams|null);

        /** WarRule ruleForPlayers */
        ruleForPlayers?: (WarRule.IRuleForPlayers|null);

        /** WarRule warEventIdArray */
        warEventIdArray?: (number[]|null);
    }

    /** Represents a WarRule. */
    class WarRule implements IWarRule {

        /**
         * Constructs a new WarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IWarRule);

        /** WarRule ruleId. */
        public ruleId: number;

        /** WarRule ruleNameArray. */
        public ruleNameArray: Structure.ILanguageText[];

        /** WarRule ruleAvailability. */
        public ruleAvailability?: (WarRule.IDataForWarRuleAvailability|null);

        /** WarRule ruleForGlobalParams. */
        public ruleForGlobalParams?: (WarRule.IRuleForGlobalParams|null);

        /** WarRule ruleForPlayers. */
        public ruleForPlayers?: (WarRule.IRuleForPlayers|null);

        /** WarRule warEventIdArray. */
        public warEventIdArray: number[];

        /**
         * Creates a new WarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRule instance
         */
        public static create(properties?: WarRule.IWarRule): WarRule.WarRule;

        /**
         * Encodes the specified WarRule message. Does not implicitly {@link WarRule.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRule message, length delimited. Does not implicitly {@link WarRule.WarRule.verify|verify} messages.
         * @param message WarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.WarRule;

        /**
         * Decodes a WarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.WarRule;

        /**
         * Verifies a WarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRule
         */
        public static fromObject(object: { [k: string]: any }): WarRule.WarRule;

        /**
         * Creates a plain object from a WarRule message. Also converts values to other types if specified.
         * @param message WarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.WarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarRuleArray. */
    interface IWarRuleArray {

        /** WarRuleArray warRuleArray */
        warRuleArray?: (WarRule.IWarRule[]|null);
    }

    /** Represents a WarRuleArray. */
    class WarRuleArray implements IWarRuleArray {

        /**
         * Constructs a new WarRuleArray.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarRule.IWarRuleArray);

        /** WarRuleArray warRuleArray. */
        public warRuleArray: WarRule.IWarRule[];

        /**
         * Creates a new WarRuleArray instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarRuleArray instance
         */
        public static create(properties?: WarRule.IWarRuleArray): WarRule.WarRuleArray;

        /**
         * Encodes the specified WarRuleArray message. Does not implicitly {@link WarRule.WarRuleArray.verify|verify} messages.
         * @param message WarRuleArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarRule.IWarRuleArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarRuleArray message, length delimited. Does not implicitly {@link WarRule.WarRuleArray.verify|verify} messages.
         * @param message WarRuleArray message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarRule.IWarRuleArray, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarRuleArray message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarRuleArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarRule.WarRuleArray;

        /**
         * Decodes a WarRuleArray message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarRuleArray
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarRule.WarRuleArray;

        /**
         * Verifies a WarRuleArray message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarRuleArray message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarRuleArray
         */
        public static fromObject(object: { [k: string]: any }): WarRule.WarRuleArray;

        /**
         * Creates a plain object from a WarRuleArray message. Also converts values to other types if specified.
         * @param message WarRuleArray
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarRule.WarRuleArray, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarRuleArray to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarSettings. */
export declare interface IWarSettings {
}

/** Represents a WarSettings. */
export declare class WarSettings implements IWarSettings {

    /**
     * Constructs a new WarSettings.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarSettings);

    /**
     * Creates a new WarSettings instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarSettings instance
     */
    public static create(properties?: IWarSettings): WarSettings;

    /**
     * Encodes the specified WarSettings message. Does not implicitly {@link WarSettings.verify|verify} messages.
     * @param message WarSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarSettings message, length delimited. Does not implicitly {@link WarSettings.verify|verify} messages.
     * @param message WarSettings message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarSettings, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarSettings message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings;

    /**
     * Decodes a WarSettings message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarSettings
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings;

    /**
     * Verifies a WarSettings message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarSettings message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarSettings
     */
    public static fromObject(object: { [k: string]: any }): WarSettings;

    /**
     * Creates a plain object from a WarSettings message. Also converts values to other types if specified.
     * @param message WarSettings
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarSettings to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarSettings {

    /** Properties of a SettingsForCommon. */
    interface ISettingsForCommon {

        /** SettingsForCommon configVersion */
        configVersion?: (string|null);

        /** SettingsForCommon presetWarRuleId */
        presetWarRuleId?: (number|null);

        /** SettingsForCommon warRule */
        warRule?: (WarRule.IWarRule|null);
    }

    /** Represents a SettingsForCommon. */
    class SettingsForCommon implements ISettingsForCommon {

        /**
         * Constructs a new SettingsForCommon.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForCommon);

        /** SettingsForCommon configVersion. */
        public configVersion: string;

        /** SettingsForCommon presetWarRuleId. */
        public presetWarRuleId: number;

        /** SettingsForCommon warRule. */
        public warRule?: (WarRule.IWarRule|null);

        /**
         * Creates a new SettingsForCommon instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForCommon instance
         */
        public static create(properties?: WarSettings.ISettingsForCommon): WarSettings.SettingsForCommon;

        /**
         * Encodes the specified SettingsForCommon message. Does not implicitly {@link WarSettings.SettingsForCommon.verify|verify} messages.
         * @param message SettingsForCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForCommon message, length delimited. Does not implicitly {@link WarSettings.SettingsForCommon.verify|verify} messages.
         * @param message SettingsForCommon message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForCommon, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForCommon message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForCommon;

        /**
         * Decodes a SettingsForCommon message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForCommon
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForCommon;

        /**
         * Verifies a SettingsForCommon message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForCommon message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForCommon
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForCommon;

        /**
         * Creates a plain object from a SettingsForCommon message. Also converts values to other types if specified.
         * @param message SettingsForCommon
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForCommon, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForCommon to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMcw. */
    interface ISettingsForMcw {

        /** SettingsForMcw mapId */
        mapId?: (number|null);

        /** SettingsForMcw warName */
        warName?: (string|null);

        /** SettingsForMcw warPassword */
        warPassword?: (string|null);

        /** SettingsForMcw warComment */
        warComment?: (string|null);

        /** SettingsForMcw bootTimerParams */
        bootTimerParams?: (number[]|null);
    }

    /** Represents a SettingsForMcw. */
    class SettingsForMcw implements ISettingsForMcw {

        /**
         * Constructs a new SettingsForMcw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMcw);

        /** SettingsForMcw mapId. */
        public mapId: number;

        /** SettingsForMcw warName. */
        public warName: string;

        /** SettingsForMcw warPassword. */
        public warPassword: string;

        /** SettingsForMcw warComment. */
        public warComment: string;

        /** SettingsForMcw bootTimerParams. */
        public bootTimerParams: number[];

        /**
         * Creates a new SettingsForMcw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMcw instance
         */
        public static create(properties?: WarSettings.ISettingsForMcw): WarSettings.SettingsForMcw;

        /**
         * Encodes the specified SettingsForMcw message. Does not implicitly {@link WarSettings.SettingsForMcw.verify|verify} messages.
         * @param message SettingsForMcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMcw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMcw.verify|verify} messages.
         * @param message SettingsForMcw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMcw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMcw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMcw;

        /**
         * Decodes a SettingsForMcw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMcw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMcw;

        /**
         * Verifies a SettingsForMcw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMcw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMcw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMcw;

        /**
         * Creates a plain object from a SettingsForMcw message. Also converts values to other types if specified.
         * @param message SettingsForMcw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMcw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMcw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMfw. */
    interface ISettingsForMfw {

        /** SettingsForMfw initialWarData */
        initialWarData?: (WarSerialization.ISerialWar|null);

        /** SettingsForMfw warName */
        warName?: (string|null);

        /** SettingsForMfw warPassword */
        warPassword?: (string|null);

        /** SettingsForMfw warComment */
        warComment?: (string|null);

        /** SettingsForMfw bootTimerParams */
        bootTimerParams?: (number[]|null);
    }

    /** Represents a SettingsForMfw. */
    class SettingsForMfw implements ISettingsForMfw {

        /**
         * Constructs a new SettingsForMfw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMfw);

        /** SettingsForMfw initialWarData. */
        public initialWarData?: (WarSerialization.ISerialWar|null);

        /** SettingsForMfw warName. */
        public warName: string;

        /** SettingsForMfw warPassword. */
        public warPassword: string;

        /** SettingsForMfw warComment. */
        public warComment: string;

        /** SettingsForMfw bootTimerParams. */
        public bootTimerParams: number[];

        /**
         * Creates a new SettingsForMfw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMfw instance
         */
        public static create(properties?: WarSettings.ISettingsForMfw): WarSettings.SettingsForMfw;

        /**
         * Encodes the specified SettingsForMfw message. Does not implicitly {@link WarSettings.SettingsForMfw.verify|verify} messages.
         * @param message SettingsForMfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMfw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMfw.verify|verify} messages.
         * @param message SettingsForMfw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMfw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMfw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMfw;

        /**
         * Decodes a SettingsForMfw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMfw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMfw;

        /**
         * Verifies a SettingsForMfw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMfw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMfw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMfw;

        /**
         * Creates a plain object from a SettingsForMfw message. Also converts values to other types if specified.
         * @param message SettingsForMfw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMfw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMfw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForMrw. */
    interface ISettingsForMrw {

        /** SettingsForMrw mapId */
        mapId?: (number|null);

        /** SettingsForMrw dataArrayForBanCo */
        dataArrayForBanCo?: (Structure.IDataForPlayerBanCo[]|null);
    }

    /** Represents a SettingsForMrw. */
    class SettingsForMrw implements ISettingsForMrw {

        /**
         * Constructs a new SettingsForMrw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForMrw);

        /** SettingsForMrw mapId. */
        public mapId: number;

        /** SettingsForMrw dataArrayForBanCo. */
        public dataArrayForBanCo: Structure.IDataForPlayerBanCo[];

        /**
         * Creates a new SettingsForMrw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForMrw instance
         */
        public static create(properties?: WarSettings.ISettingsForMrw): WarSettings.SettingsForMrw;

        /**
         * Encodes the specified SettingsForMrw message. Does not implicitly {@link WarSettings.SettingsForMrw.verify|verify} messages.
         * @param message SettingsForMrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForMrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForMrw message, length delimited. Does not implicitly {@link WarSettings.SettingsForMrw.verify|verify} messages.
         * @param message SettingsForMrw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForMrw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForMrw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForMrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForMrw;

        /**
         * Decodes a SettingsForMrw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForMrw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForMrw;

        /**
         * Verifies a SettingsForMrw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForMrw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForMrw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForMrw;

        /**
         * Creates a plain object from a SettingsForMrw message. Also converts values to other types if specified.
         * @param message SettingsForMrw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForMrw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForMrw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SettingsForScw. */
    interface ISettingsForScw {

        /** SettingsForScw mapId */
        mapId?: (number|null);

        /** SettingsForScw isCheating */
        isCheating?: (boolean|null);
    }

    /** Represents a SettingsForScw. */
    class SettingsForScw implements ISettingsForScw {

        /**
         * Constructs a new SettingsForScw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSettings.ISettingsForScw);

        /** SettingsForScw mapId. */
        public mapId: number;

        /** SettingsForScw isCheating. */
        public isCheating: boolean;

        /**
         * Creates a new SettingsForScw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SettingsForScw instance
         */
        public static create(properties?: WarSettings.ISettingsForScw): WarSettings.SettingsForScw;

        /**
         * Encodes the specified SettingsForScw message. Does not implicitly {@link WarSettings.SettingsForScw.verify|verify} messages.
         * @param message SettingsForScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SettingsForScw message, length delimited. Does not implicitly {@link WarSettings.SettingsForScw.verify|verify} messages.
         * @param message SettingsForScw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSettings.ISettingsForScw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SettingsForScw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SettingsForScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSettings.SettingsForScw;

        /**
         * Decodes a SettingsForScw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SettingsForScw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSettings.SettingsForScw;

        /**
         * Verifies a SettingsForScw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SettingsForScw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SettingsForScw
         */
        public static fromObject(object: { [k: string]: any }): WarSettings.SettingsForScw;

        /**
         * Creates a plain object from a SettingsForScw message. Also converts values to other types if specified.
         * @param message SettingsForScw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSettings.SettingsForScw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SettingsForScw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarSerialization. */
export declare interface IWarSerialization {
}

/** Represents a WarSerialization. */
export declare class WarSerialization implements IWarSerialization {

    /**
     * Constructs a new WarSerialization.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarSerialization);

    /**
     * Creates a new WarSerialization instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarSerialization instance
     */
    public static create(properties?: IWarSerialization): WarSerialization;

    /**
     * Encodes the specified WarSerialization message. Does not implicitly {@link WarSerialization.verify|verify} messages.
     * @param message WarSerialization message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarSerialization message, length delimited. Does not implicitly {@link WarSerialization.verify|verify} messages.
     * @param message WarSerialization message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarSerialization, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarSerialization message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarSerialization
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization;

    /**
     * Decodes a WarSerialization message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarSerialization
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization;

    /**
     * Verifies a WarSerialization message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarSerialization message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarSerialization
     */
    public static fromObject(object: { [k: string]: any }): WarSerialization;

    /**
     * Creates a plain object from a WarSerialization message. Also converts values to other types if specified.
     * @param message WarSerialization
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarSerialization, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarSerialization to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarSerialization {

    /** Properties of a DataForFogMapFromPath. */
    interface IDataForFogMapFromPath {

        /** DataForFogMapFromPath playerIndex */
        playerIndex?: (number|null);

        /** DataForFogMapFromPath visibilityArray */
        visibilityArray?: (number[]|null);
    }

    /** Represents a DataForFogMapFromPath. */
    class DataForFogMapFromPath implements IDataForFogMapFromPath {

        /**
         * Constructs a new DataForFogMapFromPath.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.IDataForFogMapFromPath);

        /** DataForFogMapFromPath playerIndex. */
        public playerIndex: number;

        /** DataForFogMapFromPath visibilityArray. */
        public visibilityArray: number[];

        /**
         * Creates a new DataForFogMapFromPath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForFogMapFromPath instance
         */
        public static create(properties?: WarSerialization.IDataForFogMapFromPath): WarSerialization.DataForFogMapFromPath;

        /**
         * Encodes the specified DataForFogMapFromPath message. Does not implicitly {@link WarSerialization.DataForFogMapFromPath.verify|verify} messages.
         * @param message DataForFogMapFromPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForFogMapFromPath message, length delimited. Does not implicitly {@link WarSerialization.DataForFogMapFromPath.verify|verify} messages.
         * @param message DataForFogMapFromPath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.IDataForFogMapFromPath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForFogMapFromPath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForFogMapFromPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.DataForFogMapFromPath;

        /**
         * Decodes a DataForFogMapFromPath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForFogMapFromPath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.DataForFogMapFromPath;

        /**
         * Verifies a DataForFogMapFromPath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForFogMapFromPath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForFogMapFromPath
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.DataForFogMapFromPath;

        /**
         * Creates a plain object from a DataForFogMapFromPath message. Also converts values to other types if specified.
         * @param message DataForFogMapFromPath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.DataForFogMapFromPath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForFogMapFromPath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForWarEventCalledCount. */
    interface IDataForWarEventCalledCount {

        /** DataForWarEventCalledCount eventId */
        eventId?: (number|null);

        /** DataForWarEventCalledCount calledCountTotal */
        calledCountTotal?: (number|null);

        /** DataForWarEventCalledCount calledCountInPlayerTurn */
        calledCountInPlayerTurn?: (number|null);
    }

    /** Represents a DataForWarEventCalledCount. */
    class DataForWarEventCalledCount implements IDataForWarEventCalledCount {

        /**
         * Constructs a new DataForWarEventCalledCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.IDataForWarEventCalledCount);

        /** DataForWarEventCalledCount eventId. */
        public eventId: number;

        /** DataForWarEventCalledCount calledCountTotal. */
        public calledCountTotal: number;

        /** DataForWarEventCalledCount calledCountInPlayerTurn. */
        public calledCountInPlayerTurn: number;

        /**
         * Creates a new DataForWarEventCalledCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForWarEventCalledCount instance
         */
        public static create(properties?: WarSerialization.IDataForWarEventCalledCount): WarSerialization.DataForWarEventCalledCount;

        /**
         * Encodes the specified DataForWarEventCalledCount message. Does not implicitly {@link WarSerialization.DataForWarEventCalledCount.verify|verify} messages.
         * @param message DataForWarEventCalledCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.IDataForWarEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForWarEventCalledCount message, length delimited. Does not implicitly {@link WarSerialization.DataForWarEventCalledCount.verify|verify} messages.
         * @param message DataForWarEventCalledCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.IDataForWarEventCalledCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForWarEventCalledCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForWarEventCalledCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.DataForWarEventCalledCount;

        /**
         * Decodes a DataForWarEventCalledCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForWarEventCalledCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.DataForWarEventCalledCount;

        /**
         * Verifies a DataForWarEventCalledCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForWarEventCalledCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForWarEventCalledCount
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.DataForWarEventCalledCount;

        /**
         * Creates a plain object from a DataForWarEventCalledCount message. Also converts values to other types if specified.
         * @param message DataForWarEventCalledCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.DataForWarEventCalledCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForWarEventCalledCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTile. */
    interface ISerialTile {

        /** SerialTile gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** SerialTile playerIndex */
        playerIndex?: (number|null);

        /** SerialTile baseType */
        baseType?: (number|null);

        /** SerialTile objectType */
        objectType?: (number|null);

        /** SerialTile baseShapeId */
        baseShapeId?: (number|null);

        /** SerialTile objectShapeId */
        objectShapeId?: (number|null);

        /** SerialTile currentHp */
        currentHp?: (number|null);

        /** SerialTile currentBuildPoint */
        currentBuildPoint?: (number|null);

        /** SerialTile currentCapturePoint */
        currentCapturePoint?: (number|null);
    }

    /** Represents a SerialTile. */
    class SerialTile implements ISerialTile {

        /**
         * Constructs a new SerialTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTile);

        /** SerialTile gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** SerialTile playerIndex. */
        public playerIndex: number;

        /** SerialTile baseType. */
        public baseType: number;

        /** SerialTile objectType. */
        public objectType: number;

        /** SerialTile baseShapeId. */
        public baseShapeId: number;

        /** SerialTile objectShapeId. */
        public objectShapeId: number;

        /** SerialTile currentHp. */
        public currentHp: number;

        /** SerialTile currentBuildPoint. */
        public currentBuildPoint: number;

        /** SerialTile currentCapturePoint. */
        public currentCapturePoint: number;

        /**
         * Creates a new SerialTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTile instance
         */
        public static create(properties?: WarSerialization.ISerialTile): WarSerialization.SerialTile;

        /**
         * Encodes the specified SerialTile message. Does not implicitly {@link WarSerialization.SerialTile.verify|verify} messages.
         * @param message SerialTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTile message, length delimited. Does not implicitly {@link WarSerialization.SerialTile.verify|verify} messages.
         * @param message SerialTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTile;

        /**
         * Decodes a SerialTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTile;

        /**
         * Verifies a SerialTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTile
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTile;

        /**
         * Creates a plain object from a SerialTile message. Also converts values to other types if specified.
         * @param message SerialTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialUnit. */
    interface ISerialUnit {

        /** SerialUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** SerialUnit playerIndex */
        playerIndex?: (number|null);

        /** SerialUnit unitType */
        unitType?: (number|null);

        /** SerialUnit unitId */
        unitId?: (number|null);

        /** SerialUnit actionState */
        actionState?: (number|null);

        /** SerialUnit primaryWeaponCurrentAmmo */
        primaryWeaponCurrentAmmo?: (number|null);

        /** SerialUnit currentHp */
        currentHp?: (number|null);

        /** SerialUnit isCapturingTile */
        isCapturingTile?: (boolean|null);

        /** SerialUnit isDiving */
        isDiving?: (boolean|null);

        /** SerialUnit flareCurrentAmmo */
        flareCurrentAmmo?: (number|null);

        /** SerialUnit currentFuel */
        currentFuel?: (number|null);

        /** SerialUnit currentBuildMaterial */
        currentBuildMaterial?: (number|null);

        /** SerialUnit currentProduceMaterial */
        currentProduceMaterial?: (number|null);

        /** SerialUnit currentPromotion */
        currentPromotion?: (number|null);

        /** SerialUnit isBuildingTile */
        isBuildingTile?: (boolean|null);

        /** SerialUnit loaderUnitId */
        loaderUnitId?: (number|null);

        /** SerialUnit hasLoadedCo */
        hasLoadedCo?: (boolean|null);
    }

    /** Represents a SerialUnit. */
    class SerialUnit implements ISerialUnit {

        /**
         * Constructs a new SerialUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialUnit);

        /** SerialUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** SerialUnit playerIndex. */
        public playerIndex: number;

        /** SerialUnit unitType. */
        public unitType: number;

        /** SerialUnit unitId. */
        public unitId: number;

        /** SerialUnit actionState. */
        public actionState: number;

        /** SerialUnit primaryWeaponCurrentAmmo. */
        public primaryWeaponCurrentAmmo: number;

        /** SerialUnit currentHp. */
        public currentHp: number;

        /** SerialUnit isCapturingTile. */
        public isCapturingTile: boolean;

        /** SerialUnit isDiving. */
        public isDiving: boolean;

        /** SerialUnit flareCurrentAmmo. */
        public flareCurrentAmmo: number;

        /** SerialUnit currentFuel. */
        public currentFuel: number;

        /** SerialUnit currentBuildMaterial. */
        public currentBuildMaterial: number;

        /** SerialUnit currentProduceMaterial. */
        public currentProduceMaterial: number;

        /** SerialUnit currentPromotion. */
        public currentPromotion: number;

        /** SerialUnit isBuildingTile. */
        public isBuildingTile: boolean;

        /** SerialUnit loaderUnitId. */
        public loaderUnitId: number;

        /** SerialUnit hasLoadedCo. */
        public hasLoadedCo: boolean;

        /**
         * Creates a new SerialUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialUnit instance
         */
        public static create(properties?: WarSerialization.ISerialUnit): WarSerialization.SerialUnit;

        /**
         * Encodes the specified SerialUnit message. Does not implicitly {@link WarSerialization.SerialUnit.verify|verify} messages.
         * @param message SerialUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialUnit message, length delimited. Does not implicitly {@link WarSerialization.SerialUnit.verify|verify} messages.
         * @param message SerialUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialUnit;

        /**
         * Decodes a SerialUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialUnit;

        /**
         * Verifies a SerialUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialUnit
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialUnit;

        /**
         * Creates a plain object from a SerialUnit message. Also converts values to other types if specified.
         * @param message SerialUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialPlayer. */
    interface ISerialPlayer {

        /** SerialPlayer fund */
        fund?: (number|null);

        /** SerialPlayer hasVotedForDraw */
        hasVotedForDraw?: (boolean|null);

        /** SerialPlayer aliveState */
        aliveState?: (number|null);

        /** SerialPlayer playerIndex */
        playerIndex?: (number|null);

        /** SerialPlayer deprecatedTeamIndex */
        deprecatedTeamIndex?: (number|null);

        /** SerialPlayer userId */
        userId?: (number|null);

        /** SerialPlayer coId */
        coId?: (number|null);

        /** SerialPlayer coCurrentEnergy */
        coCurrentEnergy?: (number|null);

        /** SerialPlayer coUsingSkillType */
        coUsingSkillType?: (number|null);

        /** SerialPlayer coIsDestroyedInTurn */
        coIsDestroyedInTurn?: (boolean|null);

        /** SerialPlayer watchOngoingSrcUserIdArray */
        watchOngoingSrcUserIdArray?: (number[]|null);

        /** SerialPlayer watchRequestSrcUserIdArray */
        watchRequestSrcUserIdArray?: (number[]|null);

        /** SerialPlayer restTimeToBoot */
        restTimeToBoot?: (number|null);

        /** SerialPlayer unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a SerialPlayer. */
    class SerialPlayer implements ISerialPlayer {

        /**
         * Constructs a new SerialPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialPlayer);

        /** SerialPlayer fund. */
        public fund: number;

        /** SerialPlayer hasVotedForDraw. */
        public hasVotedForDraw: boolean;

        /** SerialPlayer aliveState. */
        public aliveState: number;

        /** SerialPlayer playerIndex. */
        public playerIndex: number;

        /** SerialPlayer deprecatedTeamIndex. */
        public deprecatedTeamIndex: number;

        /** SerialPlayer userId. */
        public userId: number;

        /** SerialPlayer coId. */
        public coId: number;

        /** SerialPlayer coCurrentEnergy. */
        public coCurrentEnergy: number;

        /** SerialPlayer coUsingSkillType. */
        public coUsingSkillType: number;

        /** SerialPlayer coIsDestroyedInTurn. */
        public coIsDestroyedInTurn: boolean;

        /** SerialPlayer watchOngoingSrcUserIdArray. */
        public watchOngoingSrcUserIdArray: number[];

        /** SerialPlayer watchRequestSrcUserIdArray. */
        public watchRequestSrcUserIdArray: number[];

        /** SerialPlayer restTimeToBoot. */
        public restTimeToBoot: number;

        /** SerialPlayer unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new SerialPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialPlayer instance
         */
        public static create(properties?: WarSerialization.ISerialPlayer): WarSerialization.SerialPlayer;

        /**
         * Encodes the specified SerialPlayer message. Does not implicitly {@link WarSerialization.SerialPlayer.verify|verify} messages.
         * @param message SerialPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialPlayer message, length delimited. Does not implicitly {@link WarSerialization.SerialPlayer.verify|verify} messages.
         * @param message SerialPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialPlayer;

        /**
         * Decodes a SerialPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialPlayer;

        /**
         * Verifies a SerialPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialPlayer
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialPlayer;

        /**
         * Creates a plain object from a SerialPlayer message. Also converts values to other types if specified.
         * @param message SerialPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialPlayerManager. */
    interface ISerialPlayerManager {

        /** SerialPlayerManager players */
        players?: (WarSerialization.ISerialPlayer[]|null);
    }

    /** Represents a SerialPlayerManager. */
    class SerialPlayerManager implements ISerialPlayerManager {

        /**
         * Constructs a new SerialPlayerManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialPlayerManager);

        /** SerialPlayerManager players. */
        public players: WarSerialization.ISerialPlayer[];

        /**
         * Creates a new SerialPlayerManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialPlayerManager instance
         */
        public static create(properties?: WarSerialization.ISerialPlayerManager): WarSerialization.SerialPlayerManager;

        /**
         * Encodes the specified SerialPlayerManager message. Does not implicitly {@link WarSerialization.SerialPlayerManager.verify|verify} messages.
         * @param message SerialPlayerManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialPlayerManager message, length delimited. Does not implicitly {@link WarSerialization.SerialPlayerManager.verify|verify} messages.
         * @param message SerialPlayerManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialPlayerManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialPlayerManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialPlayerManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialPlayerManager;

        /**
         * Decodes a SerialPlayerManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialPlayerManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialPlayerManager;

        /**
         * Verifies a SerialPlayerManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialPlayerManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialPlayerManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialPlayerManager;

        /**
         * Creates a plain object from a SerialPlayerManager message. Also converts values to other types if specified.
         * @param message SerialPlayerManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialPlayerManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialPlayerManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTurnManager. */
    interface ISerialTurnManager {

        /** SerialTurnManager turnIndex */
        turnIndex?: (number|null);

        /** SerialTurnManager playerIndex */
        playerIndex?: (number|null);

        /** SerialTurnManager turnPhaseCode */
        turnPhaseCode?: (number|null);

        /** SerialTurnManager enterTurnTime */
        enterTurnTime?: (number|null);
    }

    /** Represents a SerialTurnManager. */
    class SerialTurnManager implements ISerialTurnManager {

        /**
         * Constructs a new SerialTurnManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTurnManager);

        /** SerialTurnManager turnIndex. */
        public turnIndex: number;

        /** SerialTurnManager playerIndex. */
        public playerIndex: number;

        /** SerialTurnManager turnPhaseCode. */
        public turnPhaseCode: number;

        /** SerialTurnManager enterTurnTime. */
        public enterTurnTime: number;

        /**
         * Creates a new SerialTurnManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTurnManager instance
         */
        public static create(properties?: WarSerialization.ISerialTurnManager): WarSerialization.SerialTurnManager;

        /**
         * Encodes the specified SerialTurnManager message. Does not implicitly {@link WarSerialization.SerialTurnManager.verify|verify} messages.
         * @param message SerialTurnManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTurnManager message, length delimited. Does not implicitly {@link WarSerialization.SerialTurnManager.verify|verify} messages.
         * @param message SerialTurnManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTurnManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTurnManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTurnManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTurnManager;

        /**
         * Decodes a SerialTurnManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTurnManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTurnManager;

        /**
         * Verifies a SerialTurnManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTurnManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTurnManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTurnManager;

        /**
         * Creates a plain object from a SerialTurnManager message. Also converts values to other types if specified.
         * @param message SerialTurnManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTurnManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTurnManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialTileMap. */
    interface ISerialTileMap {

        /** SerialTileMap tiles */
        tiles?: (WarSerialization.ISerialTile[]|null);
    }

    /** Represents a SerialTileMap. */
    class SerialTileMap implements ISerialTileMap {

        /**
         * Constructs a new SerialTileMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialTileMap);

        /** SerialTileMap tiles. */
        public tiles: WarSerialization.ISerialTile[];

        /**
         * Creates a new SerialTileMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialTileMap instance
         */
        public static create(properties?: WarSerialization.ISerialTileMap): WarSerialization.SerialTileMap;

        /**
         * Encodes the specified SerialTileMap message. Does not implicitly {@link WarSerialization.SerialTileMap.verify|verify} messages.
         * @param message SerialTileMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialTileMap message, length delimited. Does not implicitly {@link WarSerialization.SerialTileMap.verify|verify} messages.
         * @param message SerialTileMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialTileMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialTileMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialTileMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialTileMap;

        /**
         * Decodes a SerialTileMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialTileMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialTileMap;

        /**
         * Verifies a SerialTileMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialTileMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialTileMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialTileMap;

        /**
         * Creates a plain object from a SerialTileMap message. Also converts values to other types if specified.
         * @param message SerialTileMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialTileMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialTileMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialUnitMap. */
    interface ISerialUnitMap {

        /** SerialUnitMap nextUnitId */
        nextUnitId?: (number|null);

        /** SerialUnitMap units */
        units?: (WarSerialization.ISerialUnit[]|null);
    }

    /** Represents a SerialUnitMap. */
    class SerialUnitMap implements ISerialUnitMap {

        /**
         * Constructs a new SerialUnitMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialUnitMap);

        /** SerialUnitMap nextUnitId. */
        public nextUnitId: number;

        /** SerialUnitMap units. */
        public units: WarSerialization.ISerialUnit[];

        /**
         * Creates a new SerialUnitMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialUnitMap instance
         */
        public static create(properties?: WarSerialization.ISerialUnitMap): WarSerialization.SerialUnitMap;

        /**
         * Encodes the specified SerialUnitMap message. Does not implicitly {@link WarSerialization.SerialUnitMap.verify|verify} messages.
         * @param message SerialUnitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialUnitMap message, length delimited. Does not implicitly {@link WarSerialization.SerialUnitMap.verify|verify} messages.
         * @param message SerialUnitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialUnitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialUnitMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialUnitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialUnitMap;

        /**
         * Decodes a SerialUnitMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialUnitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialUnitMap;

        /**
         * Verifies a SerialUnitMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialUnitMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialUnitMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialUnitMap;

        /**
         * Creates a plain object from a SerialUnitMap message. Also converts values to other types if specified.
         * @param message SerialUnitMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialUnitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialUnitMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialFogMap. */
    interface ISerialFogMap {

        /** SerialFogMap forceFogCode */
        forceFogCode?: (number|null);

        /** SerialFogMap forceExpirePlayerIndex */
        forceExpirePlayerIndex?: (number|null);

        /** SerialFogMap forceExpireTurnIndex */
        forceExpireTurnIndex?: (number|null);

        /** SerialFogMap mapsFromPath */
        mapsFromPath?: (WarSerialization.IDataForFogMapFromPath[]|null);
    }

    /** Represents a SerialFogMap. */
    class SerialFogMap implements ISerialFogMap {

        /**
         * Constructs a new SerialFogMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialFogMap);

        /** SerialFogMap forceFogCode. */
        public forceFogCode: number;

        /** SerialFogMap forceExpirePlayerIndex. */
        public forceExpirePlayerIndex: number;

        /** SerialFogMap forceExpireTurnIndex. */
        public forceExpireTurnIndex: number;

        /** SerialFogMap mapsFromPath. */
        public mapsFromPath: WarSerialization.IDataForFogMapFromPath[];

        /**
         * Creates a new SerialFogMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialFogMap instance
         */
        public static create(properties?: WarSerialization.ISerialFogMap): WarSerialization.SerialFogMap;

        /**
         * Encodes the specified SerialFogMap message. Does not implicitly {@link WarSerialization.SerialFogMap.verify|verify} messages.
         * @param message SerialFogMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialFogMap message, length delimited. Does not implicitly {@link WarSerialization.SerialFogMap.verify|verify} messages.
         * @param message SerialFogMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialFogMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialFogMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialFogMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialFogMap;

        /**
         * Decodes a SerialFogMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialFogMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialFogMap;

        /**
         * Verifies a SerialFogMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialFogMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialFogMap
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialFogMap;

        /**
         * Creates a plain object from a SerialFogMap message. Also converts values to other types if specified.
         * @param message SerialFogMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialFogMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialFogMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialField. */
    interface ISerialField {

        /** SerialField fogMap */
        fogMap?: (WarSerialization.ISerialFogMap|null);

        /** SerialField tileMap */
        tileMap?: (WarSerialization.ISerialTileMap|null);

        /** SerialField unitMap */
        unitMap?: (WarSerialization.ISerialUnitMap|null);
    }

    /** Represents a SerialField. */
    class SerialField implements ISerialField {

        /**
         * Constructs a new SerialField.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialField);

        /** SerialField fogMap. */
        public fogMap?: (WarSerialization.ISerialFogMap|null);

        /** SerialField tileMap. */
        public tileMap?: (WarSerialization.ISerialTileMap|null);

        /** SerialField unitMap. */
        public unitMap?: (WarSerialization.ISerialUnitMap|null);

        /**
         * Creates a new SerialField instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialField instance
         */
        public static create(properties?: WarSerialization.ISerialField): WarSerialization.SerialField;

        /**
         * Encodes the specified SerialField message. Does not implicitly {@link WarSerialization.SerialField.verify|verify} messages.
         * @param message SerialField message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialField message, length delimited. Does not implicitly {@link WarSerialization.SerialField.verify|verify} messages.
         * @param message SerialField message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialField, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialField message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialField
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialField;

        /**
         * Decodes a SerialField message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialField
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialField;

        /**
         * Verifies a SerialField message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialField message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialField
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialField;

        /**
         * Creates a plain object from a SerialField message. Also converts values to other types if specified.
         * @param message SerialField
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialField, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialField to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialWarEventManager. */
    interface ISerialWarEventManager {

        /** SerialWarEventManager warEventFullData */
        warEventFullData?: (Map.IWarEventFullData|null);

        /** SerialWarEventManager calledCountList */
        calledCountList?: (WarSerialization.IDataForWarEventCalledCount[]|null);
    }

    /** Represents a SerialWarEventManager. */
    class SerialWarEventManager implements ISerialWarEventManager {

        /**
         * Constructs a new SerialWarEventManager.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialWarEventManager);

        /** SerialWarEventManager warEventFullData. */
        public warEventFullData?: (Map.IWarEventFullData|null);

        /** SerialWarEventManager calledCountList. */
        public calledCountList: WarSerialization.IDataForWarEventCalledCount[];

        /**
         * Creates a new SerialWarEventManager instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialWarEventManager instance
         */
        public static create(properties?: WarSerialization.ISerialWarEventManager): WarSerialization.SerialWarEventManager;

        /**
         * Encodes the specified SerialWarEventManager message. Does not implicitly {@link WarSerialization.SerialWarEventManager.verify|verify} messages.
         * @param message SerialWarEventManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialWarEventManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialWarEventManager message, length delimited. Does not implicitly {@link WarSerialization.SerialWarEventManager.verify|verify} messages.
         * @param message SerialWarEventManager message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialWarEventManager, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialWarEventManager message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialWarEventManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialWarEventManager;

        /**
         * Decodes a SerialWarEventManager message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialWarEventManager
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialWarEventManager;

        /**
         * Verifies a SerialWarEventManager message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialWarEventManager message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialWarEventManager
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialWarEventManager;

        /**
         * Creates a plain object from a SerialWarEventManager message. Also converts values to other types if specified.
         * @param message SerialWarEventManager
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialWarEventManager, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialWarEventManager to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SerialWar. */
    interface ISerialWar {

        /** SerialWar settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** SerialWar settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** SerialWar settingsForScw */
        settingsForScw?: (WarSettings.ISettingsForScw|null);

        /** SerialWar settingsForMrw */
        settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** SerialWar settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** SerialWar warId */
        warId?: (number|null);

        /** SerialWar seedRandomInitialState */
        seedRandomInitialState?: (Structure.ISeedRandomState|null);

        /** SerialWar seedRandomCurrentState */
        seedRandomCurrentState?: (Structure.ISeedRandomState|null);

        /** SerialWar executedActions */
        executedActions?: (WarAction.IWarActionContainer[]|null);

        /** SerialWar remainingVotesForDraw */
        remainingVotesForDraw?: (number|null);

        /** SerialWar playerManager */
        playerManager?: (WarSerialization.ISerialPlayerManager|null);

        /** SerialWar turnManager */
        turnManager?: (WarSerialization.ISerialTurnManager|null);

        /** SerialWar field */
        field?: (WarSerialization.ISerialField|null);

        /** SerialWar warEventManager */
        warEventManager?: (WarSerialization.ISerialWarEventManager|null);
    }

    /** Represents a SerialWar. */
    class SerialWar implements ISerialWar {

        /**
         * Constructs a new SerialWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarSerialization.ISerialWar);

        /** SerialWar settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** SerialWar settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** SerialWar settingsForScw. */
        public settingsForScw?: (WarSettings.ISettingsForScw|null);

        /** SerialWar settingsForMrw. */
        public settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** SerialWar settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** SerialWar warId. */
        public warId: number;

        /** SerialWar seedRandomInitialState. */
        public seedRandomInitialState?: (Structure.ISeedRandomState|null);

        /** SerialWar seedRandomCurrentState. */
        public seedRandomCurrentState?: (Structure.ISeedRandomState|null);

        /** SerialWar executedActions. */
        public executedActions: WarAction.IWarActionContainer[];

        /** SerialWar remainingVotesForDraw. */
        public remainingVotesForDraw: number;

        /** SerialWar playerManager. */
        public playerManager?: (WarSerialization.ISerialPlayerManager|null);

        /** SerialWar turnManager. */
        public turnManager?: (WarSerialization.ISerialTurnManager|null);

        /** SerialWar field. */
        public field?: (WarSerialization.ISerialField|null);

        /** SerialWar warEventManager. */
        public warEventManager?: (WarSerialization.ISerialWarEventManager|null);

        /**
         * Creates a new SerialWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SerialWar instance
         */
        public static create(properties?: WarSerialization.ISerialWar): WarSerialization.SerialWar;

        /**
         * Encodes the specified SerialWar message. Does not implicitly {@link WarSerialization.SerialWar.verify|verify} messages.
         * @param message SerialWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SerialWar message, length delimited. Does not implicitly {@link WarSerialization.SerialWar.verify|verify} messages.
         * @param message SerialWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarSerialization.ISerialWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SerialWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SerialWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarSerialization.SerialWar;

        /**
         * Decodes a SerialWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SerialWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarSerialization.SerialWar;

        /**
         * Verifies a SerialWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SerialWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SerialWar
         */
        public static fromObject(object: { [k: string]: any }): WarSerialization.SerialWar;

        /**
         * Creates a plain object from a SerialWar message. Also converts values to other types if specified.
         * @param message SerialWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarSerialization.SerialWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SerialWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a WarAction. */
export declare interface IWarAction {
}

/** Represents a WarAction. */
export declare class WarAction implements IWarAction {

    /**
     * Constructs a new WarAction.
     * @param [properties] Properties to set
     */
    constructor(properties?: IWarAction);

    /**
     * Creates a new WarAction instance using the specified properties.
     * @param [properties] Properties to set
     * @returns WarAction instance
     */
    public static create(properties?: IWarAction): WarAction;

    /**
     * Encodes the specified WarAction message. Does not implicitly {@link WarAction.verify|verify} messages.
     * @param message WarAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IWarAction, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified WarAction message, length delimited. Does not implicitly {@link WarAction.verify|verify} messages.
     * @param message WarAction message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IWarAction, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a WarAction message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns WarAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction;

    /**
     * Decodes a WarAction message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns WarAction
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction;

    /**
     * Verifies a WarAction message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a WarAction message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns WarAction
     */
    public static fromObject(object: { [k: string]: any }): WarAction;

    /**
     * Creates a plain object from a WarAction message. Also converts values to other types if specified.
     * @param message WarAction
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: WarAction, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this WarAction to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace WarAction {

    /** Properties of a WarActionSystemCallWarEvent. */
    interface IWarActionSystemCallWarEvent {

        /** WarActionSystemCallWarEvent warEventId */
        warEventId?: (number|null);

        /** WarActionSystemCallWarEvent extraDataList */
        extraDataList?: (WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent[]|null);
    }

    /** Represents a WarActionSystemCallWarEvent. */
    class WarActionSystemCallWarEvent implements IWarActionSystemCallWarEvent {

        /**
         * Constructs a new WarActionSystemCallWarEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemCallWarEvent);

        /** WarActionSystemCallWarEvent warEventId. */
        public warEventId: number;

        /** WarActionSystemCallWarEvent extraDataList. */
        public extraDataList: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent[];

        /**
         * Creates a new WarActionSystemCallWarEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemCallWarEvent instance
         */
        public static create(properties?: WarAction.IWarActionSystemCallWarEvent): WarAction.WarActionSystemCallWarEvent;

        /**
         * Encodes the specified WarActionSystemCallWarEvent message. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.verify|verify} messages.
         * @param message WarActionSystemCallWarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemCallWarEvent message, length delimited. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.verify|verify} messages.
         * @param message WarActionSystemCallWarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemCallWarEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemCallWarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemCallWarEvent;

        /**
         * Decodes a WarActionSystemCallWarEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemCallWarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemCallWarEvent;

        /**
         * Verifies a WarActionSystemCallWarEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemCallWarEvent
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemCallWarEvent;

        /**
         * Creates a plain object from a WarActionSystemCallWarEvent message. Also converts values to other types if specified.
         * @param message WarActionSystemCallWarEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemCallWarEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemCallWarEvent {

        /** Properties of an ExtraDataForWeaAddUnit. */
        interface IExtraDataForWeaAddUnit {

            /** ExtraDataForWeaAddUnit unitList */
            unitList?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForWeaAddUnit. */
        class ExtraDataForWeaAddUnit implements IExtraDataForWeaAddUnit {

            /**
             * Constructs a new ExtraDataForWeaAddUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemCallWarEvent.IExtraDataForWeaAddUnit);

            /** ExtraDataForWeaAddUnit unitList. */
            public unitList: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForWeaAddUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForWeaAddUnit instance
             */
            public static create(properties?: WarAction.WarActionSystemCallWarEvent.IExtraDataForWeaAddUnit): WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit;

            /**
             * Encodes the specified ExtraDataForWeaAddUnit message. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit.verify|verify} messages.
             * @param message ExtraDataForWeaAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemCallWarEvent.IExtraDataForWeaAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForWeaAddUnit message, length delimited. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit.verify|verify} messages.
             * @param message ExtraDataForWeaAddUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemCallWarEvent.IExtraDataForWeaAddUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForWeaAddUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForWeaAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit;

            /**
             * Decodes an ExtraDataForWeaAddUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForWeaAddUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit;

            /**
             * Verifies an ExtraDataForWeaAddUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForWeaAddUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForWeaAddUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit;

            /**
             * Creates a plain object from an ExtraDataForWeaAddUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForWeaAddUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemCallWarEvent.ExtraDataForWeaAddUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForWeaAddUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of an ExtraDataForSystemCallWarEvent. */
        interface IExtraDataForSystemCallWarEvent {

            /** ExtraDataForSystemCallWarEvent indexForActionIdList */
            indexForActionIdList?: (number|null);

            /** ExtraDataForSystemCallWarEvent ExtraDataForWeaAddUnit */
            ExtraDataForWeaAddUnit?: (WarAction.WarActionSystemCallWarEvent.IExtraDataForWeaAddUnit|null);
        }

        /** Represents an ExtraDataForSystemCallWarEvent. */
        class ExtraDataForSystemCallWarEvent implements IExtraDataForSystemCallWarEvent {

            /**
             * Constructs a new ExtraDataForSystemCallWarEvent.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent);

            /** ExtraDataForSystemCallWarEvent indexForActionIdList. */
            public indexForActionIdList: number;

            /** ExtraDataForSystemCallWarEvent ExtraDataForWeaAddUnit. */
            public ExtraDataForWeaAddUnit?: (WarAction.WarActionSystemCallWarEvent.IExtraDataForWeaAddUnit|null);

            /**
             * Creates a new ExtraDataForSystemCallWarEvent instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemCallWarEvent instance
             */
            public static create(properties?: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Encodes the specified ExtraDataForSystemCallWarEvent message. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent.verify|verify} messages.
             * @param message ExtraDataForSystemCallWarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemCallWarEvent message, length delimited. Does not implicitly {@link WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent.verify|verify} messages.
             * @param message ExtraDataForSystemCallWarEvent message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemCallWarEvent.IExtraDataForSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemCallWarEvent message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemCallWarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Decodes an ExtraDataForSystemCallWarEvent message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemCallWarEvent
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Verifies an ExtraDataForSystemCallWarEvent message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemCallWarEvent
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent;

            /**
             * Creates a plain object from an ExtraDataForSystemCallWarEvent message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemCallWarEvent
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemCallWarEvent.ExtraDataForSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemCallWarEvent to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionSystemDestroyPlayerForce. */
    interface IWarActionSystemDestroyPlayerForce {

        /** WarActionSystemDestroyPlayerForce targetPlayerIndex */
        targetPlayerIndex?: (number|null);
    }

    /** Represents a WarActionSystemDestroyPlayerForce. */
    class WarActionSystemDestroyPlayerForce implements IWarActionSystemDestroyPlayerForce {

        /**
         * Constructs a new WarActionSystemDestroyPlayerForce.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemDestroyPlayerForce);

        /** WarActionSystemDestroyPlayerForce targetPlayerIndex. */
        public targetPlayerIndex: number;

        /**
         * Creates a new WarActionSystemDestroyPlayerForce instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemDestroyPlayerForce instance
         */
        public static create(properties?: WarAction.IWarActionSystemDestroyPlayerForce): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Encodes the specified WarActionSystemDestroyPlayerForce message. Does not implicitly {@link WarAction.WarActionSystemDestroyPlayerForce.verify|verify} messages.
         * @param message WarActionSystemDestroyPlayerForce message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemDestroyPlayerForce message, length delimited. Does not implicitly {@link WarAction.WarActionSystemDestroyPlayerForce.verify|verify} messages.
         * @param message WarActionSystemDestroyPlayerForce message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemDestroyPlayerForce message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemDestroyPlayerForce
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Decodes a WarActionSystemDestroyPlayerForce message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemDestroyPlayerForce
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Verifies a WarActionSystemDestroyPlayerForce message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemDestroyPlayerForce message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemDestroyPlayerForce
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemDestroyPlayerForce;

        /**
         * Creates a plain object from a WarActionSystemDestroyPlayerForce message. Also converts values to other types if specified.
         * @param message WarActionSystemDestroyPlayerForce
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemDestroyPlayerForce, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemDestroyPlayerForce to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarActionSystemEndWar. */
    interface IWarActionSystemEndWar {
    }

    /** Represents a WarActionSystemEndWar. */
    class WarActionSystemEndWar implements IWarActionSystemEndWar {

        /**
         * Constructs a new WarActionSystemEndWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemEndWar);

        /**
         * Creates a new WarActionSystemEndWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemEndWar instance
         */
        public static create(properties?: WarAction.IWarActionSystemEndWar): WarAction.WarActionSystemEndWar;

        /**
         * Encodes the specified WarActionSystemEndWar message. Does not implicitly {@link WarAction.WarActionSystemEndWar.verify|verify} messages.
         * @param message WarActionSystemEndWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemEndWar message, length delimited. Does not implicitly {@link WarAction.WarActionSystemEndWar.verify|verify} messages.
         * @param message WarActionSystemEndWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemEndWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemEndWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemEndWar;

        /**
         * Decodes a WarActionSystemEndWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemEndWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemEndWar;

        /**
         * Verifies a WarActionSystemEndWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemEndWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemEndWar
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemEndWar;

        /**
         * Creates a plain object from a WarActionSystemEndWar message. Also converts values to other types if specified.
         * @param message WarActionSystemEndWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemEndWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemEndWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarActionSystemBeginTurn. */
    interface IWarActionSystemBeginTurn {

        /** WarActionSystemBeginTurn extraData */
        extraData?: (WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn|null);
    }

    /** Represents a WarActionSystemBeginTurn. */
    class WarActionSystemBeginTurn implements IWarActionSystemBeginTurn {

        /**
         * Constructs a new WarActionSystemBeginTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionSystemBeginTurn);

        /** WarActionSystemBeginTurn extraData. */
        public extraData?: (WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn|null);

        /**
         * Creates a new WarActionSystemBeginTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionSystemBeginTurn instance
         */
        public static create(properties?: WarAction.IWarActionSystemBeginTurn): WarAction.WarActionSystemBeginTurn;

        /**
         * Encodes the specified WarActionSystemBeginTurn message. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.verify|verify} messages.
         * @param message WarActionSystemBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionSystemBeginTurn message, length delimited. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.verify|verify} messages.
         * @param message WarActionSystemBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionSystemBeginTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionSystemBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemBeginTurn;

        /**
         * Decodes a WarActionSystemBeginTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionSystemBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemBeginTurn;

        /**
         * Verifies a WarActionSystemBeginTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionSystemBeginTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemBeginTurn;

        /**
         * Creates a plain object from a WarActionSystemBeginTurn message. Also converts values to other types if specified.
         * @param message WarActionSystemBeginTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionSystemBeginTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionSystemBeginTurn {

        /** Properties of an ExtraDataForSystemBeginTurn. */
        interface IExtraDataForSystemBeginTurn {

            /** ExtraDataForSystemBeginTurn remainingFund */
            remainingFund?: (number|null);

            /** ExtraDataForSystemBeginTurn recoveryDataByTile */
            recoveryDataByTile?: (Structure.IDataForModifyUnit[]|null);

            /** ExtraDataForSystemBeginTurn recoveryDataByUnit */
            recoveryDataByUnit?: (Structure.IDataForModifyUnit[]|null);

            /** ExtraDataForSystemBeginTurn recoveryDataByCo */
            recoveryDataByCo?: (Structure.IDataForModifyUnit[]|null);
        }

        /** Represents an ExtraDataForSystemBeginTurn. */
        class ExtraDataForSystemBeginTurn implements IExtraDataForSystemBeginTurn {

            /**
             * Constructs a new ExtraDataForSystemBeginTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn);

            /** ExtraDataForSystemBeginTurn remainingFund. */
            public remainingFund: number;

            /** ExtraDataForSystemBeginTurn recoveryDataByTile. */
            public recoveryDataByTile: Structure.IDataForModifyUnit[];

            /** ExtraDataForSystemBeginTurn recoveryDataByUnit. */
            public recoveryDataByUnit: Structure.IDataForModifyUnit[];

            /** ExtraDataForSystemBeginTurn recoveryDataByCo. */
            public recoveryDataByCo: Structure.IDataForModifyUnit[];

            /**
             * Creates a new ExtraDataForSystemBeginTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForSystemBeginTurn instance
             */
            public static create(properties?: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Encodes the specified ExtraDataForSystemBeginTurn message. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn.verify|verify} messages.
             * @param message ExtraDataForSystemBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForSystemBeginTurn message, length delimited. Does not implicitly {@link WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn.verify|verify} messages.
             * @param message ExtraDataForSystemBeginTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionSystemBeginTurn.IExtraDataForSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForSystemBeginTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForSystemBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Decodes an ExtraDataForSystemBeginTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForSystemBeginTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Verifies an ExtraDataForSystemBeginTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForSystemBeginTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn;

            /**
             * Creates a plain object from an ExtraDataForSystemBeginTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForSystemBeginTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionSystemBeginTurn.ExtraDataForSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForSystemBeginTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerEndTurn. */
    interface IWarActionPlayerEndTurn {

        /** WarActionPlayerEndTurn extraData */
        extraData?: (WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);
    }

    /** Represents a WarActionPlayerEndTurn. */
    class WarActionPlayerEndTurn implements IWarActionPlayerEndTurn {

        /**
         * Constructs a new WarActionPlayerEndTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerEndTurn);

        /** WarActionPlayerEndTurn extraData. */
        public extraData?: (WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn|null);

        /**
         * Creates a new WarActionPlayerEndTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerEndTurn instance
         */
        public static create(properties?: WarAction.IWarActionPlayerEndTurn): WarAction.WarActionPlayerEndTurn;

        /**
         * Encodes the specified WarActionPlayerEndTurn message. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.verify|verify} messages.
         * @param message WarActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerEndTurn message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.verify|verify} messages.
         * @param message WarActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerEndTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerEndTurn;

        /**
         * Decodes a WarActionPlayerEndTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerEndTurn;

        /**
         * Verifies a WarActionPlayerEndTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerEndTurn
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerEndTurn;

        /**
         * Creates a plain object from a WarActionPlayerEndTurn message. Also converts values to other types if specified.
         * @param message WarActionPlayerEndTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerEndTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerEndTurn {

        /** Properties of an ExtraDataForPlayerEndTurn. */
        interface IExtraDataForPlayerEndTurn {

            /** ExtraDataForPlayerEndTurn restTimeToBootForCurrentPlayer */
            restTimeToBootForCurrentPlayer?: (number|null);
        }

        /** Represents an ExtraDataForPlayerEndTurn. */
        class ExtraDataForPlayerEndTurn implements IExtraDataForPlayerEndTurn {

            /**
             * Constructs a new ExtraDataForPlayerEndTurn.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn);

            /** ExtraDataForPlayerEndTurn restTimeToBootForCurrentPlayer. */
            public restTimeToBootForCurrentPlayer: number;

            /**
             * Creates a new ExtraDataForPlayerEndTurn instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerEndTurn instance
             */
            public static create(properties?: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Encodes the specified ExtraDataForPlayerEndTurn message. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerEndTurn message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn.verify|verify} messages.
             * @param message ExtraDataForPlayerEndTurn message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerEndTurn.IExtraDataForPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Decodes an ExtraDataForPlayerEndTurn message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerEndTurn
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Verifies an ExtraDataForPlayerEndTurn message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerEndTurn
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn;

            /**
             * Creates a plain object from an ExtraDataForPlayerEndTurn message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerEndTurn
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerEndTurn.ExtraDataForPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerEndTurn to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerSurrender. */
    interface IWarActionPlayerSurrender {

        /** WarActionPlayerSurrender isBoot */
        isBoot?: (boolean|null);
    }

    /** Represents a WarActionPlayerSurrender. */
    class WarActionPlayerSurrender implements IWarActionPlayerSurrender {

        /**
         * Constructs a new WarActionPlayerSurrender.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerSurrender);

        /** WarActionPlayerSurrender isBoot. */
        public isBoot: boolean;

        /**
         * Creates a new WarActionPlayerSurrender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerSurrender instance
         */
        public static create(properties?: WarAction.IWarActionPlayerSurrender): WarAction.WarActionPlayerSurrender;

        /**
         * Encodes the specified WarActionPlayerSurrender message. Does not implicitly {@link WarAction.WarActionPlayerSurrender.verify|verify} messages.
         * @param message WarActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerSurrender message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerSurrender.verify|verify} messages.
         * @param message WarActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerSurrender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerSurrender;

        /**
         * Decodes a WarActionPlayerSurrender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerSurrender;

        /**
         * Verifies a WarActionPlayerSurrender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerSurrender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerSurrender
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerSurrender;

        /**
         * Creates a plain object from a WarActionPlayerSurrender message. Also converts values to other types if specified.
         * @param message WarActionPlayerSurrender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerSurrender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarActionPlayerProduceUnit. */
    interface IWarActionPlayerProduceUnit {

        /** WarActionPlayerProduceUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** WarActionPlayerProduceUnit unitType */
        unitType?: (number|null);

        /** WarActionPlayerProduceUnit unitHp */
        unitHp?: (number|null);

        /** WarActionPlayerProduceUnit extraData */
        extraData?: (WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);
    }

    /** Represents a WarActionPlayerProduceUnit. */
    class WarActionPlayerProduceUnit implements IWarActionPlayerProduceUnit {

        /**
         * Constructs a new WarActionPlayerProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerProduceUnit);

        /** WarActionPlayerProduceUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** WarActionPlayerProduceUnit unitType. */
        public unitType: number;

        /** WarActionPlayerProduceUnit unitHp. */
        public unitHp: number;

        /** WarActionPlayerProduceUnit extraData. */
        public extraData?: (WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit|null);

        /**
         * Creates a new WarActionPlayerProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerProduceUnit instance
         */
        public static create(properties?: WarAction.IWarActionPlayerProduceUnit): WarAction.WarActionPlayerProduceUnit;

        /**
         * Encodes the specified WarActionPlayerProduceUnit message. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.verify|verify} messages.
         * @param message WarActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.verify|verify} messages.
         * @param message WarActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerProduceUnit;

        /**
         * Decodes a WarActionPlayerProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerProduceUnit;

        /**
         * Verifies a WarActionPlayerProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerProduceUnit;

        /**
         * Creates a plain object from a WarActionPlayerProduceUnit message. Also converts values to other types if specified.
         * @param message WarActionPlayerProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionPlayerProduceUnit {

        /** Properties of an ExtraDataForPlayerProduceUnit. */
        interface IExtraDataForPlayerProduceUnit {

            /** ExtraDataForPlayerProduceUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForPlayerProduceUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForPlayerProduceUnit cost */
            cost?: (number|null);

            /** ExtraDataForPlayerProduceUnit unitData */
            unitData?: (WarSerialization.ISerialUnit|null);
        }

        /** Represents an ExtraDataForPlayerProduceUnit. */
        class ExtraDataForPlayerProduceUnit implements IExtraDataForPlayerProduceUnit {

            /**
             * Constructs a new ExtraDataForPlayerProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit);

            /** ExtraDataForPlayerProduceUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForPlayerProduceUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForPlayerProduceUnit cost. */
            public cost: number;

            /** ExtraDataForPlayerProduceUnit unitData. */
            public unitData?: (WarSerialization.ISerialUnit|null);

            /**
             * Creates a new ExtraDataForPlayerProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForPlayerProduceUnit instance
             */
            public static create(properties?: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Encodes the specified ExtraDataForPlayerProduceUnit message. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForPlayerProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit.verify|verify} messages.
             * @param message ExtraDataForPlayerProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionPlayerProduceUnit.IExtraDataForPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Decodes an ExtraDataForPlayerProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForPlayerProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Verifies an ExtraDataForPlayerProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForPlayerProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit;

            /**
             * Creates a plain object from an ExtraDataForPlayerProduceUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForPlayerProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionPlayerProduceUnit.ExtraDataForPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForPlayerProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionPlayerDeleteUnit. */
    interface IWarActionPlayerDeleteUnit {

        /** WarActionPlayerDeleteUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);
    }

    /** Represents a WarActionPlayerDeleteUnit. */
    class WarActionPlayerDeleteUnit implements IWarActionPlayerDeleteUnit {

        /**
         * Constructs a new WarActionPlayerDeleteUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerDeleteUnit);

        /** WarActionPlayerDeleteUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /**
         * Creates a new WarActionPlayerDeleteUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerDeleteUnit instance
         */
        public static create(properties?: WarAction.IWarActionPlayerDeleteUnit): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Encodes the specified WarActionPlayerDeleteUnit message. Does not implicitly {@link WarAction.WarActionPlayerDeleteUnit.verify|verify} messages.
         * @param message WarActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerDeleteUnit message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerDeleteUnit.verify|verify} messages.
         * @param message WarActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerDeleteUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Decodes a WarActionPlayerDeleteUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Verifies a WarActionPlayerDeleteUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerDeleteUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerDeleteUnit;

        /**
         * Creates a plain object from a WarActionPlayerDeleteUnit message. Also converts values to other types if specified.
         * @param message WarActionPlayerDeleteUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerDeleteUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarActionPlayerVoteForDraw. */
    interface IWarActionPlayerVoteForDraw {

        /** WarActionPlayerVoteForDraw isAgree */
        isAgree?: (boolean|null);
    }

    /** Represents a WarActionPlayerVoteForDraw. */
    class WarActionPlayerVoteForDraw implements IWarActionPlayerVoteForDraw {

        /**
         * Constructs a new WarActionPlayerVoteForDraw.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionPlayerVoteForDraw);

        /** WarActionPlayerVoteForDraw isAgree. */
        public isAgree: boolean;

        /**
         * Creates a new WarActionPlayerVoteForDraw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionPlayerVoteForDraw instance
         */
        public static create(properties?: WarAction.IWarActionPlayerVoteForDraw): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Encodes the specified WarActionPlayerVoteForDraw message. Does not implicitly {@link WarAction.WarActionPlayerVoteForDraw.verify|verify} messages.
         * @param message WarActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionPlayerVoteForDraw message, length delimited. Does not implicitly {@link WarAction.WarActionPlayerVoteForDraw.verify|verify} messages.
         * @param message WarActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionPlayerVoteForDraw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Decodes a WarActionPlayerVoteForDraw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Verifies a WarActionPlayerVoteForDraw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionPlayerVoteForDraw
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionPlayerVoteForDraw;

        /**
         * Creates a plain object from a WarActionPlayerVoteForDraw message. Also converts values to other types if specified.
         * @param message WarActionPlayerVoteForDraw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionPlayerVoteForDraw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarActionUnitWait. */
    interface IWarActionUnitWait {

        /** WarActionUnitWait path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitWait launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitWait extraData */
        extraData?: (WarAction.WarActionUnitWait.IExtraDataForUnitWait|null);
    }

    /** Represents a WarActionUnitWait. */
    class WarActionUnitWait implements IWarActionUnitWait {

        /**
         * Constructs a new WarActionUnitWait.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitWait);

        /** WarActionUnitWait path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitWait launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitWait extraData. */
        public extraData?: (WarAction.WarActionUnitWait.IExtraDataForUnitWait|null);

        /**
         * Creates a new WarActionUnitWait instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitWait instance
         */
        public static create(properties?: WarAction.IWarActionUnitWait): WarAction.WarActionUnitWait;

        /**
         * Encodes the specified WarActionUnitWait message. Does not implicitly {@link WarAction.WarActionUnitWait.verify|verify} messages.
         * @param message WarActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitWait message, length delimited. Does not implicitly {@link WarAction.WarActionUnitWait.verify|verify} messages.
         * @param message WarActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitWait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitWait;

        /**
         * Decodes a WarActionUnitWait message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitWait;

        /**
         * Verifies a WarActionUnitWait message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitWait message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitWait
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitWait;

        /**
         * Creates a plain object from a WarActionUnitWait message. Also converts values to other types if specified.
         * @param message WarActionUnitWait
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitWait to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitWait {

        /** Properties of an ExtraDataForUnitWait. */
        interface IExtraDataForUnitWait {

            /** ExtraDataForUnitWait discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitWait discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitWait actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitWait. */
        class ExtraDataForUnitWait implements IExtraDataForUnitWait {

            /**
             * Constructs a new ExtraDataForUnitWait.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitWait.IExtraDataForUnitWait);

            /** ExtraDataForUnitWait discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitWait discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitWait actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitWait instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitWait instance
             */
            public static create(properties?: WarAction.WarActionUnitWait.IExtraDataForUnitWait): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Encodes the specified ExtraDataForUnitWait message. Does not implicitly {@link WarAction.WarActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
             * @param message ExtraDataForUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitWait message, length delimited. Does not implicitly {@link WarAction.WarActionUnitWait.ExtraDataForUnitWait.verify|verify} messages.
             * @param message ExtraDataForUnitWait message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitWait.IExtraDataForUnitWait, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitWait message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Decodes an ExtraDataForUnitWait message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitWait
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Verifies an ExtraDataForUnitWait message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitWait message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitWait
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitWait.ExtraDataForUnitWait;

            /**
             * Creates a plain object from an ExtraDataForUnitWait message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitWait
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitWait.ExtraDataForUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitWait to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitBeLoaded. */
    interface IWarActionUnitBeLoaded {

        /** WarActionUnitBeLoaded path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitBeLoaded launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitBeLoaded extraData */
        extraData?: (WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);
    }

    /** Represents a WarActionUnitBeLoaded. */
    class WarActionUnitBeLoaded implements IWarActionUnitBeLoaded {

        /**
         * Constructs a new WarActionUnitBeLoaded.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitBeLoaded);

        /** WarActionUnitBeLoaded path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitBeLoaded launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitBeLoaded extraData. */
        public extraData?: (WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded|null);

        /**
         * Creates a new WarActionUnitBeLoaded instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitBeLoaded instance
         */
        public static create(properties?: WarAction.IWarActionUnitBeLoaded): WarAction.WarActionUnitBeLoaded;

        /**
         * Encodes the specified WarActionUnitBeLoaded message. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.verify|verify} messages.
         * @param message WarActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitBeLoaded message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.verify|verify} messages.
         * @param message WarActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitBeLoaded message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBeLoaded;

        /**
         * Decodes a WarActionUnitBeLoaded message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBeLoaded;

        /**
         * Verifies a WarActionUnitBeLoaded message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitBeLoaded
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBeLoaded;

        /**
         * Creates a plain object from a WarActionUnitBeLoaded message. Also converts values to other types if specified.
         * @param message WarActionUnitBeLoaded
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitBeLoaded to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitBeLoaded {

        /** Properties of an ExtraDataForUnitBeLoaded. */
        interface IExtraDataForUnitBeLoaded {

            /** ExtraDataForUnitBeLoaded discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitBeLoaded discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitBeLoaded actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitBeLoaded. */
        class ExtraDataForUnitBeLoaded implements IExtraDataForUnitBeLoaded {

            /**
             * Constructs a new ExtraDataForUnitBeLoaded.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded);

            /** ExtraDataForUnitBeLoaded discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitBeLoaded discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitBeLoaded actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitBeLoaded instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitBeLoaded instance
             */
            public static create(properties?: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Encodes the specified ExtraDataForUnitBeLoaded message. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
             * @param message ExtraDataForUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitBeLoaded message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded.verify|verify} messages.
             * @param message ExtraDataForUnitBeLoaded message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitBeLoaded.IExtraDataForUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Decodes an ExtraDataForUnitBeLoaded message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitBeLoaded
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Verifies an ExtraDataForUnitBeLoaded message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitBeLoaded
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded;

            /**
             * Creates a plain object from an ExtraDataForUnitBeLoaded message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitBeLoaded
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitBeLoaded.ExtraDataForUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitBeLoaded to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitCaptureTile. */
    interface IWarActionUnitCaptureTile {

        /** WarActionUnitCaptureTile path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitCaptureTile launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitCaptureTile extraData */
        extraData?: (WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);
    }

    /** Represents a WarActionUnitCaptureTile. */
    class WarActionUnitCaptureTile implements IWarActionUnitCaptureTile {

        /**
         * Constructs a new WarActionUnitCaptureTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitCaptureTile);

        /** WarActionUnitCaptureTile path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitCaptureTile launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitCaptureTile extraData. */
        public extraData?: (WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile|null);

        /**
         * Creates a new WarActionUnitCaptureTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitCaptureTile instance
         */
        public static create(properties?: WarAction.IWarActionUnitCaptureTile): WarAction.WarActionUnitCaptureTile;

        /**
         * Encodes the specified WarActionUnitCaptureTile message. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.verify|verify} messages.
         * @param message WarActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitCaptureTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.verify|verify} messages.
         * @param message WarActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitCaptureTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitCaptureTile;

        /**
         * Decodes a WarActionUnitCaptureTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitCaptureTile;

        /**
         * Verifies a WarActionUnitCaptureTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitCaptureTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitCaptureTile;

        /**
         * Creates a plain object from a WarActionUnitCaptureTile message. Also converts values to other types if specified.
         * @param message WarActionUnitCaptureTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitCaptureTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitCaptureTile {

        /** Properties of an ExtraDataForUnitCaptureTile. */
        interface IExtraDataForUnitCaptureTile {

            /** ExtraDataForUnitCaptureTile discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitCaptureTile discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitCaptureTile actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitCaptureTile actingTiles */
            actingTiles?: (WarSerialization.ISerialTile[]|null);
        }

        /** Represents an ExtraDataForUnitCaptureTile. */
        class ExtraDataForUnitCaptureTile implements IExtraDataForUnitCaptureTile {

            /**
             * Constructs a new ExtraDataForUnitCaptureTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile);

            /** ExtraDataForUnitCaptureTile discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitCaptureTile discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitCaptureTile actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitCaptureTile actingTiles. */
            public actingTiles: WarSerialization.ISerialTile[];

            /**
             * Creates a new ExtraDataForUnitCaptureTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitCaptureTile instance
             */
            public static create(properties?: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Encodes the specified ExtraDataForUnitCaptureTile message. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
             * @param message ExtraDataForUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitCaptureTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile.verify|verify} messages.
             * @param message ExtraDataForUnitCaptureTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitCaptureTile.IExtraDataForUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Decodes an ExtraDataForUnitCaptureTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitCaptureTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Verifies an ExtraDataForUnitCaptureTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitCaptureTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile;

            /**
             * Creates a plain object from an ExtraDataForUnitCaptureTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitCaptureTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitCaptureTile.ExtraDataForUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitCaptureTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitAttackTile. */
    interface IWarActionUnitAttackTile {

        /** WarActionUnitAttackTile path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackTile launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitAttackTile targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackTile extraData */
        extraData?: (WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile|null);
    }

    /** Represents a WarActionUnitAttackTile. */
    class WarActionUnitAttackTile implements IWarActionUnitAttackTile {

        /**
         * Constructs a new WarActionUnitAttackTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitAttackTile);

        /** WarActionUnitAttackTile path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackTile launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitAttackTile targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackTile extraData. */
        public extraData?: (WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile|null);

        /**
         * Creates a new WarActionUnitAttackTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitAttackTile instance
         */
        public static create(properties?: WarAction.IWarActionUnitAttackTile): WarAction.WarActionUnitAttackTile;

        /**
         * Encodes the specified WarActionUnitAttackTile message. Does not implicitly {@link WarAction.WarActionUnitAttackTile.verify|verify} messages.
         * @param message WarActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitAttackTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackTile.verify|verify} messages.
         * @param message WarActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitAttackTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackTile;

        /**
         * Decodes a WarActionUnitAttackTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackTile;

        /**
         * Verifies a WarActionUnitAttackTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitAttackTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitAttackTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackTile;

        /**
         * Creates a plain object from a WarActionUnitAttackTile message. Also converts values to other types if specified.
         * @param message WarActionUnitAttackTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitAttackTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitAttackTile {

        /** Properties of an ExtraDataForUnitAttackTile. */
        interface IExtraDataForUnitAttackTile {

            /** ExtraDataForUnitAttackTile discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackTile discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitAttackTile actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackTile attackDamage */
            attackDamage?: (number|null);
        }

        /** Represents an ExtraDataForUnitAttackTile. */
        class ExtraDataForUnitAttackTile implements IExtraDataForUnitAttackTile {

            /**
             * Constructs a new ExtraDataForUnitAttackTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile);

            /** ExtraDataForUnitAttackTile discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackTile discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitAttackTile actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackTile attackDamage. */
            public attackDamage: number;

            /**
             * Creates a new ExtraDataForUnitAttackTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitAttackTile instance
             */
            public static create(properties?: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Encodes the specified ExtraDataForUnitAttackTile message. Does not implicitly {@link WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
             * @param message ExtraDataForUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitAttackTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile.verify|verify} messages.
             * @param message ExtraDataForUnitAttackTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitAttackTile.IExtraDataForUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Decodes an ExtraDataForUnitAttackTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitAttackTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Verifies an ExtraDataForUnitAttackTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitAttackTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitAttackTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile;

            /**
             * Creates a plain object from an ExtraDataForUnitAttackTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitAttackTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitAttackTile.ExtraDataForUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitAttackTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitAttackUnit. */
    interface IWarActionUnitAttackUnit {

        /** WarActionUnitAttackUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitAttackUnit targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackUnit extraData */
        extraData?: (WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);
    }

    /** Represents a WarActionUnitAttackUnit. */
    class WarActionUnitAttackUnit implements IWarActionUnitAttackUnit {

        /**
         * Constructs a new WarActionUnitAttackUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitAttackUnit);

        /** WarActionUnitAttackUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitAttackUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitAttackUnit targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitAttackUnit extraData. */
        public extraData?: (WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit|null);

        /**
         * Creates a new WarActionUnitAttackUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitAttackUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitAttackUnit): WarAction.WarActionUnitAttackUnit;

        /**
         * Encodes the specified WarActionUnitAttackUnit message. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.verify|verify} messages.
         * @param message WarActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitAttackUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.verify|verify} messages.
         * @param message WarActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitAttackUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackUnit;

        /**
         * Decodes a WarActionUnitAttackUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackUnit;

        /**
         * Verifies a WarActionUnitAttackUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitAttackUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackUnit;

        /**
         * Creates a plain object from a WarActionUnitAttackUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitAttackUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitAttackUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitAttackUnit {

        /** Properties of an ExtraDataForUnitAttackUnit. */
        interface IExtraDataForUnitAttackUnit {

            /** ExtraDataForUnitAttackUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitAttackUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitAttackUnit attackDamage */
            attackDamage?: (number|null);

            /** ExtraDataForUnitAttackUnit counterDamage */
            counterDamage?: (number|null);

            /** ExtraDataForUnitAttackUnit attackerUnitAfterAction */
            attackerUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit targetUnitAfterAction */
            targetUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit attackerCoEnergyAfterAction */
            attackerCoEnergyAfterAction?: (number|null);

            /** ExtraDataForUnitAttackUnit targetCoEnergyAfterAction */
            targetCoEnergyAfterAction?: (number|null);
        }

        /** Represents an ExtraDataForUnitAttackUnit. */
        class ExtraDataForUnitAttackUnit implements IExtraDataForUnitAttackUnit {

            /**
             * Constructs a new ExtraDataForUnitAttackUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit);

            /** ExtraDataForUnitAttackUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitAttackUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitAttackUnit attackDamage. */
            public attackDamage: number;

            /** ExtraDataForUnitAttackUnit counterDamage. */
            public counterDamage: number;

            /** ExtraDataForUnitAttackUnit attackerUnitAfterAction. */
            public attackerUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit targetUnitAfterAction. */
            public targetUnitAfterAction?: (WarSerialization.ISerialUnit|null);

            /** ExtraDataForUnitAttackUnit attackerCoEnergyAfterAction. */
            public attackerCoEnergyAfterAction: number;

            /** ExtraDataForUnitAttackUnit targetCoEnergyAfterAction. */
            public targetCoEnergyAfterAction: number;

            /**
             * Creates a new ExtraDataForUnitAttackUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitAttackUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Encodes the specified ExtraDataForUnitAttackUnit message. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
             * @param message ExtraDataForUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitAttackUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit.verify|verify} messages.
             * @param message ExtraDataForUnitAttackUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitAttackUnit.IExtraDataForUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Decodes an ExtraDataForUnitAttackUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitAttackUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Verifies an ExtraDataForUnitAttackUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitAttackUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitAttackUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitAttackUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitAttackUnit.ExtraDataForUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitAttackUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitDropUnit. */
    interface IWarActionUnitDropUnit {

        /** WarActionUnitDropUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitDropUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitDropUnit dropDestinations */
        dropDestinations?: (Structure.IDropDestination[]|null);

        /** WarActionUnitDropUnit isDropBlocked */
        isDropBlocked?: (boolean|null);

        /** WarActionUnitDropUnit extraData */
        extraData?: (WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit|null);
    }

    /** Represents a WarActionUnitDropUnit. */
    class WarActionUnitDropUnit implements IWarActionUnitDropUnit {

        /**
         * Constructs a new WarActionUnitDropUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitDropUnit);

        /** WarActionUnitDropUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitDropUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitDropUnit dropDestinations. */
        public dropDestinations: Structure.IDropDestination[];

        /** WarActionUnitDropUnit isDropBlocked. */
        public isDropBlocked: boolean;

        /** WarActionUnitDropUnit extraData. */
        public extraData?: (WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit|null);

        /**
         * Creates a new WarActionUnitDropUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitDropUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitDropUnit): WarAction.WarActionUnitDropUnit;

        /**
         * Encodes the specified WarActionUnitDropUnit message. Does not implicitly {@link WarAction.WarActionUnitDropUnit.verify|verify} messages.
         * @param message WarActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitDropUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDropUnit.verify|verify} messages.
         * @param message WarActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitDropUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDropUnit;

        /**
         * Decodes a WarActionUnitDropUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDropUnit;

        /**
         * Verifies a WarActionUnitDropUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitDropUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitDropUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDropUnit;

        /**
         * Creates a plain object from a WarActionUnitDropUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitDropUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitDropUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitDropUnit {

        /** Properties of an ExtraDataForUnitDropUnit. */
        interface IExtraDataForUnitDropUnit {

            /** ExtraDataForUnitDropUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitDropUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitDropUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitDropUnit. */
        class ExtraDataForUnitDropUnit implements IExtraDataForUnitDropUnit {

            /**
             * Constructs a new ExtraDataForUnitDropUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit);

            /** ExtraDataForUnitDropUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitDropUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitDropUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitDropUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitDropUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Encodes the specified ExtraDataForUnitDropUnit message. Does not implicitly {@link WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
             * @param message ExtraDataForUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitDropUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit.verify|verify} messages.
             * @param message ExtraDataForUnitDropUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitDropUnit.IExtraDataForUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Decodes an ExtraDataForUnitDropUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitDropUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Verifies an ExtraDataForUnitDropUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitDropUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitDropUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitDropUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitDropUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitDropUnit.ExtraDataForUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitDropUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitBuildTile. */
    interface IWarActionUnitBuildTile {

        /** WarActionUnitBuildTile path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitBuildTile launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitBuildTile extraData */
        extraData?: (WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile|null);
    }

    /** Represents a WarActionUnitBuildTile. */
    class WarActionUnitBuildTile implements IWarActionUnitBuildTile {

        /**
         * Constructs a new WarActionUnitBuildTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitBuildTile);

        /** WarActionUnitBuildTile path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitBuildTile launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitBuildTile extraData. */
        public extraData?: (WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile|null);

        /**
         * Creates a new WarActionUnitBuildTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitBuildTile instance
         */
        public static create(properties?: WarAction.IWarActionUnitBuildTile): WarAction.WarActionUnitBuildTile;

        /**
         * Encodes the specified WarActionUnitBuildTile message. Does not implicitly {@link WarAction.WarActionUnitBuildTile.verify|verify} messages.
         * @param message WarActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitBuildTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBuildTile.verify|verify} messages.
         * @param message WarActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitBuildTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBuildTile;

        /**
         * Decodes a WarActionUnitBuildTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBuildTile;

        /**
         * Verifies a WarActionUnitBuildTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitBuildTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitBuildTile
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBuildTile;

        /**
         * Creates a plain object from a WarActionUnitBuildTile message. Also converts values to other types if specified.
         * @param message WarActionUnitBuildTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitBuildTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitBuildTile {

        /** Properties of an ExtraDataForUnitBuildTile. */
        interface IExtraDataForUnitBuildTile {

            /** ExtraDataForUnitBuildTile discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitBuildTile discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitBuildTile actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitBuildTile actingTiles */
            actingTiles?: (WarSerialization.ISerialTile[]|null);
        }

        /** Represents an ExtraDataForUnitBuildTile. */
        class ExtraDataForUnitBuildTile implements IExtraDataForUnitBuildTile {

            /**
             * Constructs a new ExtraDataForUnitBuildTile.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile);

            /** ExtraDataForUnitBuildTile discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitBuildTile discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitBuildTile actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitBuildTile actingTiles. */
            public actingTiles: WarSerialization.ISerialTile[];

            /**
             * Creates a new ExtraDataForUnitBuildTile instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitBuildTile instance
             */
            public static create(properties?: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Encodes the specified ExtraDataForUnitBuildTile message. Does not implicitly {@link WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
             * @param message ExtraDataForUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitBuildTile message, length delimited. Does not implicitly {@link WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile.verify|verify} messages.
             * @param message ExtraDataForUnitBuildTile message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitBuildTile.IExtraDataForUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Decodes an ExtraDataForUnitBuildTile message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitBuildTile
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Verifies an ExtraDataForUnitBuildTile message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitBuildTile message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitBuildTile
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile;

            /**
             * Creates a plain object from an ExtraDataForUnitBuildTile message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitBuildTile
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitBuildTile.ExtraDataForUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitBuildTile to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitDive. */
    interface IWarActionUnitDive {

        /** WarActionUnitDive path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitDive launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitDive extraData */
        extraData?: (WarAction.WarActionUnitDive.IExtraDataForUnitDive|null);
    }

    /** Represents a WarActionUnitDive. */
    class WarActionUnitDive implements IWarActionUnitDive {

        /**
         * Constructs a new WarActionUnitDive.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitDive);

        /** WarActionUnitDive path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitDive launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitDive extraData. */
        public extraData?: (WarAction.WarActionUnitDive.IExtraDataForUnitDive|null);

        /**
         * Creates a new WarActionUnitDive instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitDive instance
         */
        public static create(properties?: WarAction.IWarActionUnitDive): WarAction.WarActionUnitDive;

        /**
         * Encodes the specified WarActionUnitDive message. Does not implicitly {@link WarAction.WarActionUnitDive.verify|verify} messages.
         * @param message WarActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitDive message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDive.verify|verify} messages.
         * @param message WarActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitDive message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDive;

        /**
         * Decodes a WarActionUnitDive message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDive;

        /**
         * Verifies a WarActionUnitDive message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitDive message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitDive
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDive;

        /**
         * Creates a plain object from a WarActionUnitDive message. Also converts values to other types if specified.
         * @param message WarActionUnitDive
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitDive to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitDive {

        /** Properties of an ExtraDataForUnitDive. */
        interface IExtraDataForUnitDive {

            /** ExtraDataForUnitDive discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitDive discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitDive actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitDive. */
        class ExtraDataForUnitDive implements IExtraDataForUnitDive {

            /**
             * Constructs a new ExtraDataForUnitDive.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitDive.IExtraDataForUnitDive);

            /** ExtraDataForUnitDive discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitDive discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitDive actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitDive instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitDive instance
             */
            public static create(properties?: WarAction.WarActionUnitDive.IExtraDataForUnitDive): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Encodes the specified ExtraDataForUnitDive message. Does not implicitly {@link WarAction.WarActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
             * @param message ExtraDataForUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitDive message, length delimited. Does not implicitly {@link WarAction.WarActionUnitDive.ExtraDataForUnitDive.verify|verify} messages.
             * @param message ExtraDataForUnitDive message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitDive.IExtraDataForUnitDive, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitDive message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Decodes an ExtraDataForUnitDive message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitDive
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Verifies an ExtraDataForUnitDive message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitDive message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitDive
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitDive.ExtraDataForUnitDive;

            /**
             * Creates a plain object from an ExtraDataForUnitDive message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitDive
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitDive.ExtraDataForUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitDive to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitSurface. */
    interface IWarActionUnitSurface {

        /** WarActionUnitSurface path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitSurface launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitSurface extraData */
        extraData?: (WarAction.WarActionUnitSurface.IExtraDataForUnitSurface|null);
    }

    /** Represents a WarActionUnitSurface. */
    class WarActionUnitSurface implements IWarActionUnitSurface {

        /**
         * Constructs a new WarActionUnitSurface.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitSurface);

        /** WarActionUnitSurface path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitSurface launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitSurface extraData. */
        public extraData?: (WarAction.WarActionUnitSurface.IExtraDataForUnitSurface|null);

        /**
         * Creates a new WarActionUnitSurface instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitSurface instance
         */
        public static create(properties?: WarAction.IWarActionUnitSurface): WarAction.WarActionUnitSurface;

        /**
         * Encodes the specified WarActionUnitSurface message. Does not implicitly {@link WarAction.WarActionUnitSurface.verify|verify} messages.
         * @param message WarActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitSurface message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSurface.verify|verify} messages.
         * @param message WarActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitSurface message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSurface;

        /**
         * Decodes a WarActionUnitSurface message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSurface;

        /**
         * Verifies a WarActionUnitSurface message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitSurface message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitSurface
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSurface;

        /**
         * Creates a plain object from a WarActionUnitSurface message. Also converts values to other types if specified.
         * @param message WarActionUnitSurface
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitSurface to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitSurface {

        /** Properties of an ExtraDataForUnitSurface. */
        interface IExtraDataForUnitSurface {

            /** ExtraDataForUnitSurface discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitSurface discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitSurface actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitSurface. */
        class ExtraDataForUnitSurface implements IExtraDataForUnitSurface {

            /**
             * Constructs a new ExtraDataForUnitSurface.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface);

            /** ExtraDataForUnitSurface discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitSurface discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitSurface actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitSurface instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitSurface instance
             */
            public static create(properties?: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Encodes the specified ExtraDataForUnitSurface message. Does not implicitly {@link WarAction.WarActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
             * @param message ExtraDataForUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitSurface message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSurface.ExtraDataForUnitSurface.verify|verify} messages.
             * @param message ExtraDataForUnitSurface message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitSurface.IExtraDataForUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Decodes an ExtraDataForUnitSurface message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitSurface
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Verifies an ExtraDataForUnitSurface message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitSurface message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitSurface
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSurface.ExtraDataForUnitSurface;

            /**
             * Creates a plain object from an ExtraDataForUnitSurface message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitSurface
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitSurface.ExtraDataForUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitSurface to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitJoinUnit. */
    interface IWarActionUnitJoinUnit {

        /** WarActionUnitJoinUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitJoinUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitJoinUnit extraData */
        extraData?: (WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);
    }

    /** Represents a WarActionUnitJoinUnit. */
    class WarActionUnitJoinUnit implements IWarActionUnitJoinUnit {

        /**
         * Constructs a new WarActionUnitJoinUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitJoinUnit);

        /** WarActionUnitJoinUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitJoinUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitJoinUnit extraData. */
        public extraData?: (WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit|null);

        /**
         * Creates a new WarActionUnitJoinUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitJoinUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitJoinUnit): WarAction.WarActionUnitJoinUnit;

        /**
         * Encodes the specified WarActionUnitJoinUnit message. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.verify|verify} messages.
         * @param message WarActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitJoinUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.verify|verify} messages.
         * @param message WarActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitJoinUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitJoinUnit;

        /**
         * Decodes a WarActionUnitJoinUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitJoinUnit;

        /**
         * Verifies a WarActionUnitJoinUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitJoinUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitJoinUnit;

        /**
         * Creates a plain object from a WarActionUnitJoinUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitJoinUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitJoinUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitJoinUnit {

        /** Properties of an ExtraDataForUnitJoinUnit. */
        interface IExtraDataForUnitJoinUnit {

            /** ExtraDataForUnitJoinUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitJoinUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitJoinUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitJoinUnit. */
        class ExtraDataForUnitJoinUnit implements IExtraDataForUnitJoinUnit {

            /**
             * Constructs a new ExtraDataForUnitJoinUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit);

            /** ExtraDataForUnitJoinUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitJoinUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitJoinUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitJoinUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitJoinUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Encodes the specified ExtraDataForUnitJoinUnit message. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
             * @param message ExtraDataForUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitJoinUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit.verify|verify} messages.
             * @param message ExtraDataForUnitJoinUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitJoinUnit.IExtraDataForUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Decodes an ExtraDataForUnitJoinUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitJoinUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Verifies an ExtraDataForUnitJoinUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitJoinUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitJoinUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitJoinUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitJoinUnit.ExtraDataForUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitJoinUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitLaunchFlare. */
    interface IWarActionUnitLaunchFlare {

        /** WarActionUnitLaunchFlare path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchFlare launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitLaunchFlare targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchFlare extraData */
        extraData?: (WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);
    }

    /** Represents a WarActionUnitLaunchFlare. */
    class WarActionUnitLaunchFlare implements IWarActionUnitLaunchFlare {

        /**
         * Constructs a new WarActionUnitLaunchFlare.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitLaunchFlare);

        /** WarActionUnitLaunchFlare path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchFlare launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitLaunchFlare targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchFlare extraData. */
        public extraData?: (WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare|null);

        /**
         * Creates a new WarActionUnitLaunchFlare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitLaunchFlare instance
         */
        public static create(properties?: WarAction.IWarActionUnitLaunchFlare): WarAction.WarActionUnitLaunchFlare;

        /**
         * Encodes the specified WarActionUnitLaunchFlare message. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.verify|verify} messages.
         * @param message WarActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitLaunchFlare message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.verify|verify} messages.
         * @param message WarActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitLaunchFlare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchFlare;

        /**
         * Decodes a WarActionUnitLaunchFlare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchFlare;

        /**
         * Verifies a WarActionUnitLaunchFlare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitLaunchFlare
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchFlare;

        /**
         * Creates a plain object from a WarActionUnitLaunchFlare message. Also converts values to other types if specified.
         * @param message WarActionUnitLaunchFlare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitLaunchFlare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitLaunchFlare {

        /** Properties of an ExtraDataForUnitLaunchFlare. */
        interface IExtraDataForUnitLaunchFlare {

            /** ExtraDataForUnitLaunchFlare discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitLaunchFlare discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitLaunchFlare actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitLaunchFlare. */
        class ExtraDataForUnitLaunchFlare implements IExtraDataForUnitLaunchFlare {

            /**
             * Constructs a new ExtraDataForUnitLaunchFlare.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare);

            /** ExtraDataForUnitLaunchFlare discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitLaunchFlare discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitLaunchFlare actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitLaunchFlare instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLaunchFlare instance
             */
            public static create(properties?: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Encodes the specified ExtraDataForUnitLaunchFlare message. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLaunchFlare message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchFlare message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitLaunchFlare.IExtraDataForUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Decodes an ExtraDataForUnitLaunchFlare message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLaunchFlare
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Verifies an ExtraDataForUnitLaunchFlare message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLaunchFlare
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare;

            /**
             * Creates a plain object from an ExtraDataForUnitLaunchFlare message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLaunchFlare
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitLaunchFlare.ExtraDataForUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLaunchFlare to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitLaunchSilo. */
    interface IWarActionUnitLaunchSilo {

        /** WarActionUnitLaunchSilo path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchSilo launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitLaunchSilo targetGridIndex */
        targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchSilo extraData */
        extraData?: (WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);
    }

    /** Represents a WarActionUnitLaunchSilo. */
    class WarActionUnitLaunchSilo implements IWarActionUnitLaunchSilo {

        /**
         * Constructs a new WarActionUnitLaunchSilo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitLaunchSilo);

        /** WarActionUnitLaunchSilo path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitLaunchSilo launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitLaunchSilo targetGridIndex. */
        public targetGridIndex?: (Structure.IGridIndex|null);

        /** WarActionUnitLaunchSilo extraData. */
        public extraData?: (WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo|null);

        /**
         * Creates a new WarActionUnitLaunchSilo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitLaunchSilo instance
         */
        public static create(properties?: WarAction.IWarActionUnitLaunchSilo): WarAction.WarActionUnitLaunchSilo;

        /**
         * Encodes the specified WarActionUnitLaunchSilo message. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.verify|verify} messages.
         * @param message WarActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitLaunchSilo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.verify|verify} messages.
         * @param message WarActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitLaunchSilo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchSilo;

        /**
         * Decodes a WarActionUnitLaunchSilo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchSilo;

        /**
         * Verifies a WarActionUnitLaunchSilo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitLaunchSilo
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchSilo;

        /**
         * Creates a plain object from a WarActionUnitLaunchSilo message. Also converts values to other types if specified.
         * @param message WarActionUnitLaunchSilo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitLaunchSilo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitLaunchSilo {

        /** Properties of an ExtraDataForUnitLaunchSilo. */
        interface IExtraDataForUnitLaunchSilo {

            /** ExtraDataForUnitLaunchSilo discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitLaunchSilo discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitLaunchSilo actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitLaunchSilo. */
        class ExtraDataForUnitLaunchSilo implements IExtraDataForUnitLaunchSilo {

            /**
             * Constructs a new ExtraDataForUnitLaunchSilo.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo);

            /** ExtraDataForUnitLaunchSilo discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitLaunchSilo discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitLaunchSilo actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitLaunchSilo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLaunchSilo instance
             */
            public static create(properties?: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Encodes the specified ExtraDataForUnitLaunchSilo message. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLaunchSilo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo.verify|verify} messages.
             * @param message ExtraDataForUnitLaunchSilo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitLaunchSilo.IExtraDataForUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Decodes an ExtraDataForUnitLaunchSilo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLaunchSilo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Verifies an ExtraDataForUnitLaunchSilo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLaunchSilo
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo;

            /**
             * Creates a plain object from an ExtraDataForUnitLaunchSilo message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLaunchSilo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitLaunchSilo.ExtraDataForUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLaunchSilo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitProduceUnit. */
    interface IWarActionUnitProduceUnit {

        /** WarActionUnitProduceUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitProduceUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitProduceUnit extraData */
        extraData?: (WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);
    }

    /** Represents a WarActionUnitProduceUnit. */
    class WarActionUnitProduceUnit implements IWarActionUnitProduceUnit {

        /**
         * Constructs a new WarActionUnitProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitProduceUnit);

        /** WarActionUnitProduceUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitProduceUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitProduceUnit extraData. */
        public extraData?: (WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit|null);

        /**
         * Creates a new WarActionUnitProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitProduceUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitProduceUnit): WarAction.WarActionUnitProduceUnit;

        /**
         * Encodes the specified WarActionUnitProduceUnit message. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.verify|verify} messages.
         * @param message WarActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.verify|verify} messages.
         * @param message WarActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitProduceUnit;

        /**
         * Decodes a WarActionUnitProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitProduceUnit;

        /**
         * Verifies a WarActionUnitProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitProduceUnit;

        /**
         * Creates a plain object from a WarActionUnitProduceUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitProduceUnit {

        /** Properties of an ExtraDataForUnitProduceUnit. */
        interface IExtraDataForUnitProduceUnit {

            /** ExtraDataForUnitProduceUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitProduceUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitProduceUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitProduceUnit cost */
            cost?: (number|null);
        }

        /** Represents an ExtraDataForUnitProduceUnit. */
        class ExtraDataForUnitProduceUnit implements IExtraDataForUnitProduceUnit {

            /**
             * Constructs a new ExtraDataForUnitProduceUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit);

            /** ExtraDataForUnitProduceUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitProduceUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitProduceUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitProduceUnit cost. */
            public cost: number;

            /**
             * Creates a new ExtraDataForUnitProduceUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitProduceUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Encodes the specified ExtraDataForUnitProduceUnit message. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
             * @param message ExtraDataForUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitProduceUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit.verify|verify} messages.
             * @param message ExtraDataForUnitProduceUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitProduceUnit.IExtraDataForUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Decodes an ExtraDataForUnitProduceUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitProduceUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Verifies an ExtraDataForUnitProduceUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitProduceUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitProduceUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitProduceUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitProduceUnit.ExtraDataForUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitProduceUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitSupplyUnit. */
    interface IWarActionUnitSupplyUnit {

        /** WarActionUnitSupplyUnit path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitSupplyUnit launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitSupplyUnit extraData */
        extraData?: (WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);
    }

    /** Represents a WarActionUnitSupplyUnit. */
    class WarActionUnitSupplyUnit implements IWarActionUnitSupplyUnit {

        /**
         * Constructs a new WarActionUnitSupplyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitSupplyUnit);

        /** WarActionUnitSupplyUnit path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitSupplyUnit launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitSupplyUnit extraData. */
        public extraData?: (WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit|null);

        /**
         * Creates a new WarActionUnitSupplyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitSupplyUnit instance
         */
        public static create(properties?: WarAction.IWarActionUnitSupplyUnit): WarAction.WarActionUnitSupplyUnit;

        /**
         * Encodes the specified WarActionUnitSupplyUnit message. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.verify|verify} messages.
         * @param message WarActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitSupplyUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.verify|verify} messages.
         * @param message WarActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitSupplyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSupplyUnit;

        /**
         * Decodes a WarActionUnitSupplyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSupplyUnit;

        /**
         * Verifies a WarActionUnitSupplyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitSupplyUnit
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSupplyUnit;

        /**
         * Creates a plain object from a WarActionUnitSupplyUnit message. Also converts values to other types if specified.
         * @param message WarActionUnitSupplyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitSupplyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitSupplyUnit {

        /** Properties of an ExtraDataForUnitSupplyUnit. */
        interface IExtraDataForUnitSupplyUnit {

            /** ExtraDataForUnitSupplyUnit discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitSupplyUnit discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitSupplyUnit actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitSupplyUnit. */
        class ExtraDataForUnitSupplyUnit implements IExtraDataForUnitSupplyUnit {

            /**
             * Constructs a new ExtraDataForUnitSupplyUnit.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit);

            /** ExtraDataForUnitSupplyUnit discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitSupplyUnit discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitSupplyUnit actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitSupplyUnit instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitSupplyUnit instance
             */
            public static create(properties?: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Encodes the specified ExtraDataForUnitSupplyUnit message. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
             * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitSupplyUnit message, length delimited. Does not implicitly {@link WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit.verify|verify} messages.
             * @param message ExtraDataForUnitSupplyUnit message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitSupplyUnit.IExtraDataForUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Decodes an ExtraDataForUnitSupplyUnit message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitSupplyUnit
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Verifies an ExtraDataForUnitSupplyUnit message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitSupplyUnit
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit;

            /**
             * Creates a plain object from an ExtraDataForUnitSupplyUnit message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitSupplyUnit
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitSupplyUnit.ExtraDataForUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitSupplyUnit to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitLoadCo. */
    interface IWarActionUnitLoadCo {

        /** WarActionUnitLoadCo path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitLoadCo launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitLoadCo extraData */
        extraData?: (WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo|null);
    }

    /** Represents a WarActionUnitLoadCo. */
    class WarActionUnitLoadCo implements IWarActionUnitLoadCo {

        /**
         * Constructs a new WarActionUnitLoadCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitLoadCo);

        /** WarActionUnitLoadCo path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitLoadCo launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitLoadCo extraData. */
        public extraData?: (WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo|null);

        /**
         * Creates a new WarActionUnitLoadCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitLoadCo instance
         */
        public static create(properties?: WarAction.IWarActionUnitLoadCo): WarAction.WarActionUnitLoadCo;

        /**
         * Encodes the specified WarActionUnitLoadCo message. Does not implicitly {@link WarAction.WarActionUnitLoadCo.verify|verify} messages.
         * @param message WarActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitLoadCo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLoadCo.verify|verify} messages.
         * @param message WarActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitLoadCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLoadCo;

        /**
         * Decodes a WarActionUnitLoadCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLoadCo;

        /**
         * Verifies a WarActionUnitLoadCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitLoadCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitLoadCo
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLoadCo;

        /**
         * Creates a plain object from a WarActionUnitLoadCo message. Also converts values to other types if specified.
         * @param message WarActionUnitLoadCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitLoadCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitLoadCo {

        /** Properties of an ExtraDataForUnitLoadCo. */
        interface IExtraDataForUnitLoadCo {

            /** ExtraDataForUnitLoadCo discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitLoadCo discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitLoadCo actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);
        }

        /** Represents an ExtraDataForUnitLoadCo. */
        class ExtraDataForUnitLoadCo implements IExtraDataForUnitLoadCo {

            /**
             * Constructs a new ExtraDataForUnitLoadCo.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo);

            /** ExtraDataForUnitLoadCo discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitLoadCo discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitLoadCo actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /**
             * Creates a new ExtraDataForUnitLoadCo instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitLoadCo instance
             */
            public static create(properties?: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Encodes the specified ExtraDataForUnitLoadCo message. Does not implicitly {@link WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
             * @param message ExtraDataForUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitLoadCo message, length delimited. Does not implicitly {@link WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo.verify|verify} messages.
             * @param message ExtraDataForUnitLoadCo message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitLoadCo.IExtraDataForUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Decodes an ExtraDataForUnitLoadCo message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitLoadCo
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Verifies an ExtraDataForUnitLoadCo message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitLoadCo message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitLoadCo
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo;

            /**
             * Creates a plain object from an ExtraDataForUnitLoadCo message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitLoadCo
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitLoadCo.ExtraDataForUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitLoadCo to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionUnitUseCoSkill. */
    interface IWarActionUnitUseCoSkill {

        /** WarActionUnitUseCoSkill path */
        path?: (Structure.IMovePath|null);

        /** WarActionUnitUseCoSkill launchUnitId */
        launchUnitId?: (number|null);

        /** WarActionUnitUseCoSkill skillType */
        skillType?: (number|null);

        /** WarActionUnitUseCoSkill extraData */
        extraData?: (WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);
    }

    /** Represents a WarActionUnitUseCoSkill. */
    class WarActionUnitUseCoSkill implements IWarActionUnitUseCoSkill {

        /**
         * Constructs a new WarActionUnitUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionUnitUseCoSkill);

        /** WarActionUnitUseCoSkill path. */
        public path?: (Structure.IMovePath|null);

        /** WarActionUnitUseCoSkill launchUnitId. */
        public launchUnitId: number;

        /** WarActionUnitUseCoSkill skillType. */
        public skillType: number;

        /** WarActionUnitUseCoSkill extraData. */
        public extraData?: (WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill|null);

        /**
         * Creates a new WarActionUnitUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionUnitUseCoSkill instance
         */
        public static create(properties?: WarAction.IWarActionUnitUseCoSkill): WarAction.WarActionUnitUseCoSkill;

        /**
         * Encodes the specified WarActionUnitUseCoSkill message. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.verify|verify} messages.
         * @param message WarActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionUnitUseCoSkill message, length delimited. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.verify|verify} messages.
         * @param message WarActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionUnitUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitUseCoSkill;

        /**
         * Decodes a WarActionUnitUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitUseCoSkill;

        /**
         * Verifies a WarActionUnitUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionUnitUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitUseCoSkill;

        /**
         * Creates a plain object from a WarActionUnitUseCoSkill message. Also converts values to other types if specified.
         * @param message WarActionUnitUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionUnitUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace WarActionUnitUseCoSkill {

        /** Properties of an ExtraDataForUnitUseCoSkill. */
        interface IExtraDataForUnitUseCoSkill {

            /** ExtraDataForUnitUseCoSkill discoveredUnits */
            discoveredUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitUseCoSkill discoveredTiles */
            discoveredTiles?: (WarSerialization.ISerialTile[]|null);

            /** ExtraDataForUnitUseCoSkill actingUnits */
            actingUnits?: (WarSerialization.ISerialUnit[]|null);

            /** ExtraDataForUnitUseCoSkill skillDataList */
            skillDataList?: (Structure.IDataForUseCoSkill[]|null);
        }

        /** Represents an ExtraDataForUnitUseCoSkill. */
        class ExtraDataForUnitUseCoSkill implements IExtraDataForUnitUseCoSkill {

            /**
             * Constructs a new ExtraDataForUnitUseCoSkill.
             * @param [properties] Properties to set
             */
            constructor(properties?: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill);

            /** ExtraDataForUnitUseCoSkill discoveredUnits. */
            public discoveredUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitUseCoSkill discoveredTiles. */
            public discoveredTiles: WarSerialization.ISerialTile[];

            /** ExtraDataForUnitUseCoSkill actingUnits. */
            public actingUnits: WarSerialization.ISerialUnit[];

            /** ExtraDataForUnitUseCoSkill skillDataList. */
            public skillDataList: Structure.IDataForUseCoSkill[];

            /**
             * Creates a new ExtraDataForUnitUseCoSkill instance using the specified properties.
             * @param [properties] Properties to set
             * @returns ExtraDataForUnitUseCoSkill instance
             */
            public static create(properties?: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Encodes the specified ExtraDataForUnitUseCoSkill message. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified ExtraDataForUnitUseCoSkill message, length delimited. Does not implicitly {@link WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill.verify|verify} messages.
             * @param message ExtraDataForUnitUseCoSkill message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: WarAction.WarActionUnitUseCoSkill.IExtraDataForUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns ExtraDataForUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Decodes an ExtraDataForUnitUseCoSkill message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns ExtraDataForUnitUseCoSkill
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Verifies an ExtraDataForUnitUseCoSkill message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an ExtraDataForUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns ExtraDataForUnitUseCoSkill
             */
            public static fromObject(object: { [k: string]: any }): WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill;

            /**
             * Creates a plain object from an ExtraDataForUnitUseCoSkill message. Also converts values to other types if specified.
             * @param message ExtraDataForUnitUseCoSkill
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: WarAction.WarActionUnitUseCoSkill.ExtraDataForUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this ExtraDataForUnitUseCoSkill to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a WarActionContainer. */
    interface IWarActionContainer {

        /** WarActionContainer actionId */
        actionId?: (number|null);

        /** WarActionContainer WarActionSystemBeginTurn */
        WarActionSystemBeginTurn?: (WarAction.IWarActionSystemBeginTurn|null);

        /** WarActionContainer WarActionSystemCallWarEvent */
        WarActionSystemCallWarEvent?: (WarAction.IWarActionSystemCallWarEvent|null);

        /** WarActionContainer WarActionSystemDestroyPlayerForce */
        WarActionSystemDestroyPlayerForce?: (WarAction.IWarActionSystemDestroyPlayerForce|null);

        /** WarActionContainer WarActionSystemEndWar */
        WarActionSystemEndWar?: (WarAction.IWarActionSystemEndWar|null);

        /** WarActionContainer WarActionPlayerEndTurn */
        WarActionPlayerEndTurn?: (WarAction.IWarActionPlayerEndTurn|null);

        /** WarActionContainer WarActionPlayerSurrender */
        WarActionPlayerSurrender?: (WarAction.IWarActionPlayerSurrender|null);

        /** WarActionContainer WarActionPlayerProduceUnit */
        WarActionPlayerProduceUnit?: (WarAction.IWarActionPlayerProduceUnit|null);

        /** WarActionContainer WarActionPlayerDeleteUnit */
        WarActionPlayerDeleteUnit?: (WarAction.IWarActionPlayerDeleteUnit|null);

        /** WarActionContainer WarActionPlayerVoteForDraw */
        WarActionPlayerVoteForDraw?: (WarAction.IWarActionPlayerVoteForDraw|null);

        /** WarActionContainer WarActionUnitWait */
        WarActionUnitWait?: (WarAction.IWarActionUnitWait|null);

        /** WarActionContainer WarActionUnitBeLoaded */
        WarActionUnitBeLoaded?: (WarAction.IWarActionUnitBeLoaded|null);

        /** WarActionContainer WarActionUnitCaptureTile */
        WarActionUnitCaptureTile?: (WarAction.IWarActionUnitCaptureTile|null);

        /** WarActionContainer WarActionUnitAttackTile */
        WarActionUnitAttackTile?: (WarAction.IWarActionUnitAttackTile|null);

        /** WarActionContainer WarActionUnitAttackUnit */
        WarActionUnitAttackUnit?: (WarAction.IWarActionUnitAttackUnit|null);

        /** WarActionContainer WarActionUnitDropUnit */
        WarActionUnitDropUnit?: (WarAction.IWarActionUnitDropUnit|null);

        /** WarActionContainer WarActionUnitBuildTile */
        WarActionUnitBuildTile?: (WarAction.IWarActionUnitBuildTile|null);

        /** WarActionContainer WarActionUnitDive */
        WarActionUnitDive?: (WarAction.IWarActionUnitDive|null);

        /** WarActionContainer WarActionUnitSurface */
        WarActionUnitSurface?: (WarAction.IWarActionUnitSurface|null);

        /** WarActionContainer WarActionUnitJoinUnit */
        WarActionUnitJoinUnit?: (WarAction.IWarActionUnitJoinUnit|null);

        /** WarActionContainer WarActionUnitLaunchFlare */
        WarActionUnitLaunchFlare?: (WarAction.IWarActionUnitLaunchFlare|null);

        /** WarActionContainer WarActionUnitLaunchSilo */
        WarActionUnitLaunchSilo?: (WarAction.IWarActionUnitLaunchSilo|null);

        /** WarActionContainer WarActionUnitProduceUnit */
        WarActionUnitProduceUnit?: (WarAction.IWarActionUnitProduceUnit|null);

        /** WarActionContainer WarActionUnitSupplyUnit */
        WarActionUnitSupplyUnit?: (WarAction.IWarActionUnitSupplyUnit|null);

        /** WarActionContainer WarActionUnitLoadCo */
        WarActionUnitLoadCo?: (WarAction.IWarActionUnitLoadCo|null);

        /** WarActionContainer WarActionUnitUseCoSkill */
        WarActionUnitUseCoSkill?: (WarAction.IWarActionUnitUseCoSkill|null);
    }

    /** Represents a WarActionContainer. */
    class WarActionContainer implements IWarActionContainer {

        /**
         * Constructs a new WarActionContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: WarAction.IWarActionContainer);

        /** WarActionContainer actionId. */
        public actionId: number;

        /** WarActionContainer WarActionSystemBeginTurn. */
        public WarActionSystemBeginTurn?: (WarAction.IWarActionSystemBeginTurn|null);

        /** WarActionContainer WarActionSystemCallWarEvent. */
        public WarActionSystemCallWarEvent?: (WarAction.IWarActionSystemCallWarEvent|null);

        /** WarActionContainer WarActionSystemDestroyPlayerForce. */
        public WarActionSystemDestroyPlayerForce?: (WarAction.IWarActionSystemDestroyPlayerForce|null);

        /** WarActionContainer WarActionSystemEndWar. */
        public WarActionSystemEndWar?: (WarAction.IWarActionSystemEndWar|null);

        /** WarActionContainer WarActionPlayerEndTurn. */
        public WarActionPlayerEndTurn?: (WarAction.IWarActionPlayerEndTurn|null);

        /** WarActionContainer WarActionPlayerSurrender. */
        public WarActionPlayerSurrender?: (WarAction.IWarActionPlayerSurrender|null);

        /** WarActionContainer WarActionPlayerProduceUnit. */
        public WarActionPlayerProduceUnit?: (WarAction.IWarActionPlayerProduceUnit|null);

        /** WarActionContainer WarActionPlayerDeleteUnit. */
        public WarActionPlayerDeleteUnit?: (WarAction.IWarActionPlayerDeleteUnit|null);

        /** WarActionContainer WarActionPlayerVoteForDraw. */
        public WarActionPlayerVoteForDraw?: (WarAction.IWarActionPlayerVoteForDraw|null);

        /** WarActionContainer WarActionUnitWait. */
        public WarActionUnitWait?: (WarAction.IWarActionUnitWait|null);

        /** WarActionContainer WarActionUnitBeLoaded. */
        public WarActionUnitBeLoaded?: (WarAction.IWarActionUnitBeLoaded|null);

        /** WarActionContainer WarActionUnitCaptureTile. */
        public WarActionUnitCaptureTile?: (WarAction.IWarActionUnitCaptureTile|null);

        /** WarActionContainer WarActionUnitAttackTile. */
        public WarActionUnitAttackTile?: (WarAction.IWarActionUnitAttackTile|null);

        /** WarActionContainer WarActionUnitAttackUnit. */
        public WarActionUnitAttackUnit?: (WarAction.IWarActionUnitAttackUnit|null);

        /** WarActionContainer WarActionUnitDropUnit. */
        public WarActionUnitDropUnit?: (WarAction.IWarActionUnitDropUnit|null);

        /** WarActionContainer WarActionUnitBuildTile. */
        public WarActionUnitBuildTile?: (WarAction.IWarActionUnitBuildTile|null);

        /** WarActionContainer WarActionUnitDive. */
        public WarActionUnitDive?: (WarAction.IWarActionUnitDive|null);

        /** WarActionContainer WarActionUnitSurface. */
        public WarActionUnitSurface?: (WarAction.IWarActionUnitSurface|null);

        /** WarActionContainer WarActionUnitJoinUnit. */
        public WarActionUnitJoinUnit?: (WarAction.IWarActionUnitJoinUnit|null);

        /** WarActionContainer WarActionUnitLaunchFlare. */
        public WarActionUnitLaunchFlare?: (WarAction.IWarActionUnitLaunchFlare|null);

        /** WarActionContainer WarActionUnitLaunchSilo. */
        public WarActionUnitLaunchSilo?: (WarAction.IWarActionUnitLaunchSilo|null);

        /** WarActionContainer WarActionUnitProduceUnit. */
        public WarActionUnitProduceUnit?: (WarAction.IWarActionUnitProduceUnit|null);

        /** WarActionContainer WarActionUnitSupplyUnit. */
        public WarActionUnitSupplyUnit?: (WarAction.IWarActionUnitSupplyUnit|null);

        /** WarActionContainer WarActionUnitLoadCo. */
        public WarActionUnitLoadCo?: (WarAction.IWarActionUnitLoadCo|null);

        /** WarActionContainer WarActionUnitUseCoSkill. */
        public WarActionUnitUseCoSkill?: (WarAction.IWarActionUnitUseCoSkill|null);

        /**
         * Creates a new WarActionContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarActionContainer instance
         */
        public static create(properties?: WarAction.IWarActionContainer): WarAction.WarActionContainer;

        /**
         * Encodes the specified WarActionContainer message. Does not implicitly {@link WarAction.WarActionContainer.verify|verify} messages.
         * @param message WarActionContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: WarAction.IWarActionContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarActionContainer message, length delimited. Does not implicitly {@link WarAction.WarActionContainer.verify|verify} messages.
         * @param message WarActionContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: WarAction.IWarActionContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarActionContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarActionContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): WarAction.WarActionContainer;

        /**
         * Decodes a WarActionContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarActionContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): WarAction.WarActionContainer;

        /**
         * Verifies a WarActionContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarActionContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarActionContainer
         */
        public static fromObject(object: { [k: string]: any }): WarAction.WarActionContainer;

        /**
         * Creates a plain object from a WarActionContainer message. Also converts values to other types if specified.
         * @param message WarActionContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: WarAction.WarActionContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarActionContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Broadcast. */
export declare interface IBroadcast {
}

/** Represents a Broadcast. */
export declare class Broadcast implements IBroadcast {

    /**
     * Constructs a new Broadcast.
     * @param [properties] Properties to set
     */
    constructor(properties?: IBroadcast);

    /**
     * Creates a new Broadcast instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Broadcast instance
     */
    public static create(properties?: IBroadcast): Broadcast;

    /**
     * Encodes the specified Broadcast message. Does not implicitly {@link Broadcast.verify|verify} messages.
     * @param message Broadcast message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IBroadcast, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Broadcast message, length delimited. Does not implicitly {@link Broadcast.verify|verify} messages.
     * @param message Broadcast message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IBroadcast, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Broadcast message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Broadcast
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Broadcast;

    /**
     * Decodes a Broadcast message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Broadcast
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Broadcast;

    /**
     * Verifies a Broadcast message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Broadcast message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Broadcast
     */
    public static fromObject(object: { [k: string]: any }): Broadcast;

    /**
     * Creates a plain object from a Broadcast message. Also converts values to other types if specified.
     * @param message Broadcast
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Broadcast, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Broadcast to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Broadcast {

    /** Properties of a BroadcastMessage. */
    interface IBroadcastMessage {

        /** BroadcastMessage messageId */
        messageId?: (number|null);

        /** BroadcastMessage textList */
        textList?: (Structure.ILanguageText[]|null);

        /** BroadcastMessage startTime */
        startTime?: (number|null);

        /** BroadcastMessage endTime */
        endTime?: (number|null);
    }

    /** Represents a BroadcastMessage. */
    class BroadcastMessage implements IBroadcastMessage {

        /**
         * Constructs a new BroadcastMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: Broadcast.IBroadcastMessage);

        /** BroadcastMessage messageId. */
        public messageId: number;

        /** BroadcastMessage textList. */
        public textList: Structure.ILanguageText[];

        /** BroadcastMessage startTime. */
        public startTime: number;

        /** BroadcastMessage endTime. */
        public endTime: number;

        /**
         * Creates a new BroadcastMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BroadcastMessage instance
         */
        public static create(properties?: Broadcast.IBroadcastMessage): Broadcast.BroadcastMessage;

        /**
         * Encodes the specified BroadcastMessage message. Does not implicitly {@link Broadcast.BroadcastMessage.verify|verify} messages.
         * @param message BroadcastMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Broadcast.IBroadcastMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BroadcastMessage message, length delimited. Does not implicitly {@link Broadcast.BroadcastMessage.verify|verify} messages.
         * @param message BroadcastMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Broadcast.IBroadcastMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BroadcastMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BroadcastMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Broadcast.BroadcastMessage;

        /**
         * Decodes a BroadcastMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BroadcastMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Broadcast.BroadcastMessage;

        /**
         * Verifies a BroadcastMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BroadcastMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BroadcastMessage
         */
        public static fromObject(object: { [k: string]: any }): Broadcast.BroadcastMessage;

        /**
         * Creates a plain object from a BroadcastMessage message. Also converts values to other types if specified.
         * @param message BroadcastMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Broadcast.BroadcastMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BroadcastMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BroadcastInfo. */
    interface IBroadcastInfo {

        /** BroadcastInfo messageList */
        messageList?: (Broadcast.IBroadcastMessage[]|null);
    }

    /** Represents a BroadcastInfo. */
    class BroadcastInfo implements IBroadcastInfo {

        /**
         * Constructs a new BroadcastInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Broadcast.IBroadcastInfo);

        /** BroadcastInfo messageList. */
        public messageList: Broadcast.IBroadcastMessage[];

        /**
         * Creates a new BroadcastInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BroadcastInfo instance
         */
        public static create(properties?: Broadcast.IBroadcastInfo): Broadcast.BroadcastInfo;

        /**
         * Encodes the specified BroadcastInfo message. Does not implicitly {@link Broadcast.BroadcastInfo.verify|verify} messages.
         * @param message BroadcastInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Broadcast.IBroadcastInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified BroadcastInfo message, length delimited. Does not implicitly {@link Broadcast.BroadcastInfo.verify|verify} messages.
         * @param message BroadcastInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Broadcast.IBroadcastInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a BroadcastInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BroadcastInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Broadcast.BroadcastInfo;

        /**
         * Decodes a BroadcastInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BroadcastInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Broadcast.BroadcastInfo;

        /**
         * Verifies a BroadcastInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BroadcastInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BroadcastInfo
         */
        public static fromObject(object: { [k: string]: any }): Broadcast.BroadcastInfo;

        /**
         * Creates a plain object from a BroadcastInfo message. Also converts values to other types if specified.
         * @param message BroadcastInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Broadcast.BroadcastInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BroadcastInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a ChangeLog. */
export declare interface IChangeLog {
}

/** Represents a ChangeLog. */
export declare class ChangeLog implements IChangeLog {

    /**
     * Constructs a new ChangeLog.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChangeLog);

    /**
     * Creates a new ChangeLog instance using the specified properties.
     * @param [properties] Properties to set
     * @returns ChangeLog instance
     */
    public static create(properties?: IChangeLog): ChangeLog;

    /**
     * Encodes the specified ChangeLog message. Does not implicitly {@link ChangeLog.verify|verify} messages.
     * @param message ChangeLog message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChangeLog, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified ChangeLog message, length delimited. Does not implicitly {@link ChangeLog.verify|verify} messages.
     * @param message ChangeLog message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChangeLog, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a ChangeLog message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns ChangeLog
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): ChangeLog;

    /**
     * Decodes a ChangeLog message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns ChangeLog
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): ChangeLog;

    /**
     * Verifies a ChangeLog message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a ChangeLog message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns ChangeLog
     */
    public static fromObject(object: { [k: string]: any }): ChangeLog;

    /**
     * Creates a plain object from a ChangeLog message. Also converts values to other types if specified.
     * @param message ChangeLog
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: ChangeLog, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this ChangeLog to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace ChangeLog {

    /** Properties of a ChangeLogMessage. */
    interface IChangeLogMessage {

        /** ChangeLogMessage messageId */
        messageId?: (number|null);

        /** ChangeLogMessage textList */
        textList?: (Structure.ILanguageText[]|null);

        /** ChangeLogMessage createTimestamp */
        createTimestamp?: (number|null);
    }

    /** Represents a ChangeLogMessage. */
    class ChangeLogMessage implements IChangeLogMessage {

        /**
         * Constructs a new ChangeLogMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: ChangeLog.IChangeLogMessage);

        /** ChangeLogMessage messageId. */
        public messageId: number;

        /** ChangeLogMessage textList. */
        public textList: Structure.ILanguageText[];

        /** ChangeLogMessage createTimestamp. */
        public createTimestamp: number;

        /**
         * Creates a new ChangeLogMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeLogMessage instance
         */
        public static create(properties?: ChangeLog.IChangeLogMessage): ChangeLog.ChangeLogMessage;

        /**
         * Encodes the specified ChangeLogMessage message. Does not implicitly {@link ChangeLog.ChangeLogMessage.verify|verify} messages.
         * @param message ChangeLogMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ChangeLog.IChangeLogMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeLogMessage message, length delimited. Does not implicitly {@link ChangeLog.ChangeLogMessage.verify|verify} messages.
         * @param message ChangeLogMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ChangeLog.IChangeLogMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeLogMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeLogMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): ChangeLog.ChangeLogMessage;

        /**
         * Decodes a ChangeLogMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeLogMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): ChangeLog.ChangeLogMessage;

        /**
         * Verifies a ChangeLogMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeLogMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeLogMessage
         */
        public static fromObject(object: { [k: string]: any }): ChangeLog.ChangeLogMessage;

        /**
         * Creates a plain object from a ChangeLogMessage message. Also converts values to other types if specified.
         * @param message ChangeLogMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ChangeLog.ChangeLogMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeLogMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChangeLogInfo. */
    interface IChangeLogInfo {

        /** ChangeLogInfo messageList */
        messageList?: (ChangeLog.IChangeLogMessage[]|null);
    }

    /** Represents a ChangeLogInfo. */
    class ChangeLogInfo implements IChangeLogInfo {

        /**
         * Constructs a new ChangeLogInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: ChangeLog.IChangeLogInfo);

        /** ChangeLogInfo messageList. */
        public messageList: ChangeLog.IChangeLogMessage[];

        /**
         * Creates a new ChangeLogInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChangeLogInfo instance
         */
        public static create(properties?: ChangeLog.IChangeLogInfo): ChangeLog.ChangeLogInfo;

        /**
         * Encodes the specified ChangeLogInfo message. Does not implicitly {@link ChangeLog.ChangeLogInfo.verify|verify} messages.
         * @param message ChangeLogInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: ChangeLog.IChangeLogInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChangeLogInfo message, length delimited. Does not implicitly {@link ChangeLog.ChangeLogInfo.verify|verify} messages.
         * @param message ChangeLogInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: ChangeLog.IChangeLogInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChangeLogInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChangeLogInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): ChangeLog.ChangeLogInfo;

        /**
         * Decodes a ChangeLogInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChangeLogInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): ChangeLog.ChangeLogInfo;

        /**
         * Verifies a ChangeLogInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChangeLogInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChangeLogInfo
         */
        public static fromObject(object: { [k: string]: any }): ChangeLog.ChangeLogInfo;

        /**
         * Creates a plain object from a ChangeLogInfo message. Also converts values to other types if specified.
         * @param message ChangeLogInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: ChangeLog.ChangeLogInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChangeLogInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Structure. */
export declare interface IStructure {
}

/** Represents a Structure. */
export declare class Structure implements IStructure {

    /**
     * Constructs a new Structure.
     * @param [properties] Properties to set
     */
    constructor(properties?: IStructure);

    /**
     * Creates a new Structure instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Structure instance
     */
    public static create(properties?: IStructure): Structure;

    /**
     * Encodes the specified Structure message. Does not implicitly {@link Structure.verify|verify} messages.
     * @param message Structure message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IStructure, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Structure message, length delimited. Does not implicitly {@link Structure.verify|verify} messages.
     * @param message Structure message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IStructure, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Structure message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Structure
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure;

    /**
     * Decodes a Structure message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Structure
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure;

    /**
     * Verifies a Structure message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Structure message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Structure
     */
    public static fromObject(object: { [k: string]: any }): Structure;

    /**
     * Creates a plain object from a Structure message. Also converts values to other types if specified.
     * @param message Structure
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Structure, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Structure to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Structure {

    /** Properties of a GridIndex. */
    interface IGridIndex {

        /** GridIndex x */
        x?: (number|null);

        /** GridIndex y */
        y?: (number|null);
    }

    /** Represents a GridIndex. */
    class GridIndex implements IGridIndex {

        /**
         * Constructs a new GridIndex.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IGridIndex);

        /** GridIndex x. */
        public x: number;

        /** GridIndex y. */
        public y: number;

        /**
         * Creates a new GridIndex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GridIndex instance
         */
        public static create(properties?: Structure.IGridIndex): Structure.GridIndex;

        /**
         * Encodes the specified GridIndex message. Does not implicitly {@link Structure.GridIndex.verify|verify} messages.
         * @param message GridIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified GridIndex message, length delimited. Does not implicitly {@link Structure.GridIndex.verify|verify} messages.
         * @param message GridIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IGridIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a GridIndex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GridIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.GridIndex;

        /**
         * Decodes a GridIndex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GridIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.GridIndex;

        /**
         * Verifies a GridIndex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GridIndex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GridIndex
         */
        public static fromObject(object: { [k: string]: any }): Structure.GridIndex;

        /**
         * Creates a plain object from a GridIndex message. Also converts values to other types if specified.
         * @param message GridIndex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.GridIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GridIndex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MovePath. */
    interface IMovePath {

        /** MovePath nodes */
        nodes?: (Structure.IGridIndex[]|null);

        /** MovePath isBlocked */
        isBlocked?: (boolean|null);

        /** MovePath fuelConsumption */
        fuelConsumption?: (number|null);
    }

    /** Represents a MovePath. */
    class MovePath implements IMovePath {

        /**
         * Constructs a new MovePath.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IMovePath);

        /** MovePath nodes. */
        public nodes: Structure.IGridIndex[];

        /** MovePath isBlocked. */
        public isBlocked: boolean;

        /** MovePath fuelConsumption. */
        public fuelConsumption: number;

        /**
         * Creates a new MovePath instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MovePath instance
         */
        public static create(properties?: Structure.IMovePath): Structure.MovePath;

        /**
         * Encodes the specified MovePath message. Does not implicitly {@link Structure.MovePath.verify|verify} messages.
         * @param message MovePath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MovePath message, length delimited. Does not implicitly {@link Structure.MovePath.verify|verify} messages.
         * @param message MovePath message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IMovePath, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MovePath message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MovePath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.MovePath;

        /**
         * Decodes a MovePath message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MovePath
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.MovePath;

        /**
         * Verifies a MovePath message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MovePath message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MovePath
         */
        public static fromObject(object: { [k: string]: any }): Structure.MovePath;

        /**
         * Creates a plain object from a MovePath message. Also converts values to other types if specified.
         * @param message MovePath
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.MovePath, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MovePath to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DropDestination. */
    interface IDropDestination {

        /** DropDestination unitId */
        unitId?: (number|null);

        /** DropDestination gridIndex */
        gridIndex?: (Structure.IGridIndex|null);
    }

    /** Represents a DropDestination. */
    class DropDestination implements IDropDestination {

        /**
         * Constructs a new DropDestination.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDropDestination);

        /** DropDestination unitId. */
        public unitId: number;

        /** DropDestination gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /**
         * Creates a new DropDestination instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DropDestination instance
         */
        public static create(properties?: Structure.IDropDestination): Structure.DropDestination;

        /**
         * Encodes the specified DropDestination message. Does not implicitly {@link Structure.DropDestination.verify|verify} messages.
         * @param message DropDestination message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DropDestination message, length delimited. Does not implicitly {@link Structure.DropDestination.verify|verify} messages.
         * @param message DropDestination message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDropDestination, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DropDestination message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DropDestination
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DropDestination;

        /**
         * Decodes a DropDestination message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DropDestination
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DropDestination;

        /**
         * Verifies a DropDestination message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DropDestination message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DropDestination
         */
        public static fromObject(object: { [k: string]: any }): Structure.DropDestination;

        /**
         * Creates a plain object from a DropDestination message. Also converts values to other types if specified.
         * @param message DropDestination
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DropDestination, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DropDestination to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SeedRandomState. */
    interface ISeedRandomState {

        /** SeedRandomState i */
        i?: (number|null);

        /** SeedRandomState j */
        j?: (number|null);

        /** SeedRandomState S */
        S?: (number[]|null);
    }

    /** Represents a SeedRandomState. */
    class SeedRandomState implements ISeedRandomState {

        /**
         * Constructs a new SeedRandomState.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.ISeedRandomState);

        /** SeedRandomState i. */
        public i: number;

        /** SeedRandomState j. */
        public j: number;

        /** SeedRandomState S. */
        public S: number[];

        /**
         * Creates a new SeedRandomState instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeedRandomState instance
         */
        public static create(properties?: Structure.ISeedRandomState): Structure.SeedRandomState;

        /**
         * Encodes the specified SeedRandomState message. Does not implicitly {@link Structure.SeedRandomState.verify|verify} messages.
         * @param message SeedRandomState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified SeedRandomState message, length delimited. Does not implicitly {@link Structure.SeedRandomState.verify|verify} messages.
         * @param message SeedRandomState message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.ISeedRandomState, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a SeedRandomState message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeedRandomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.SeedRandomState;

        /**
         * Decodes a SeedRandomState message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeedRandomState
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.SeedRandomState;

        /**
         * Verifies a SeedRandomState message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeedRandomState message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeedRandomState
         */
        public static fromObject(object: { [k: string]: any }): Structure.SeedRandomState;

        /**
         * Creates a plain object from a SeedRandomState message. Also converts values to other types if specified.
         * @param message SeedRandomState
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.SeedRandomState, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeedRandomState to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a LanguageText. */
    interface ILanguageText {

        /** LanguageText languageType */
        languageType?: (number|null);

        /** LanguageText text */
        text?: (string|null);
    }

    /** Represents a LanguageText. */
    class LanguageText implements ILanguageText {

        /**
         * Constructs a new LanguageText.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.ILanguageText);

        /** LanguageText languageType. */
        public languageType: number;

        /** LanguageText text. */
        public text: string;

        /**
         * Creates a new LanguageText instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LanguageText instance
         */
        public static create(properties?: Structure.ILanguageText): Structure.LanguageText;

        /**
         * Encodes the specified LanguageText message. Does not implicitly {@link Structure.LanguageText.verify|verify} messages.
         * @param message LanguageText message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.ILanguageText, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified LanguageText message, length delimited. Does not implicitly {@link Structure.LanguageText.verify|verify} messages.
         * @param message LanguageText message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.ILanguageText, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a LanguageText message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LanguageText
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.LanguageText;

        /**
         * Decodes a LanguageText message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LanguageText
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.LanguageText;

        /**
         * Verifies a LanguageText message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LanguageText message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LanguageText
         */
        public static fromObject(object: { [k: string]: any }): Structure.LanguageText;

        /**
         * Creates a plain object from a LanguageText message. Also converts values to other types if specified.
         * @param message LanguageText
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.LanguageText, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LanguageText to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarPlayerInfo. */
    interface IWarPlayerInfo {

        /** WarPlayerInfo playerIndex */
        playerIndex?: (number|null);

        /** WarPlayerInfo userId */
        userId?: (number|null);

        /** WarPlayerInfo coId */
        coId?: (number|null);

        /** WarPlayerInfo teamIndex */
        teamIndex?: (number|null);

        /** WarPlayerInfo isAlive */
        isAlive?: (boolean|null);

        /** WarPlayerInfo restTimeToBoot */
        restTimeToBoot?: (number|null);

        /** WarPlayerInfo unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a WarPlayerInfo. */
    class WarPlayerInfo implements IWarPlayerInfo {

        /**
         * Constructs a new WarPlayerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IWarPlayerInfo);

        /** WarPlayerInfo playerIndex. */
        public playerIndex: number;

        /** WarPlayerInfo userId. */
        public userId: number;

        /** WarPlayerInfo coId. */
        public coId: number;

        /** WarPlayerInfo teamIndex. */
        public teamIndex: number;

        /** WarPlayerInfo isAlive. */
        public isAlive: boolean;

        /** WarPlayerInfo restTimeToBoot. */
        public restTimeToBoot: number;

        /** WarPlayerInfo unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new WarPlayerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarPlayerInfo instance
         */
        public static create(properties?: Structure.IWarPlayerInfo): Structure.WarPlayerInfo;

        /**
         * Encodes the specified WarPlayerInfo message. Does not implicitly {@link Structure.WarPlayerInfo.verify|verify} messages.
         * @param message WarPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified WarPlayerInfo message, length delimited. Does not implicitly {@link Structure.WarPlayerInfo.verify|verify} messages.
         * @param message WarPlayerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IWarPlayerInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a WarPlayerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.WarPlayerInfo;

        /**
         * Decodes a WarPlayerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarPlayerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.WarPlayerInfo;

        /**
         * Verifies a WarPlayerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarPlayerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarPlayerInfo
         */
        public static fromObject(object: { [k: string]: any }): Structure.WarPlayerInfo;

        /**
         * Creates a plain object from a WarPlayerInfo message. Also converts values to other types if specified.
         * @param message WarPlayerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.WarPlayerInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarPlayerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForModifyUnit. */
    interface IDataForModifyUnit {

        /** DataForModifyUnit unitId */
        unitId?: (number|null);

        /** DataForModifyUnit gridIndex */
        gridIndex?: (Structure.IGridIndex|null);

        /** DataForModifyUnit deltaHp */
        deltaHp?: (number|null);

        /** DataForModifyUnit deltaPrimaryWeaponAmmo */
        deltaPrimaryWeaponAmmo?: (number|null);

        /** DataForModifyUnit deltaFuel */
        deltaFuel?: (number|null);

        /** DataForModifyUnit deltaFlareAmmo */
        deltaFlareAmmo?: (number|null);
    }

    /** Represents a DataForModifyUnit. */
    class DataForModifyUnit implements IDataForModifyUnit {

        /**
         * Constructs a new DataForModifyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForModifyUnit);

        /** DataForModifyUnit unitId. */
        public unitId: number;

        /** DataForModifyUnit gridIndex. */
        public gridIndex?: (Structure.IGridIndex|null);

        /** DataForModifyUnit deltaHp. */
        public deltaHp: number;

        /** DataForModifyUnit deltaPrimaryWeaponAmmo. */
        public deltaPrimaryWeaponAmmo: number;

        /** DataForModifyUnit deltaFuel. */
        public deltaFuel: number;

        /** DataForModifyUnit deltaFlareAmmo. */
        public deltaFlareAmmo: number;

        /**
         * Creates a new DataForModifyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForModifyUnit instance
         */
        public static create(properties?: Structure.IDataForModifyUnit): Structure.DataForModifyUnit;

        /**
         * Encodes the specified DataForModifyUnit message. Does not implicitly {@link Structure.DataForModifyUnit.verify|verify} messages.
         * @param message DataForModifyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForModifyUnit message, length delimited. Does not implicitly {@link Structure.DataForModifyUnit.verify|verify} messages.
         * @param message DataForModifyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForModifyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForModifyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForModifyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForModifyUnit;

        /**
         * Decodes a DataForModifyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForModifyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForModifyUnit;

        /**
         * Verifies a DataForModifyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForModifyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForModifyUnit
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForModifyUnit;

        /**
         * Creates a plain object from a DataForModifyUnit message. Also converts values to other types if specified.
         * @param message DataForModifyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForModifyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForModifyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForUseCoSkill. */
    interface IDataForUseCoSkill {

        /** DataForUseCoSkill skillIndex */
        skillIndex?: (number|null);

        /** DataForUseCoSkill indiscriminateAreaDamageCenter */
        indiscriminateAreaDamageCenter?: (Structure.IGridIndex|null);
    }

    /** Represents a DataForUseCoSkill. */
    class DataForUseCoSkill implements IDataForUseCoSkill {

        /**
         * Constructs a new DataForUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForUseCoSkill);

        /** DataForUseCoSkill skillIndex. */
        public skillIndex: number;

        /** DataForUseCoSkill indiscriminateAreaDamageCenter. */
        public indiscriminateAreaDamageCenter?: (Structure.IGridIndex|null);

        /**
         * Creates a new DataForUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForUseCoSkill instance
         */
        public static create(properties?: Structure.IDataForUseCoSkill): Structure.DataForUseCoSkill;

        /**
         * Encodes the specified DataForUseCoSkill message. Does not implicitly {@link Structure.DataForUseCoSkill.verify|verify} messages.
         * @param message DataForUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForUseCoSkill message, length delimited. Does not implicitly {@link Structure.DataForUseCoSkill.verify|verify} messages.
         * @param message DataForUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForUseCoSkill;

        /**
         * Decodes a DataForUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForUseCoSkill;

        /**
         * Verifies a DataForUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForUseCoSkill;

        /**
         * Creates a plain object from a DataForUseCoSkill message. Also converts values to other types if specified.
         * @param message DataForUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForReviewWarRule. */
    interface IDataForReviewWarRule {

        /** DataForReviewWarRule mapId */
        mapId?: (number|null);

        /** DataForReviewWarRule submitterUserId */
        submitterUserId?: (number|null);

        /** DataForReviewWarRule submitTimestamp */
        submitTimestamp?: (number|null);

        /** DataForReviewWarRule reviewStatus */
        reviewStatus?: (number|null);

        /** DataForReviewWarRule reviewComment */
        reviewComment?: (string|null);

        /** DataForReviewWarRule warRuleArray */
        warRuleArray?: (WarRule.IWarRuleArray|null);
    }

    /** Represents a DataForReviewWarRule. */
    class DataForReviewWarRule implements IDataForReviewWarRule {

        /**
         * Constructs a new DataForReviewWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForReviewWarRule);

        /** DataForReviewWarRule mapId. */
        public mapId: number;

        /** DataForReviewWarRule submitterUserId. */
        public submitterUserId: number;

        /** DataForReviewWarRule submitTimestamp. */
        public submitTimestamp: number;

        /** DataForReviewWarRule reviewStatus. */
        public reviewStatus: number;

        /** DataForReviewWarRule reviewComment. */
        public reviewComment: string;

        /** DataForReviewWarRule warRuleArray. */
        public warRuleArray?: (WarRule.IWarRuleArray|null);

        /**
         * Creates a new DataForReviewWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForReviewWarRule instance
         */
        public static create(properties?: Structure.IDataForReviewWarRule): Structure.DataForReviewWarRule;

        /**
         * Encodes the specified DataForReviewWarRule message. Does not implicitly {@link Structure.DataForReviewWarRule.verify|verify} messages.
         * @param message DataForReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForReviewWarRule message, length delimited. Does not implicitly {@link Structure.DataForReviewWarRule.verify|verify} messages.
         * @param message DataForReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForReviewWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForReviewWarRule;

        /**
         * Decodes a DataForReviewWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForReviewWarRule;

        /**
         * Verifies a DataForReviewWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForReviewWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForReviewWarRule
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForReviewWarRule;

        /**
         * Creates a plain object from a DataForReviewWarRule message. Also converts values to other types if specified.
         * @param message DataForReviewWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForReviewWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForReviewWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerInRoom. */
    interface IDataForPlayerInRoom {

        /** DataForPlayerInRoom playerIndex */
        playerIndex?: (number|null);

        /** DataForPlayerInRoom userId */
        userId?: (number|null);

        /** DataForPlayerInRoom coId */
        coId?: (number|null);

        /** DataForPlayerInRoom isReady */
        isReady?: (boolean|null);

        /** DataForPlayerInRoom unitAndTileSkinId */
        unitAndTileSkinId?: (number|null);
    }

    /** Represents a DataForPlayerInRoom. */
    class DataForPlayerInRoom implements IDataForPlayerInRoom {

        /**
         * Constructs a new DataForPlayerInRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerInRoom);

        /** DataForPlayerInRoom playerIndex. */
        public playerIndex: number;

        /** DataForPlayerInRoom userId. */
        public userId: number;

        /** DataForPlayerInRoom coId. */
        public coId: number;

        /** DataForPlayerInRoom isReady. */
        public isReady: boolean;

        /** DataForPlayerInRoom unitAndTileSkinId. */
        public unitAndTileSkinId: number;

        /**
         * Creates a new DataForPlayerInRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerInRoom instance
         */
        public static create(properties?: Structure.IDataForPlayerInRoom): Structure.DataForPlayerInRoom;

        /**
         * Encodes the specified DataForPlayerInRoom message. Does not implicitly {@link Structure.DataForPlayerInRoom.verify|verify} messages.
         * @param message DataForPlayerInRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerInRoom message, length delimited. Does not implicitly {@link Structure.DataForPlayerInRoom.verify|verify} messages.
         * @param message DataForPlayerInRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerInRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerInRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerInRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerInRoom;

        /**
         * Decodes a DataForPlayerInRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerInRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerInRoom;

        /**
         * Verifies a DataForPlayerInRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerInRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerInRoom
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerInRoom;

        /**
         * Creates a plain object from a DataForPlayerInRoom message. Also converts values to other types if specified.
         * @param message DataForPlayerInRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerInRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerInRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerBanCo. */
    interface IDataForPlayerBanCo {

        /** DataForPlayerBanCo srcPlayerIndex */
        srcPlayerIndex?: (number|null);

        /** DataForPlayerBanCo bannedCoIdList */
        bannedCoIdList?: (number[]|null);
    }

    /** Represents a DataForPlayerBanCo. */
    class DataForPlayerBanCo implements IDataForPlayerBanCo {

        /**
         * Constructs a new DataForPlayerBanCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerBanCo);

        /** DataForPlayerBanCo srcPlayerIndex. */
        public srcPlayerIndex: number;

        /** DataForPlayerBanCo bannedCoIdList. */
        public bannedCoIdList: number[];

        /**
         * Creates a new DataForPlayerBanCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerBanCo instance
         */
        public static create(properties?: Structure.IDataForPlayerBanCo): Structure.DataForPlayerBanCo;

        /**
         * Encodes the specified DataForPlayerBanCo message. Does not implicitly {@link Structure.DataForPlayerBanCo.verify|verify} messages.
         * @param message DataForPlayerBanCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerBanCo message, length delimited. Does not implicitly {@link Structure.DataForPlayerBanCo.verify|verify} messages.
         * @param message DataForPlayerBanCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerBanCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerBanCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerBanCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerBanCo;

        /**
         * Decodes a DataForPlayerBanCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerBanCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerBanCo;

        /**
         * Verifies a DataForPlayerBanCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerBanCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerBanCo
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerBanCo;

        /**
         * Creates a plain object from a DataForPlayerBanCo message. Also converts values to other types if specified.
         * @param message DataForPlayerBanCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerBanCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerBanCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForPlayerRank. */
    interface IDataForPlayerRank {

        /** DataForPlayerRank warType */
        warType?: (number|null);

        /** DataForPlayerRank playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** DataForPlayerRank userId */
        userId?: (number|null);
    }

    /** Represents a DataForPlayerRank. */
    class DataForPlayerRank implements IDataForPlayerRank {

        /**
         * Constructs a new DataForPlayerRank.
         * @param [properties] Properties to set
         */
        constructor(properties?: Structure.IDataForPlayerRank);

        /** DataForPlayerRank warType. */
        public warType: number;

        /** DataForPlayerRank playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** DataForPlayerRank userId. */
        public userId: number;

        /**
         * Creates a new DataForPlayerRank instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForPlayerRank instance
         */
        public static create(properties?: Structure.IDataForPlayerRank): Structure.DataForPlayerRank;

        /**
         * Encodes the specified DataForPlayerRank message. Does not implicitly {@link Structure.DataForPlayerRank.verify|verify} messages.
         * @param message DataForPlayerRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Structure.IDataForPlayerRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForPlayerRank message, length delimited. Does not implicitly {@link Structure.DataForPlayerRank.verify|verify} messages.
         * @param message DataForPlayerRank message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Structure.IDataForPlayerRank, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForPlayerRank message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForPlayerRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Structure.DataForPlayerRank;

        /**
         * Decodes a DataForPlayerRank message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForPlayerRank
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Structure.DataForPlayerRank;

        /**
         * Verifies a DataForPlayerRank message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForPlayerRank message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForPlayerRank
         */
        public static fromObject(object: { [k: string]: any }): Structure.DataForPlayerRank;

        /**
         * Creates a plain object from a DataForPlayerRank message. Also converts values to other types if specified.
         * @param message DataForPlayerRank
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Structure.DataForPlayerRank, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForPlayerRank to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiCustomRoom. */
export declare interface IMultiCustomRoom {
}

/** Represents a MultiCustomRoom. */
export declare class MultiCustomRoom implements IMultiCustomRoom {

    /**
     * Constructs a new MultiCustomRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiCustomRoom);

    /**
     * Creates a new MultiCustomRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiCustomRoom instance
     */
    public static create(properties?: IMultiCustomRoom): MultiCustomRoom;

    /**
     * Encodes the specified MultiCustomRoom message. Does not implicitly {@link MultiCustomRoom.verify|verify} messages.
     * @param message MultiCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiCustomRoom message, length delimited. Does not implicitly {@link MultiCustomRoom.verify|verify} messages.
     * @param message MultiCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiCustomRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom;

    /**
     * Decodes a MultiCustomRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom;

    /**
     * Verifies a MultiCustomRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiCustomRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiCustomRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiCustomRoom;

    /**
     * Creates a plain object from a MultiCustomRoom message. Also converts values to other types if specified.
     * @param message MultiCustomRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiCustomRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiCustomRoom {

    /** Properties of a McrRoomInfo. */
    interface IMcrRoomInfo {

        /** McrRoomInfo roomId */
        roomId?: (number|null);

        /** McrRoomInfo createTime */
        createTime?: (number|null);

        /** McrRoomInfo creatorUserId */
        creatorUserId?: (number|null);

        /** McrRoomInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** McrRoomInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomInfo settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a McrRoomInfo. */
    class McrRoomInfo implements IMcrRoomInfo {

        /**
         * Constructs a new McrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiCustomRoom.IMcrRoomInfo);

        /** McrRoomInfo roomId. */
        public roomId: number;

        /** McrRoomInfo createTime. */
        public createTime: number;

        /** McrRoomInfo creatorUserId. */
        public creatorUserId: number;

        /** McrRoomInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** McrRoomInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** McrRoomInfo settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** McrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new McrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns McrRoomInfo instance
         */
        public static create(properties?: MultiCustomRoom.IMcrRoomInfo): MultiCustomRoom.McrRoomInfo;

        /**
         * Encodes the specified McrRoomInfo message. Does not implicitly {@link MultiCustomRoom.McrRoomInfo.verify|verify} messages.
         * @param message McrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified McrRoomInfo message, length delimited. Does not implicitly {@link MultiCustomRoom.McrRoomInfo.verify|verify} messages.
         * @param message McrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiCustomRoom.IMcrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a McrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns McrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiCustomRoom.McrRoomInfo;

        /**
         * Decodes a McrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns McrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiCustomRoom.McrRoomInfo;

        /**
         * Verifies a McrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a McrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns McrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiCustomRoom.McrRoomInfo;

        /**
         * Creates a plain object from a McrRoomInfo message. Also converts values to other types if specified.
         * @param message McrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiCustomRoom.McrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this McrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiFreeRoom. */
export declare interface IMultiFreeRoom {
}

/** Represents a MultiFreeRoom. */
export declare class MultiFreeRoom implements IMultiFreeRoom {

    /**
     * Constructs a new MultiFreeRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiFreeRoom);

    /**
     * Creates a new MultiFreeRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiFreeRoom instance
     */
    public static create(properties?: IMultiFreeRoom): MultiFreeRoom;

    /**
     * Encodes the specified MultiFreeRoom message. Does not implicitly {@link MultiFreeRoom.verify|verify} messages.
     * @param message MultiFreeRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiFreeRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiFreeRoom message, length delimited. Does not implicitly {@link MultiFreeRoom.verify|verify} messages.
     * @param message MultiFreeRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiFreeRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiFreeRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiFreeRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom;

    /**
     * Decodes a MultiFreeRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiFreeRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom;

    /**
     * Verifies a MultiFreeRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiFreeRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiFreeRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiFreeRoom;

    /**
     * Creates a plain object from a MultiFreeRoom message. Also converts values to other types if specified.
     * @param message MultiFreeRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiFreeRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiFreeRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiFreeRoom {

    /** Properties of a MfrRoomInfo. */
    interface IMfrRoomInfo {

        /** MfrRoomInfo roomId */
        roomId?: (number|null);

        /** MfrRoomInfo createTime */
        createTime?: (number|null);

        /** MfrRoomInfo creatorUserId */
        creatorUserId?: (number|null);

        /** MfrRoomInfo ownerPlayerIndex */
        ownerPlayerIndex?: (number|null);

        /** MfrRoomInfo settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MfrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a MfrRoomInfo. */
    class MfrRoomInfo implements IMfrRoomInfo {

        /**
         * Constructs a new MfrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiFreeRoom.IMfrRoomInfo);

        /** MfrRoomInfo roomId. */
        public roomId: number;

        /** MfrRoomInfo createTime. */
        public createTime: number;

        /** MfrRoomInfo creatorUserId. */
        public creatorUserId: number;

        /** MfrRoomInfo ownerPlayerIndex. */
        public ownerPlayerIndex: number;

        /** MfrRoomInfo settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MfrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new MfrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MfrRoomInfo instance
         */
        public static create(properties?: MultiFreeRoom.IMfrRoomInfo): MultiFreeRoom.MfrRoomInfo;

        /**
         * Encodes the specified MfrRoomInfo message. Does not implicitly {@link MultiFreeRoom.MfrRoomInfo.verify|verify} messages.
         * @param message MfrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiFreeRoom.IMfrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MfrRoomInfo message, length delimited. Does not implicitly {@link MultiFreeRoom.MfrRoomInfo.verify|verify} messages.
         * @param message MfrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiFreeRoom.IMfrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MfrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MfrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiFreeRoom.MfrRoomInfo;

        /**
         * Decodes a MfrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MfrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiFreeRoom.MfrRoomInfo;

        /**
         * Verifies a MfrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MfrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MfrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiFreeRoom.MfrRoomInfo;

        /**
         * Creates a plain object from a MfrRoomInfo message. Also converts values to other types if specified.
         * @param message MfrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiFreeRoom.MfrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MfrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiPlayerWar. */
export declare interface IMultiPlayerWar {
}

/** Represents a MultiPlayerWar. */
export declare class MultiPlayerWar implements IMultiPlayerWar {

    /**
     * Constructs a new MultiPlayerWar.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiPlayerWar);

    /**
     * Creates a new MultiPlayerWar instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiPlayerWar instance
     */
    public static create(properties?: IMultiPlayerWar): MultiPlayerWar;

    /**
     * Encodes the specified MultiPlayerWar message. Does not implicitly {@link MultiPlayerWar.verify|verify} messages.
     * @param message MultiPlayerWar message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiPlayerWar, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiPlayerWar message, length delimited. Does not implicitly {@link MultiPlayerWar.verify|verify} messages.
     * @param message MultiPlayerWar message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiPlayerWar, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiPlayerWar message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiPlayerWar
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar;

    /**
     * Decodes a MultiPlayerWar message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiPlayerWar
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar;

    /**
     * Verifies a MultiPlayerWar message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiPlayerWar message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiPlayerWar
     */
    public static fromObject(object: { [k: string]: any }): MultiPlayerWar;

    /**
     * Creates a plain object from a MultiPlayerWar message. Also converts values to other types if specified.
     * @param message MultiPlayerWar
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiPlayerWar, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiPlayerWar to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiPlayerWar {

    /** Properties of a MpwWatchRequesterInfo. */
    interface IMpwWatchRequesterInfo {

        /** MpwWatchRequesterInfo userId */
        userId?: (number|null);

        /** MpwWatchRequesterInfo isRequestingOthers */
        isRequestingOthers?: (boolean|null);

        /** MpwWatchRequesterInfo isWatchingOthers */
        isWatchingOthers?: (boolean|null);
    }

    /** Represents a MpwWatchRequesterInfo. */
    class MpwWatchRequesterInfo implements IMpwWatchRequesterInfo {

        /**
         * Constructs a new MpwWatchRequesterInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWatchRequesterInfo);

        /** MpwWatchRequesterInfo userId. */
        public userId: number;

        /** MpwWatchRequesterInfo isRequestingOthers. */
        public isRequestingOthers: boolean;

        /** MpwWatchRequesterInfo isWatchingOthers. */
        public isWatchingOthers: boolean;

        /**
         * Creates a new MpwWatchRequesterInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWatchRequesterInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWatchRequesterInfo): MultiPlayerWar.MpwWatchRequesterInfo;

        /**
         * Encodes the specified MpwWatchRequesterInfo message. Does not implicitly {@link MultiPlayerWar.MpwWatchRequesterInfo.verify|verify} messages.
         * @param message MpwWatchRequesterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWatchRequesterInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWatchRequesterInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWatchRequesterInfo.verify|verify} messages.
         * @param message MpwWatchRequesterInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWatchRequesterInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWatchRequesterInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWatchRequesterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWatchRequesterInfo;

        /**
         * Decodes a MpwWatchRequesterInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWatchRequesterInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWatchRequesterInfo;

        /**
         * Verifies a MpwWatchRequesterInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWatchRequesterInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWatchRequesterInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWatchRequesterInfo;

        /**
         * Creates a plain object from a MpwWatchRequesterInfo message. Also converts values to other types if specified.
         * @param message MpwWatchRequesterInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWatchRequesterInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWatchRequesterInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwWatchInfo. */
    interface IMpwWatchInfo {

        /** MpwWatchInfo warInfo */
        warInfo?: (MultiPlayerWar.IMpwWarInfo|null);

        /** MpwWatchInfo ongoingDstUserIds */
        ongoingDstUserIds?: (number[]|null);

        /** MpwWatchInfo requestDstUserIds */
        requestDstUserIds?: (number[]|null);

        /** MpwWatchInfo ongoingSrcUserIds */
        ongoingSrcUserIds?: (number[]|null);

        /** MpwWatchInfo requestSrcUserIds */
        requestSrcUserIds?: (number[]|null);

        /** MpwWatchInfo requesterInfos */
        requesterInfos?: (MultiPlayerWar.IMpwWatchRequesterInfo[]|null);
    }

    /** Represents a MpwWatchInfo. */
    class MpwWatchInfo implements IMpwWatchInfo {

        /**
         * Constructs a new MpwWatchInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWatchInfo);

        /** MpwWatchInfo warInfo. */
        public warInfo?: (MultiPlayerWar.IMpwWarInfo|null);

        /** MpwWatchInfo ongoingDstUserIds. */
        public ongoingDstUserIds: number[];

        /** MpwWatchInfo requestDstUserIds. */
        public requestDstUserIds: number[];

        /** MpwWatchInfo ongoingSrcUserIds. */
        public ongoingSrcUserIds: number[];

        /** MpwWatchInfo requestSrcUserIds. */
        public requestSrcUserIds: number[];

        /** MpwWatchInfo requesterInfos. */
        public requesterInfos: MultiPlayerWar.IMpwWatchRequesterInfo[];

        /**
         * Creates a new MpwWatchInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWatchInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWatchInfo): MultiPlayerWar.MpwWatchInfo;

        /**
         * Encodes the specified MpwWatchInfo message. Does not implicitly {@link MultiPlayerWar.MpwWatchInfo.verify|verify} messages.
         * @param message MpwWatchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWatchInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWatchInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWatchInfo.verify|verify} messages.
         * @param message MpwWatchInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWatchInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWatchInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWatchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWatchInfo;

        /**
         * Decodes a MpwWatchInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWatchInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWatchInfo;

        /**
         * Verifies a MpwWatchInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWatchInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWatchInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWatchInfo;

        /**
         * Creates a plain object from a MpwWatchInfo message. Also converts values to other types if specified.
         * @param message MpwWatchInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWatchInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWatchInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MpwWarInfo. */
    interface IMpwWarInfo {

        /** MpwWarInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MpwWarInfo settingsForMcw */
        settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** MpwWarInfo settingsForMrw */
        settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MpwWarInfo settingsForMfw */
        settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MpwWarInfo warId */
        warId?: (number|null);

        /** MpwWarInfo playerInfoList */
        playerInfoList?: (Structure.IWarPlayerInfo[]|null);

        /** MpwWarInfo playerIndexInTurn */
        playerIndexInTurn?: (number|null);

        /** MpwWarInfo turnIndex */
        turnIndex?: (number|null);

        /** MpwWarInfo enterTurnTime */
        enterTurnTime?: (number|null);
    }

    /** Represents a MpwWarInfo. */
    class MpwWarInfo implements IMpwWarInfo {

        /**
         * Constructs a new MpwWarInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiPlayerWar.IMpwWarInfo);

        /** MpwWarInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MpwWarInfo settingsForMcw. */
        public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

        /** MpwWarInfo settingsForMrw. */
        public settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MpwWarInfo settingsForMfw. */
        public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

        /** MpwWarInfo warId. */
        public warId: number;

        /** MpwWarInfo playerInfoList. */
        public playerInfoList: Structure.IWarPlayerInfo[];

        /** MpwWarInfo playerIndexInTurn. */
        public playerIndexInTurn: number;

        /** MpwWarInfo turnIndex. */
        public turnIndex: number;

        /** MpwWarInfo enterTurnTime. */
        public enterTurnTime: number;

        /**
         * Creates a new MpwWarInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MpwWarInfo instance
         */
        public static create(properties?: MultiPlayerWar.IMpwWarInfo): MultiPlayerWar.MpwWarInfo;

        /**
         * Encodes the specified MpwWarInfo message. Does not implicitly {@link MultiPlayerWar.MpwWarInfo.verify|verify} messages.
         * @param message MpwWarInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiPlayerWar.IMpwWarInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MpwWarInfo message, length delimited. Does not implicitly {@link MultiPlayerWar.MpwWarInfo.verify|verify} messages.
         * @param message MpwWarInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiPlayerWar.IMpwWarInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MpwWarInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MpwWarInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiPlayerWar.MpwWarInfo;

        /**
         * Decodes a MpwWarInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MpwWarInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiPlayerWar.MpwWarInfo;

        /**
         * Verifies a MpwWarInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MpwWarInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MpwWarInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiPlayerWar.MpwWarInfo;

        /**
         * Creates a plain object from a MpwWarInfo message. Also converts values to other types if specified.
         * @param message MpwWarInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiPlayerWar.MpwWarInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MpwWarInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a MultiRankRoom. */
export declare interface IMultiRankRoom {
}

/** Represents a MultiRankRoom. */
export declare class MultiRankRoom implements IMultiRankRoom {

    /**
     * Constructs a new MultiRankRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMultiRankRoom);

    /**
     * Creates a new MultiRankRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MultiRankRoom instance
     */
    public static create(properties?: IMultiRankRoom): MultiRankRoom;

    /**
     * Encodes the specified MultiRankRoom message. Does not implicitly {@link MultiRankRoom.verify|verify} messages.
     * @param message MultiRankRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMultiRankRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified MultiRankRoom message, length delimited. Does not implicitly {@link MultiRankRoom.verify|verify} messages.
     * @param message MultiRankRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMultiRankRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a MultiRankRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MultiRankRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom;

    /**
     * Decodes a MultiRankRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MultiRankRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom;

    /**
     * Verifies a MultiRankRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MultiRankRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MultiRankRoom
     */
    public static fromObject(object: { [k: string]: any }): MultiRankRoom;

    /**
     * Creates a plain object from a MultiRankRoom message. Also converts values to other types if specified.
     * @param message MultiRankRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MultiRankRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MultiRankRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace MultiRankRoom {

    /** Properties of a DataForMrrQueue. */
    interface IDataForMrrQueue {

        /** DataForMrrQueue queueType */
        queueType?: (number|null);

        /** DataForMrrQueue userId */
        userId?: (number|null);

        /** DataForMrrQueue timestamp */
        timestamp?: (number|null);

        /** DataForMrrQueue maxConcurrentCount */
        maxConcurrentCount?: (number|null);
    }

    /** Represents a DataForMrrQueue. */
    class DataForMrrQueue implements IDataForMrrQueue {

        /**
         * Constructs a new DataForMrrQueue.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IDataForMrrQueue);

        /** DataForMrrQueue queueType. */
        public queueType: number;

        /** DataForMrrQueue userId. */
        public userId: number;

        /** DataForMrrQueue timestamp. */
        public timestamp: number;

        /** DataForMrrQueue maxConcurrentCount. */
        public maxConcurrentCount: number;

        /**
         * Creates a new DataForMrrQueue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForMrrQueue instance
         */
        public static create(properties?: MultiRankRoom.IDataForMrrQueue): MultiRankRoom.DataForMrrQueue;

        /**
         * Encodes the specified DataForMrrQueue message. Does not implicitly {@link MultiRankRoom.DataForMrrQueue.verify|verify} messages.
         * @param message DataForMrrQueue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IDataForMrrQueue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForMrrQueue message, length delimited. Does not implicitly {@link MultiRankRoom.DataForMrrQueue.verify|verify} messages.
         * @param message DataForMrrQueue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IDataForMrrQueue, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForMrrQueue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForMrrQueue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.DataForMrrQueue;

        /**
         * Decodes a DataForMrrQueue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForMrrQueue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.DataForMrrQueue;

        /**
         * Verifies a DataForMrrQueue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForMrrQueue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForMrrQueue
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.DataForMrrQueue;

        /**
         * Creates a plain object from a DataForMrrQueue message. Also converts values to other types if specified.
         * @param message DataForMrrQueue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.DataForMrrQueue, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForMrrQueue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MrrQueueInfo. */
    interface IMrrQueueInfo {

        /** MrrQueueInfo dataList */
        dataList?: (MultiRankRoom.IDataForMrrQueue[]|null);
    }

    /** Represents a MrrQueueInfo. */
    class MrrQueueInfo implements IMrrQueueInfo {

        /**
         * Constructs a new MrrQueueInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IMrrQueueInfo);

        /** MrrQueueInfo dataList. */
        public dataList: MultiRankRoom.IDataForMrrQueue[];

        /**
         * Creates a new MrrQueueInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MrrQueueInfo instance
         */
        public static create(properties?: MultiRankRoom.IMrrQueueInfo): MultiRankRoom.MrrQueueInfo;

        /**
         * Encodes the specified MrrQueueInfo message. Does not implicitly {@link MultiRankRoom.MrrQueueInfo.verify|verify} messages.
         * @param message MrrQueueInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IMrrQueueInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MrrQueueInfo message, length delimited. Does not implicitly {@link MultiRankRoom.MrrQueueInfo.verify|verify} messages.
         * @param message MrrQueueInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IMrrQueueInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MrrQueueInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MrrQueueInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.MrrQueueInfo;

        /**
         * Decodes a MrrQueueInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MrrQueueInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.MrrQueueInfo;

        /**
         * Verifies a MrrQueueInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MrrQueueInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MrrQueueInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.MrrQueueInfo;

        /**
         * Creates a plain object from a MrrQueueInfo message. Also converts values to other types if specified.
         * @param message MrrQueueInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.MrrQueueInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MrrQueueInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MrrRoomInfo. */
    interface IMrrRoomInfo {

        /** MrrRoomInfo roomId */
        roomId?: (number|null);

        /** MrrRoomInfo timeForCreateRoom */
        timeForCreateRoom?: (number|null);

        /** MrrRoomInfo timeForStartSetSelfSettings */
        timeForStartSetSelfSettings?: (number|null);

        /** MrrRoomInfo settingsForCommon */
        settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MrrRoomInfo settingsForMrw */
        settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MrrRoomInfo playerDataList */
        playerDataList?: (Structure.IDataForPlayerInRoom[]|null);
    }

    /** Represents a MrrRoomInfo. */
    class MrrRoomInfo implements IMrrRoomInfo {

        /**
         * Constructs a new MrrRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IMrrRoomInfo);

        /** MrrRoomInfo roomId. */
        public roomId: number;

        /** MrrRoomInfo timeForCreateRoom. */
        public timeForCreateRoom: number;

        /** MrrRoomInfo timeForStartSetSelfSettings. */
        public timeForStartSetSelfSettings: number;

        /** MrrRoomInfo settingsForCommon. */
        public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

        /** MrrRoomInfo settingsForMrw. */
        public settingsForMrw?: (WarSettings.ISettingsForMrw|null);

        /** MrrRoomInfo playerDataList. */
        public playerDataList: Structure.IDataForPlayerInRoom[];

        /**
         * Creates a new MrrRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MrrRoomInfo instance
         */
        public static create(properties?: MultiRankRoom.IMrrRoomInfo): MultiRankRoom.MrrRoomInfo;

        /**
         * Encodes the specified MrrRoomInfo message. Does not implicitly {@link MultiRankRoom.MrrRoomInfo.verify|verify} messages.
         * @param message MrrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IMrrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MrrRoomInfo message, length delimited. Does not implicitly {@link MultiRankRoom.MrrRoomInfo.verify|verify} messages.
         * @param message MrrRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IMrrRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MrrRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MrrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.MrrRoomInfo;

        /**
         * Decodes a MrrRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MrrRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.MrrRoomInfo;

        /**
         * Verifies a MrrRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MrrRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MrrRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.MrrRoomInfo;

        /**
         * Creates a plain object from a MrrRoomInfo message. Also converts values to other types if specified.
         * @param message MrrRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.MrrRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MrrRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MrrRoomInfoList. */
    interface IMrrRoomInfoList {

        /** MrrRoomInfoList roomList */
        roomList?: (MultiRankRoom.IMrrRoomInfo[]|null);
    }

    /** Represents a MrrRoomInfoList. */
    class MrrRoomInfoList implements IMrrRoomInfoList {

        /**
         * Constructs a new MrrRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: MultiRankRoom.IMrrRoomInfoList);

        /** MrrRoomInfoList roomList. */
        public roomList: MultiRankRoom.IMrrRoomInfo[];

        /**
         * Creates a new MrrRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MrrRoomInfoList instance
         */
        public static create(properties?: MultiRankRoom.IMrrRoomInfoList): MultiRankRoom.MrrRoomInfoList;

        /**
         * Encodes the specified MrrRoomInfoList message. Does not implicitly {@link MultiRankRoom.MrrRoomInfoList.verify|verify} messages.
         * @param message MrrRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: MultiRankRoom.IMrrRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MrrRoomInfoList message, length delimited. Does not implicitly {@link MultiRankRoom.MrrRoomInfoList.verify|verify} messages.
         * @param message MrrRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: MultiRankRoom.IMrrRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MrrRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MrrRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): MultiRankRoom.MrrRoomInfoList;

        /**
         * Decodes a MrrRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MrrRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): MultiRankRoom.MrrRoomInfoList;

        /**
         * Verifies a MrrRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MrrRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MrrRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): MultiRankRoom.MrrRoomInfoList;

        /**
         * Creates a plain object from a MrrRoomInfoList message. Also converts values to other types if specified.
         * @param message MrrRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: MultiRankRoom.MrrRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MrrRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a SingleCustomRoom. */
export declare interface ISingleCustomRoom {
}

/** Represents a SingleCustomRoom. */
export declare class SingleCustomRoom implements ISingleCustomRoom {

    /**
     * Constructs a new SingleCustomRoom.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISingleCustomRoom);

    /**
     * Creates a new SingleCustomRoom instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SingleCustomRoom instance
     */
    public static create(properties?: ISingleCustomRoom): SingleCustomRoom;

    /**
     * Encodes the specified SingleCustomRoom message. Does not implicitly {@link SingleCustomRoom.verify|verify} messages.
     * @param message SingleCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISingleCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified SingleCustomRoom message, length delimited. Does not implicitly {@link SingleCustomRoom.verify|verify} messages.
     * @param message SingleCustomRoom message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISingleCustomRoom, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a SingleCustomRoom message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SingleCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SingleCustomRoom;

    /**
     * Decodes a SingleCustomRoom message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SingleCustomRoom
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SingleCustomRoom;

    /**
     * Verifies a SingleCustomRoom message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SingleCustomRoom message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SingleCustomRoom
     */
    public static fromObject(object: { [k: string]: any }): SingleCustomRoom;

    /**
     * Creates a plain object from a SingleCustomRoom message. Also converts values to other types if specified.
     * @param message SingleCustomRoom
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SingleCustomRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SingleCustomRoom to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace SingleCustomRoom {

    /** Properties of a ScrSaveSlotInfo. */
    interface IScrSaveSlotInfo {

        /** ScrSaveSlotInfo slotIndex */
        slotIndex?: (number|null);

        /** ScrSaveSlotInfo mapId */
        mapId?: (number|null);

        /** ScrSaveSlotInfo warType */
        warType?: (number|null);

        /** ScrSaveSlotInfo configVersion */
        configVersion?: (string|null);

        /** ScrSaveSlotInfo slotComment */
        slotComment?: (string|null);
    }

    /** Represents a ScrSaveSlotInfo. */
    class ScrSaveSlotInfo implements IScrSaveSlotInfo {

        /**
         * Constructs a new ScrSaveSlotInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: SingleCustomRoom.IScrSaveSlotInfo);

        /** ScrSaveSlotInfo slotIndex. */
        public slotIndex: number;

        /** ScrSaveSlotInfo mapId. */
        public mapId: number;

        /** ScrSaveSlotInfo warType. */
        public warType: number;

        /** ScrSaveSlotInfo configVersion. */
        public configVersion: string;

        /** ScrSaveSlotInfo slotComment. */
        public slotComment: string;

        /**
         * Creates a new ScrSaveSlotInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ScrSaveSlotInfo instance
         */
        public static create(properties?: SingleCustomRoom.IScrSaveSlotInfo): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Encodes the specified ScrSaveSlotInfo message. Does not implicitly {@link SingleCustomRoom.ScrSaveSlotInfo.verify|verify} messages.
         * @param message ScrSaveSlotInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: SingleCustomRoom.IScrSaveSlotInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ScrSaveSlotInfo message, length delimited. Does not implicitly {@link SingleCustomRoom.ScrSaveSlotInfo.verify|verify} messages.
         * @param message ScrSaveSlotInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: SingleCustomRoom.IScrSaveSlotInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ScrSaveSlotInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ScrSaveSlotInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Decodes a ScrSaveSlotInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ScrSaveSlotInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Verifies a ScrSaveSlotInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ScrSaveSlotInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ScrSaveSlotInfo
         */
        public static fromObject(object: { [k: string]: any }): SingleCustomRoom.ScrSaveSlotInfo;

        /**
         * Creates a plain object from a ScrSaveSlotInfo message. Also converts values to other types if specified.
         * @param message ScrSaveSlotInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: SingleCustomRoom.ScrSaveSlotInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ScrSaveSlotInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Replay. */
export declare interface IReplay {
}

/** Represents a Replay. */
export declare class Replay implements IReplay {

    /**
     * Constructs a new Replay.
     * @param [properties] Properties to set
     */
    constructor(properties?: IReplay);

    /**
     * Creates a new Replay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Replay instance
     */
    public static create(properties?: IReplay): Replay;

    /**
     * Encodes the specified Replay message. Does not implicitly {@link Replay.verify|verify} messages.
     * @param message Replay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IReplay, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Replay message, length delimited. Does not implicitly {@link Replay.verify|verify} messages.
     * @param message Replay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IReplay, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Replay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Replay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay;

    /**
     * Decodes a Replay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Replay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay;

    /**
     * Verifies a Replay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Replay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Replay
     */
    public static fromObject(object: { [k: string]: any }): Replay;

    /**
     * Creates a plain object from a Replay message. Also converts values to other types if specified.
     * @param message Replay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Replay, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Replay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Replay {

    /** Properties of a ReplayFilter. */
    interface IReplayFilter {

        /** ReplayFilter replayId */
        replayId?: (number|null);

        /** ReplayFilter mapName */
        mapName?: (string|null);

        /** ReplayFilter minMyRating */
        minMyRating?: (number|null);

        /** ReplayFilter minGlobalRating */
        minGlobalRating?: (number|null);

        /** ReplayFilter userNickname */
        userNickname?: (string|null);

        /** ReplayFilter coName */
        coName?: (string|null);
    }

    /** Represents a ReplayFilter. */
    class ReplayFilter implements IReplayFilter {

        /**
         * Constructs a new ReplayFilter.
         * @param [properties] Properties to set
         */
        constructor(properties?: Replay.IReplayFilter);

        /** ReplayFilter replayId. */
        public replayId: number;

        /** ReplayFilter mapName. */
        public mapName: string;

        /** ReplayFilter minMyRating. */
        public minMyRating: number;

        /** ReplayFilter minGlobalRating. */
        public minGlobalRating: number;

        /** ReplayFilter userNickname. */
        public userNickname: string;

        /** ReplayFilter coName. */
        public coName: string;

        /**
         * Creates a new ReplayFilter instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplayFilter instance
         */
        public static create(properties?: Replay.IReplayFilter): Replay.ReplayFilter;

        /**
         * Encodes the specified ReplayFilter message. Does not implicitly {@link Replay.ReplayFilter.verify|verify} messages.
         * @param message ReplayFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Replay.IReplayFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplayFilter message, length delimited. Does not implicitly {@link Replay.ReplayFilter.verify|verify} messages.
         * @param message ReplayFilter message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Replay.IReplayFilter, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplayFilter message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplayFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay.ReplayFilter;

        /**
         * Decodes a ReplayFilter message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplayFilter
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay.ReplayFilter;

        /**
         * Verifies a ReplayFilter message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplayFilter message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplayFilter
         */
        public static fromObject(object: { [k: string]: any }): Replay.ReplayFilter;

        /**
         * Creates a plain object from a ReplayFilter message. Also converts values to other types if specified.
         * @param message ReplayFilter
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Replay.ReplayFilter, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplayFilter to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplayInfo. */
    interface IReplayInfo {

        /** ReplayInfo replayBriefInfo */
        replayBriefInfo?: (Replay.IReplayBriefInfo|null);

        /** ReplayInfo myRating */
        myRating?: (number|null);
    }

    /** Represents a ReplayInfo. */
    class ReplayInfo implements IReplayInfo {

        /**
         * Constructs a new ReplayInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Replay.IReplayInfo);

        /** ReplayInfo replayBriefInfo. */
        public replayBriefInfo?: (Replay.IReplayBriefInfo|null);

        /** ReplayInfo myRating. */
        public myRating: number;

        /**
         * Creates a new ReplayInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplayInfo instance
         */
        public static create(properties?: Replay.IReplayInfo): Replay.ReplayInfo;

        /**
         * Encodes the specified ReplayInfo message. Does not implicitly {@link Replay.ReplayInfo.verify|verify} messages.
         * @param message ReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Replay.IReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplayInfo message, length delimited. Does not implicitly {@link Replay.ReplayInfo.verify|verify} messages.
         * @param message ReplayInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Replay.IReplayInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplayInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay.ReplayInfo;

        /**
         * Decodes a ReplayInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplayInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay.ReplayInfo;

        /**
         * Verifies a ReplayInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplayInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplayInfo
         */
        public static fromObject(object: { [k: string]: any }): Replay.ReplayInfo;

        /**
         * Creates a plain object from a ReplayInfo message. Also converts values to other types if specified.
         * @param message ReplayInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Replay.ReplayInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplayInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ReplayBriefInfo. */
    interface IReplayBriefInfo {

        /** ReplayBriefInfo replayId */
        replayId?: (number|null);

        /** ReplayBriefInfo configVersion */
        configVersion?: (string|null);

        /** ReplayBriefInfo warType */
        warType?: (number|null);

        /** ReplayBriefInfo mapId */
        mapId?: (number|null);

        /** ReplayBriefInfo hasFog */
        hasFog?: (boolean|null);

        /** ReplayBriefInfo turnIndex */
        turnIndex?: (number|null);

        /** ReplayBriefInfo executedActionsCount */
        executedActionsCount?: (number|null);

        /** ReplayBriefInfo warEndTime */
        warEndTime?: (number|null);

        /** ReplayBriefInfo totalRating */
        totalRating?: (number|null);

        /** ReplayBriefInfo totalRaters */
        totalRaters?: (number|null);

        /** ReplayBriefInfo playerInfoList */
        playerInfoList?: (Structure.IWarPlayerInfo[]|null);
    }

    /** Represents a ReplayBriefInfo. */
    class ReplayBriefInfo implements IReplayBriefInfo {

        /**
         * Constructs a new ReplayBriefInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Replay.IReplayBriefInfo);

        /** ReplayBriefInfo replayId. */
        public replayId: number;

        /** ReplayBriefInfo configVersion. */
        public configVersion: string;

        /** ReplayBriefInfo warType. */
        public warType: number;

        /** ReplayBriefInfo mapId. */
        public mapId: number;

        /** ReplayBriefInfo hasFog. */
        public hasFog: boolean;

        /** ReplayBriefInfo turnIndex. */
        public turnIndex: number;

        /** ReplayBriefInfo executedActionsCount. */
        public executedActionsCount: number;

        /** ReplayBriefInfo warEndTime. */
        public warEndTime: number;

        /** ReplayBriefInfo totalRating. */
        public totalRating: number;

        /** ReplayBriefInfo totalRaters. */
        public totalRaters: number;

        /** ReplayBriefInfo playerInfoList. */
        public playerInfoList: Structure.IWarPlayerInfo[];

        /**
         * Creates a new ReplayBriefInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ReplayBriefInfo instance
         */
        public static create(properties?: Replay.IReplayBriefInfo): Replay.ReplayBriefInfo;

        /**
         * Encodes the specified ReplayBriefInfo message. Does not implicitly {@link Replay.ReplayBriefInfo.verify|verify} messages.
         * @param message ReplayBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Replay.IReplayBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ReplayBriefInfo message, length delimited. Does not implicitly {@link Replay.ReplayBriefInfo.verify|verify} messages.
         * @param message ReplayBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Replay.IReplayBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ReplayBriefInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ReplayBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Replay.ReplayBriefInfo;

        /**
         * Decodes a ReplayBriefInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ReplayBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Replay.ReplayBriefInfo;

        /**
         * Verifies a ReplayBriefInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ReplayBriefInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ReplayBriefInfo
         */
        public static fromObject(object: { [k: string]: any }): Replay.ReplayBriefInfo;

        /**
         * Creates a plain object from a ReplayBriefInfo message. Also converts values to other types if specified.
         * @param message ReplayBriefInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Replay.ReplayBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ReplayBriefInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a Chat. */
export declare interface IChat {
}

/** Represents a Chat. */
export declare class Chat implements IChat {

    /**
     * Constructs a new Chat.
     * @param [properties] Properties to set
     */
    constructor(properties?: IChat);

    /**
     * Creates a new Chat instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Chat instance
     */
    public static create(properties?: IChat): Chat;

    /**
     * Encodes the specified Chat message. Does not implicitly {@link Chat.verify|verify} messages.
     * @param message Chat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IChat, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified Chat message, length delimited. Does not implicitly {@link Chat.verify|verify} messages.
     * @param message Chat message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IChat, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a Chat message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Chat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat;

    /**
     * Decodes a Chat message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Chat
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat;

    /**
     * Verifies a Chat message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Chat message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Chat
     */
    public static fromObject(object: { [k: string]: any }): Chat;

    /**
     * Creates a plain object from a Chat message. Also converts values to other types if specified.
     * @param message Chat
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Chat, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Chat to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace Chat {

    /** Properties of a ChatMessage. */
    interface IChatMessage {

        /** ChatMessage fromUserId */
        fromUserId?: (number|null);

        /** ChatMessage toCategory */
        toCategory?: (number|null);

        /** ChatMessage toTarget */
        toTarget?: (number|null);

        /** ChatMessage content */
        content?: (string|null);

        /** ChatMessage timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ChatMessage. */
    class ChatMessage implements IChatMessage {

        /**
         * Constructs a new ChatMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: Chat.IChatMessage);

        /** ChatMessage fromUserId. */
        public fromUserId: number;

        /** ChatMessage toCategory. */
        public toCategory: number;

        /** ChatMessage toTarget. */
        public toTarget: number;

        /** ChatMessage content. */
        public content: string;

        /** ChatMessage timestamp. */
        public timestamp: number;

        /**
         * Creates a new ChatMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatMessage instance
         */
        public static create(properties?: Chat.IChatMessage): Chat.ChatMessage;

        /**
         * Encodes the specified ChatMessage message. Does not implicitly {@link Chat.ChatMessage.verify|verify} messages.
         * @param message ChatMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatMessage message, length delimited. Does not implicitly {@link Chat.ChatMessage.verify|verify} messages.
         * @param message ChatMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Chat.IChatMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat.ChatMessage;

        /**
         * Decodes a ChatMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat.ChatMessage;

        /**
         * Verifies a ChatMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatMessage
         */
        public static fromObject(object: { [k: string]: any }): Chat.ChatMessage;

        /**
         * Creates a plain object from a ChatMessage message. Also converts values to other types if specified.
         * @param message ChatMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Chat.ChatMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ChatReadProgress. */
    interface IChatReadProgress {

        /** ChatReadProgress toCategory */
        toCategory?: (number|null);

        /** ChatReadProgress toTarget */
        toTarget?: (number|null);

        /** ChatReadProgress timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ChatReadProgress. */
    class ChatReadProgress implements IChatReadProgress {

        /**
         * Constructs a new ChatReadProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: Chat.IChatReadProgress);

        /** ChatReadProgress toCategory. */
        public toCategory: number;

        /** ChatReadProgress toTarget. */
        public toTarget: number;

        /** ChatReadProgress timestamp. */
        public timestamp: number;

        /**
         * Creates a new ChatReadProgress instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ChatReadProgress instance
         */
        public static create(properties?: Chat.IChatReadProgress): Chat.ChatReadProgress;

        /**
         * Encodes the specified ChatReadProgress message. Does not implicitly {@link Chat.ChatReadProgress.verify|verify} messages.
         * @param message ChatReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified ChatReadProgress message, length delimited. Does not implicitly {@link Chat.ChatReadProgress.verify|verify} messages.
         * @param message ChatReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Chat.IChatReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a ChatReadProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ChatReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): Chat.ChatReadProgress;

        /**
         * Decodes a ChatReadProgress message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ChatReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): Chat.ChatReadProgress;

        /**
         * Verifies a ChatReadProgress message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ChatReadProgress message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ChatReadProgress
         */
        public static fromObject(object: { [k: string]: any }): Chat.ChatReadProgress;

        /**
         * Creates a plain object from a ChatReadProgress message. Also converts values to other types if specified.
         * @param message ChatReadProgress
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Chat.ChatReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ChatReadProgress to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a User. */
export declare interface IUser {
}

/** Represents a User. */
export declare class User implements IUser {

    /**
     * Constructs a new User.
     * @param [properties] Properties to set
     */
    constructor(properties?: IUser);

    /**
     * Creates a new User instance using the specified properties.
     * @param [properties] Properties to set
     * @returns User instance
     */
    public static create(properties?: IUser): User;

    /**
     * Encodes the specified User message. Does not implicitly {@link User.verify|verify} messages.
     * @param message User message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IUser, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified User message, length delimited. Does not implicitly {@link User.verify|verify} messages.
     * @param message User message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IUser, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a User message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns User
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User;

    /**
     * Decodes a User message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns User
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User;

    /**
     * Verifies a User message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a User message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns User
     */
    public static fromObject(object: { [k: string]: any }): User;

    /**
     * Creates a plain object from a User message. Also converts values to other types if specified.
     * @param message User
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: User, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this User to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace User {

    /** Properties of a DataForUserWarStatistics. */
    interface IDataForUserWarStatistics {

        /** DataForUserWarStatistics warType */
        warType?: (number|null);

        /** DataForUserWarStatistics playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** DataForUserWarStatistics wins */
        wins?: (number|null);

        /** DataForUserWarStatistics loses */
        loses?: (number|null);

        /** DataForUserWarStatistics draws */
        draws?: (number|null);
    }

    /** Represents a DataForUserWarStatistics. */
    class DataForUserWarStatistics implements IDataForUserWarStatistics {

        /**
         * Constructs a new DataForUserWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IDataForUserWarStatistics);

        /** DataForUserWarStatistics warType. */
        public warType: number;

        /** DataForUserWarStatistics playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** DataForUserWarStatistics wins. */
        public wins: number;

        /** DataForUserWarStatistics loses. */
        public loses: number;

        /** DataForUserWarStatistics draws. */
        public draws: number;

        /**
         * Creates a new DataForUserWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForUserWarStatistics instance
         */
        public static create(properties?: User.IDataForUserWarStatistics): User.DataForUserWarStatistics;

        /**
         * Encodes the specified DataForUserWarStatistics message. Does not implicitly {@link User.DataForUserWarStatistics.verify|verify} messages.
         * @param message DataForUserWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IDataForUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForUserWarStatistics message, length delimited. Does not implicitly {@link User.DataForUserWarStatistics.verify|verify} messages.
         * @param message DataForUserWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IDataForUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForUserWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForUserWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.DataForUserWarStatistics;

        /**
         * Decodes a DataForUserWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForUserWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.DataForUserWarStatistics;

        /**
         * Verifies a DataForUserWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForUserWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForUserWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): User.DataForUserWarStatistics;

        /**
         * Creates a plain object from a DataForUserWarStatistics message. Also converts values to other types if specified.
         * @param message DataForUserWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.DataForUserWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForUserWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a DataForUserRankScore. */
    interface IDataForUserRankScore {

        /** DataForUserRankScore warType */
        warType?: (number|null);

        /** DataForUserRankScore playersCountUnneutral */
        playersCountUnneutral?: (number|null);

        /** DataForUserRankScore currentScore */
        currentScore?: (number|null);

        /** DataForUserRankScore currentRank */
        currentRank?: (number|null);

        /** DataForUserRankScore lastWarEndTime */
        lastWarEndTime?: (number|null);
    }

    /** Represents a DataForUserRankScore. */
    class DataForUserRankScore implements IDataForUserRankScore {

        /**
         * Constructs a new DataForUserRankScore.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IDataForUserRankScore);

        /** DataForUserRankScore warType. */
        public warType: number;

        /** DataForUserRankScore playersCountUnneutral. */
        public playersCountUnneutral: number;

        /** DataForUserRankScore currentScore. */
        public currentScore: number;

        /** DataForUserRankScore currentRank. */
        public currentRank: number;

        /** DataForUserRankScore lastWarEndTime. */
        public lastWarEndTime: number;

        /**
         * Creates a new DataForUserRankScore instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DataForUserRankScore instance
         */
        public static create(properties?: User.IDataForUserRankScore): User.DataForUserRankScore;

        /**
         * Encodes the specified DataForUserRankScore message. Does not implicitly {@link User.DataForUserRankScore.verify|verify} messages.
         * @param message DataForUserRankScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IDataForUserRankScore, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified DataForUserRankScore message, length delimited. Does not implicitly {@link User.DataForUserRankScore.verify|verify} messages.
         * @param message DataForUserRankScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IDataForUserRankScore, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a DataForUserRankScore message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DataForUserRankScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.DataForUserRankScore;

        /**
         * Decodes a DataForUserRankScore message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DataForUserRankScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.DataForUserRankScore;

        /**
         * Verifies a DataForUserRankScore message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DataForUserRankScore message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DataForUserRankScore
         */
        public static fromObject(object: { [k: string]: any }): User.DataForUserRankScore;

        /**
         * Creates a plain object from a DataForUserRankScore message. Also converts values to other types if specified.
         * @param message DataForUserRankScore
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.DataForUserRankScore, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DataForUserRankScore to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserBriefInfo. */
    interface IUserBriefInfo {

        /** UserBriefInfo userId */
        userId?: (number|null);

        /** UserBriefInfo nickname */
        nickname?: (string|null);
    }

    /** Represents a UserBriefInfo. */
    class UserBriefInfo implements IUserBriefInfo {

        /**
         * Constructs a new UserBriefInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserBriefInfo);

        /** UserBriefInfo userId. */
        public userId: number;

        /** UserBriefInfo nickname. */
        public nickname: string;

        /**
         * Creates a new UserBriefInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserBriefInfo instance
         */
        public static create(properties?: User.IUserBriefInfo): User.UserBriefInfo;

        /**
         * Encodes the specified UserBriefInfo message. Does not implicitly {@link User.UserBriefInfo.verify|verify} messages.
         * @param message UserBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserBriefInfo message, length delimited. Does not implicitly {@link User.UserBriefInfo.verify|verify} messages.
         * @param message UserBriefInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserBriefInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserBriefInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserBriefInfo;

        /**
         * Decodes a UserBriefInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserBriefInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserBriefInfo;

        /**
         * Verifies a UserBriefInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserBriefInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserBriefInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserBriefInfo;

        /**
         * Creates a plain object from a UserBriefInfo message. Also converts values to other types if specified.
         * @param message UserBriefInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserBriefInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserBriefInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPrivilege. */
    interface IUserPrivilege {

        /** UserPrivilege canLogin */
        canLogin?: (boolean|null);

        /** UserPrivilege canChat */
        canChat?: (boolean|null);

        /** UserPrivilege isAdmin */
        isAdmin?: (boolean|null);

        /** UserPrivilege isMapCommittee */
        isMapCommittee?: (boolean|null);

        /** UserPrivilege isChangeLogEditor */
        isChangeLogEditor?: (boolean|null);
    }

    /** Represents a UserPrivilege. */
    class UserPrivilege implements IUserPrivilege {

        /**
         * Constructs a new UserPrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPrivilege);

        /** UserPrivilege canLogin. */
        public canLogin: boolean;

        /** UserPrivilege canChat. */
        public canChat: boolean;

        /** UserPrivilege isAdmin. */
        public isAdmin: boolean;

        /** UserPrivilege isMapCommittee. */
        public isMapCommittee: boolean;

        /** UserPrivilege isChangeLogEditor. */
        public isChangeLogEditor: boolean;

        /**
         * Creates a new UserPrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPrivilege instance
         */
        public static create(properties?: User.IUserPrivilege): User.UserPrivilege;

        /**
         * Encodes the specified UserPrivilege message. Does not implicitly {@link User.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPrivilege message, length delimited. Does not implicitly {@link User.UserPrivilege.verify|verify} messages.
         * @param message UserPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPrivilege;

        /**
         * Decodes a UserPrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPrivilege;

        /**
         * Verifies a UserPrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPrivilege
         */
        public static fromObject(object: { [k: string]: any }): User.UserPrivilege;

        /**
         * Creates a plain object from a UserPrivilege message. Also converts values to other types if specified.
         * @param message UserPrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserRankScore. */
    interface IUserRankScore {

        /** UserRankScore dataList */
        dataList?: (User.IDataForUserRankScore[]|null);
    }

    /** Represents a UserRankScore. */
    class UserRankScore implements IUserRankScore {

        /**
         * Constructs a new UserRankScore.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserRankScore);

        /** UserRankScore dataList. */
        public dataList: User.IDataForUserRankScore[];

        /**
         * Creates a new UserRankScore instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserRankScore instance
         */
        public static create(properties?: User.IUserRankScore): User.UserRankScore;

        /**
         * Encodes the specified UserRankScore message. Does not implicitly {@link User.UserRankScore.verify|verify} messages.
         * @param message UserRankScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserRankScore, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserRankScore message, length delimited. Does not implicitly {@link User.UserRankScore.verify|verify} messages.
         * @param message UserRankScore message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserRankScore, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserRankScore message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserRankScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserRankScore;

        /**
         * Decodes a UserRankScore message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserRankScore
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserRankScore;

        /**
         * Verifies a UserRankScore message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserRankScore message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserRankScore
         */
        public static fromObject(object: { [k: string]: any }): User.UserRankScore;

        /**
         * Creates a plain object from a UserRankScore message. Also converts values to other types if specified.
         * @param message UserRankScore
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserRankScore, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserRankScore to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserWarStatistics. */
    interface IUserWarStatistics {

        /** UserWarStatistics dataList */
        dataList?: (User.IDataForUserWarStatistics[]|null);
    }

    /** Represents a UserWarStatistics. */
    class UserWarStatistics implements IUserWarStatistics {

        /**
         * Constructs a new UserWarStatistics.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserWarStatistics);

        /** UserWarStatistics dataList. */
        public dataList: User.IDataForUserWarStatistics[];

        /**
         * Creates a new UserWarStatistics instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserWarStatistics instance
         */
        public static create(properties?: User.IUserWarStatistics): User.UserWarStatistics;

        /**
         * Encodes the specified UserWarStatistics message. Does not implicitly {@link User.UserWarStatistics.verify|verify} messages.
         * @param message UserWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserWarStatistics message, length delimited. Does not implicitly {@link User.UserWarStatistics.verify|verify} messages.
         * @param message UserWarStatistics message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserWarStatistics, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserWarStatistics message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserWarStatistics;

        /**
         * Decodes a UserWarStatistics message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserWarStatistics
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserWarStatistics;

        /**
         * Verifies a UserWarStatistics message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserWarStatistics message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserWarStatistics
         */
        public static fromObject(object: { [k: string]: any }): User.UserWarStatistics;

        /**
         * Creates a plain object from a UserWarStatistics message. Also converts values to other types if specified.
         * @param message UserWarStatistics
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserWarStatistics, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserWarStatistics to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserSettings. */
    interface IUserSettings {

        /** UserSettings unitAndTileTextureVersion */
        unitAndTileTextureVersion?: (number|null);

        /** UserSettings isSetPathMode */
        isSetPathMode?: (boolean|null);
    }

    /** Represents a UserSettings. */
    class UserSettings implements IUserSettings {

        /**
         * Constructs a new UserSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserSettings);

        /** UserSettings unitAndTileTextureVersion. */
        public unitAndTileTextureVersion: number;

        /** UserSettings isSetPathMode. */
        public isSetPathMode: boolean;

        /**
         * Creates a new UserSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserSettings instance
         */
        public static create(properties?: User.IUserSettings): User.UserSettings;

        /**
         * Encodes the specified UserSettings message. Does not implicitly {@link User.UserSettings.verify|verify} messages.
         * @param message UserSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserSettings message, length delimited. Does not implicitly {@link User.UserSettings.verify|verify} messages.
         * @param message UserSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserSettings;

        /**
         * Decodes a UserSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserSettings;

        /**
         * Verifies a UserSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserSettings
         */
        public static fromObject(object: { [k: string]: any }): User.UserSettings;

        /**
         * Creates a plain object from a UserSettings message. Also converts values to other types if specified.
         * @param message UserSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserComplexInfo. */
    interface IUserComplexInfo {

        /** UserComplexInfo userPrivilege */
        userPrivilege?: (User.IUserPrivilege|null);

        /** UserComplexInfo userRankScore */
        userRankScore?: (User.IUserRankScore|null);

        /** UserComplexInfo userWarStatistics */
        userWarStatistics?: (User.IUserWarStatistics|null);

        /** UserComplexInfo userSettings */
        userSettings?: (User.IUserSettings|null);
    }

    /** Represents a UserComplexInfo. */
    class UserComplexInfo implements IUserComplexInfo {

        /**
         * Constructs a new UserComplexInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserComplexInfo);

        /** UserComplexInfo userPrivilege. */
        public userPrivilege?: (User.IUserPrivilege|null);

        /** UserComplexInfo userRankScore. */
        public userRankScore?: (User.IUserRankScore|null);

        /** UserComplexInfo userWarStatistics. */
        public userWarStatistics?: (User.IUserWarStatistics|null);

        /** UserComplexInfo userSettings. */
        public userSettings?: (User.IUserSettings|null);

        /**
         * Creates a new UserComplexInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserComplexInfo instance
         */
        public static create(properties?: User.IUserComplexInfo): User.UserComplexInfo;

        /**
         * Encodes the specified UserComplexInfo message. Does not implicitly {@link User.UserComplexInfo.verify|verify} messages.
         * @param message UserComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserComplexInfo message, length delimited. Does not implicitly {@link User.UserComplexInfo.verify|verify} messages.
         * @param message UserComplexInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserComplexInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserComplexInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserComplexInfo;

        /**
         * Decodes a UserComplexInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserComplexInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserComplexInfo;

        /**
         * Verifies a UserComplexInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserComplexInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserComplexInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserComplexInfo;

        /**
         * Creates a plain object from a UserComplexInfo message. Also converts values to other types if specified.
         * @param message UserComplexInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserComplexInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserComplexInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserPublicInfo. */
    interface IUserPublicInfo {

        /** UserPublicInfo userId */
        userId?: (number|null);

        /** UserPublicInfo nickname */
        nickname?: (string|null);

        /** UserPublicInfo registerTime */
        registerTime?: (number|null);

        /** UserPublicInfo lastLoginTime */
        lastLoginTime?: (number|null);

        /** UserPublicInfo loginCount */
        loginCount?: (number|null);

        /** UserPublicInfo onlineTime */
        onlineTime?: (number|null);

        /** UserPublicInfo discordId */
        discordId?: (string|null);

        /** UserPublicInfo userPrivilege */
        userPrivilege?: (User.IUserPrivilege|null);

        /** UserPublicInfo userRankScore */
        userRankScore?: (User.IUserRankScore|null);

        /** UserPublicInfo userWarStatistics */
        userWarStatistics?: (User.IUserWarStatistics|null);
    }

    /** Represents a UserPublicInfo. */
    class UserPublicInfo implements IUserPublicInfo {

        /**
         * Constructs a new UserPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserPublicInfo);

        /** UserPublicInfo userId. */
        public userId: number;

        /** UserPublicInfo nickname. */
        public nickname: string;

        /** UserPublicInfo registerTime. */
        public registerTime: number;

        /** UserPublicInfo lastLoginTime. */
        public lastLoginTime: number;

        /** UserPublicInfo loginCount. */
        public loginCount: number;

        /** UserPublicInfo onlineTime. */
        public onlineTime: number;

        /** UserPublicInfo discordId. */
        public discordId: string;

        /** UserPublicInfo userPrivilege. */
        public userPrivilege?: (User.IUserPrivilege|null);

        /** UserPublicInfo userRankScore. */
        public userRankScore?: (User.IUserRankScore|null);

        /** UserPublicInfo userWarStatistics. */
        public userWarStatistics?: (User.IUserWarStatistics|null);

        /**
         * Creates a new UserPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserPublicInfo instance
         */
        public static create(properties?: User.IUserPublicInfo): User.UserPublicInfo;

        /**
         * Encodes the specified UserPublicInfo message. Does not implicitly {@link User.UserPublicInfo.verify|verify} messages.
         * @param message UserPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserPublicInfo message, length delimited. Does not implicitly {@link User.UserPublicInfo.verify|verify} messages.
         * @param message UserPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserPublicInfo;

        /**
         * Decodes a UserPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserPublicInfo;

        /**
         * Verifies a UserPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserPublicInfo;

        /**
         * Creates a plain object from a UserPublicInfo message. Also converts values to other types if specified.
         * @param message UserPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a UserFullInfo. */
    interface IUserFullInfo {

        /** UserFullInfo userPublicInfo */
        userPublicInfo?: (User.IUserPublicInfo|null);

        /** UserFullInfo userSettings */
        userSettings?: (User.IUserSettings|null);

        /** UserFullInfo account */
        account?: (string|null);

        /** UserFullInfo password */
        password?: (string|null);

        /** UserFullInfo lastLoginIp */
        lastLoginIp?: (string|null);
    }

    /** Represents a UserFullInfo. */
    class UserFullInfo implements IUserFullInfo {

        /**
         * Constructs a new UserFullInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: User.IUserFullInfo);

        /** UserFullInfo userPublicInfo. */
        public userPublicInfo?: (User.IUserPublicInfo|null);

        /** UserFullInfo userSettings. */
        public userSettings?: (User.IUserSettings|null);

        /** UserFullInfo account. */
        public account: string;

        /** UserFullInfo password. */
        public password: string;

        /** UserFullInfo lastLoginIp. */
        public lastLoginIp: string;

        /**
         * Creates a new UserFullInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns UserFullInfo instance
         */
        public static create(properties?: User.IUserFullInfo): User.UserFullInfo;

        /**
         * Encodes the specified UserFullInfo message. Does not implicitly {@link User.UserFullInfo.verify|verify} messages.
         * @param message UserFullInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: User.IUserFullInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified UserFullInfo message, length delimited. Does not implicitly {@link User.UserFullInfo.verify|verify} messages.
         * @param message UserFullInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: User.IUserFullInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a UserFullInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns UserFullInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): User.UserFullInfo;

        /**
         * Decodes a UserFullInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns UserFullInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): User.UserFullInfo;

        /**
         * Verifies a UserFullInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a UserFullInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns UserFullInfo
         */
        public static fromObject(object: { [k: string]: any }): User.UserFullInfo;

        /**
         * Creates a plain object from a UserFullInfo message. Also converts values to other types if specified.
         * @param message UserFullInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: User.UserFullInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this UserFullInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Properties of a NetMessage. */
export declare interface INetMessage {
}

/** Represents a NetMessage. */
export declare class NetMessage implements INetMessage {

    /**
     * Constructs a new NetMessage.
     * @param [properties] Properties to set
     */
    constructor(properties?: INetMessage);

    /**
     * Creates a new NetMessage instance using the specified properties.
     * @param [properties] Properties to set
     * @returns NetMessage instance
     */
    public static create(properties?: INetMessage): NetMessage;

    /**
     * Encodes the specified NetMessage message. Does not implicitly {@link NetMessage.verify|verify} messages.
     * @param message NetMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: INetMessage, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified NetMessage message, length delimited. Does not implicitly {@link NetMessage.verify|verify} messages.
     * @param message NetMessage message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: INetMessage, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a NetMessage message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns NetMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage;

    /**
     * Decodes a NetMessage message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns NetMessage
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage;

    /**
     * Verifies a NetMessage message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a NetMessage message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns NetMessage
     */
    public static fromObject(object: { [k: string]: any }): NetMessage;

    /**
     * Creates a plain object from a NetMessage message. Also converts values to other types if specified.
     * @param message NetMessage
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: NetMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this NetMessage to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

export declare namespace NetMessage {

    /** Properties of a MessageContainer. */
    interface IMessageContainer {

        /** MessageContainer MsgCommonHeartbeat */
        MsgCommonHeartbeat?: (NetMessage.IMsgCommonHeartbeat|null);

        /** MessageContainer MsgCommonError */
        MsgCommonError?: (NetMessage.IMsgCommonError|null);

        /** MessageContainer MsgCommonServerDisconnect */
        MsgCommonServerDisconnect?: (NetMessage.IMsgCommonServerDisconnect|null);

        /** MessageContainer MsgCommonLatestConfigVersion */
        MsgCommonLatestConfigVersion?: (NetMessage.IMsgCommonLatestConfigVersion|null);

        /** MessageContainer MsgCommonGetServerStatus */
        MsgCommonGetServerStatus?: (NetMessage.IMsgCommonGetServerStatus|null);

        /** MessageContainer MsgCommonGetRankList */
        MsgCommonGetRankList?: (NetMessage.IMsgCommonGetRankList|null);

        /** MessageContainer MsgUserRegister */
        MsgUserRegister?: (NetMessage.IMsgUserRegister|null);

        /** MessageContainer MsgUserLogin */
        MsgUserLogin?: (NetMessage.IMsgUserLogin|null);

        /** MessageContainer MsgUserLogout */
        MsgUserLogout?: (NetMessage.IMsgUserLogout|null);

        /** MessageContainer MsgUserGetPublicInfo */
        MsgUserGetPublicInfo?: (NetMessage.IMsgUserGetPublicInfo|null);

        /** MessageContainer MsgUserGetOnlineUsers */
        MsgUserGetOnlineUsers?: (NetMessage.IMsgUserGetOnlineUsers|null);

        /** MessageContainer MsgUserSetNickname */
        MsgUserSetNickname?: (NetMessage.IMsgUserSetNickname|null);

        /** MessageContainer MsgUserSetDiscordId */
        MsgUserSetDiscordId?: (NetMessage.IMsgUserSetDiscordId|null);

        /** MessageContainer MsgUserSetPrivilege */
        MsgUserSetPrivilege?: (NetMessage.IMsgUserSetPrivilege|null);

        /** MessageContainer MsgUserSetPassword */
        MsgUserSetPassword?: (NetMessage.IMsgUserSetPassword|null);

        /** MessageContainer MsgUserGetSettings */
        MsgUserGetSettings?: (NetMessage.IMsgUserGetSettings|null);

        /** MessageContainer MsgUserSetSettings */
        MsgUserSetSettings?: (NetMessage.IMsgUserSetSettings|null);

        /** MessageContainer MsgMapGetEnabledBriefDataList */
        MsgMapGetEnabledBriefDataList?: (NetMessage.IMsgMapGetEnabledBriefDataList|null);

        /** MessageContainer MsgMapGetEnabledRawDataList */
        MsgMapGetEnabledRawDataList?: (NetMessage.IMsgMapGetEnabledRawDataList|null);

        /** MessageContainer MsgMapGetBriefData */
        MsgMapGetBriefData?: (NetMessage.IMsgMapGetBriefData|null);

        /** MessageContainer MsgMapGetRawData */
        MsgMapGetRawData?: (NetMessage.IMsgMapGetRawData|null);

        /** MessageContainer MsgMeGetMapDataList */
        MsgMeGetMapDataList?: (NetMessage.IMsgMeGetMapDataList|null);

        /** MessageContainer MsgMeGetMapData */
        MsgMeGetMapData?: (NetMessage.IMsgMeGetMapData|null);

        /** MessageContainer MsgMeSubmitMap */
        MsgMeSubmitMap?: (NetMessage.IMsgMeSubmitMap|null);

        /** MessageContainer MsgMeSubmitWarRule */
        MsgMeSubmitWarRule?: (NetMessage.IMsgMeSubmitWarRule|null);

        /** MessageContainer MsgMeGetSubmittedWarRuleList */
        MsgMeGetSubmittedWarRuleList?: (NetMessage.IMsgMeGetSubmittedWarRuleList|null);

        /** MessageContainer MsgChatAddMessage */
        MsgChatAddMessage?: (NetMessage.IMsgChatAddMessage|null);

        /** MessageContainer MsgChatGetAllMessages */
        MsgChatGetAllMessages?: (NetMessage.IMsgChatGetAllMessages|null);

        /** MessageContainer MsgChatUpdateReadProgress */
        MsgChatUpdateReadProgress?: (NetMessage.IMsgChatUpdateReadProgress|null);

        /** MessageContainer MsgChatGetAllReadProgressList */
        MsgChatGetAllReadProgressList?: (NetMessage.IMsgChatGetAllReadProgressList|null);

        /** MessageContainer MsgMmSetMapAvailability */
        MsgMmSetMapAvailability?: (NetMessage.IMsgMmSetMapAvailability|null);

        /** MessageContainer MsgMmSetMapEnabled */
        MsgMmSetMapEnabled?: (NetMessage.IMsgMmSetMapEnabled|null);

        /** MessageContainer MsgMmGetReviewingMaps */
        MsgMmGetReviewingMaps?: (NetMessage.IMsgMmGetReviewingMaps|null);

        /** MessageContainer MsgMmReviewMap */
        MsgMmReviewMap?: (NetMessage.IMsgMmReviewMap|null);

        /** MessageContainer MsgMmGetReviewingWarRuleList */
        MsgMmGetReviewingWarRuleList?: (NetMessage.IMsgMmGetReviewingWarRuleList|null);

        /** MessageContainer MsgMmReviewWarRule */
        MsgMmReviewWarRule?: (NetMessage.IMsgMmReviewWarRule|null);

        /** MessageContainer MsgMmSetMapTag */
        MsgMmSetMapTag?: (NetMessage.IMsgMmSetMapTag|null);

        /** MessageContainer MsgReplaySetRating */
        MsgReplaySetRating?: (NetMessage.IMsgReplaySetRating|null);

        /** MessageContainer MsgReplayGetInfoList */
        MsgReplayGetInfoList?: (NetMessage.IMsgReplayGetInfoList|null);

        /** MessageContainer MsgReplayGetData */
        MsgReplayGetData?: (NetMessage.IMsgReplayGetData|null);

        /** MessageContainer MsgMcrCreateRoom */
        MsgMcrCreateRoom?: (NetMessage.IMsgMcrCreateRoom|null);

        /** MessageContainer MsgMcrExitRoom */
        MsgMcrExitRoom?: (NetMessage.IMsgMcrExitRoom|null);

        /** MessageContainer MsgMcrJoinRoom */
        MsgMcrJoinRoom?: (NetMessage.IMsgMcrJoinRoom|null);

        /** MessageContainer MsgMcrDeleteRoomByPlayer */
        MsgMcrDeleteRoomByPlayer?: (NetMessage.IMsgMcrDeleteRoomByPlayer|null);

        /** MessageContainer MsgMcrDeleteRoomByServer */
        MsgMcrDeleteRoomByServer?: (NetMessage.IMsgMcrDeleteRoomByServer|null);

        /** MessageContainer MsgMcrSetReady */
        MsgMcrSetReady?: (NetMessage.IMsgMcrSetReady|null);

        /** MessageContainer MsgMcrDeletePlayer */
        MsgMcrDeletePlayer?: (NetMessage.IMsgMcrDeletePlayer|null);

        /** MessageContainer MsgMcrSetSelfSettings */
        MsgMcrSetSelfSettings?: (NetMessage.IMsgMcrSetSelfSettings|null);

        /** MessageContainer MsgMcrSetWarRule */
        MsgMcrSetWarRule?: (NetMessage.IMsgMcrSetWarRule|null);

        /** MessageContainer MsgMcrGetOwnerPlayerIndex */
        MsgMcrGetOwnerPlayerIndex?: (NetMessage.IMsgMcrGetOwnerPlayerIndex|null);

        /** MessageContainer MsgMcrStartWar */
        MsgMcrStartWar?: (NetMessage.IMsgMcrStartWar|null);

        /** MessageContainer MsgMcrGetJoinedRoomInfoList */
        MsgMcrGetJoinedRoomInfoList?: (NetMessage.IMsgMcrGetJoinedRoomInfoList|null);

        /** MessageContainer MsgMcrGetRoomInfo */
        MsgMcrGetRoomInfo?: (NetMessage.IMsgMcrGetRoomInfo|null);

        /** MessageContainer MsgMcrGetJoinableRoomInfoList */
        MsgMcrGetJoinableRoomInfoList?: (NetMessage.IMsgMcrGetJoinableRoomInfoList|null);

        /** MessageContainer MsgMpwCommonGetMyWarInfoList */
        MsgMpwCommonGetMyWarInfoList?: (NetMessage.IMsgMpwCommonGetMyWarInfoList|null);

        /** MessageContainer MsgMpwCommonContinueWar */
        MsgMpwCommonContinueWar?: (NetMessage.IMsgMpwCommonContinueWar|null);

        /** MessageContainer MsgMpwCommonSyncWar */
        MsgMpwCommonSyncWar?: (NetMessage.IMsgMpwCommonSyncWar|null);

        /** MessageContainer MsgMpwCommonHandleBoot */
        MsgMpwCommonHandleBoot?: (NetMessage.IMsgMpwCommonHandleBoot|null);

        /** MessageContainer MsgMpwCommonBroadcastGameStart */
        MsgMpwCommonBroadcastGameStart?: (NetMessage.IMsgMpwCommonBroadcastGameStart|null);

        /** MessageContainer MsgMpwWatchMakeRequest */
        MsgMpwWatchMakeRequest?: (NetMessage.IMsgMpwWatchMakeRequest|null);

        /** MessageContainer MsgMpwWatchHandleRequest */
        MsgMpwWatchHandleRequest?: (NetMessage.IMsgMpwWatchHandleRequest|null);

        /** MessageContainer MsgMpwWatchDeleteWatcher */
        MsgMpwWatchDeleteWatcher?: (NetMessage.IMsgMpwWatchDeleteWatcher|null);

        /** MessageContainer MsgMpwWatchGetUnwatchedWarInfos */
        MsgMpwWatchGetUnwatchedWarInfos?: (NetMessage.IMsgMpwWatchGetUnwatchedWarInfos|null);

        /** MessageContainer MsgMpwWatchGetOngoingWarInfos */
        MsgMpwWatchGetOngoingWarInfos?: (NetMessage.IMsgMpwWatchGetOngoingWarInfos|null);

        /** MessageContainer MsgMpwWatchGetRequestedWarInfos */
        MsgMpwWatchGetRequestedWarInfos?: (NetMessage.IMsgMpwWatchGetRequestedWarInfos|null);

        /** MessageContainer MsgMpwWatchGetWatchedWarInfos */
        MsgMpwWatchGetWatchedWarInfos?: (NetMessage.IMsgMpwWatchGetWatchedWarInfos|null);

        /** MessageContainer MsgMpwWatchContinueWar */
        MsgMpwWatchContinueWar?: (NetMessage.IMsgMpwWatchContinueWar|null);

        /** MessageContainer MsgMpwActionSystemBeginTurn */
        MsgMpwActionSystemBeginTurn?: (NetMessage.IMsgMpwActionSystemBeginTurn|null);

        /** MessageContainer MsgMpwActionSystemCallWarEvent */
        MsgMpwActionSystemCallWarEvent?: (NetMessage.IMsgMpwActionSystemCallWarEvent|null);

        /** MessageContainer MsgMpwActionSystemDestroyPlayerForce */
        MsgMpwActionSystemDestroyPlayerForce?: (NetMessage.IMsgMpwActionSystemDestroyPlayerForce|null);

        /** MessageContainer MsgMpwActionSystemEndWar */
        MsgMpwActionSystemEndWar?: (NetMessage.IMsgMpwActionSystemEndWar|null);

        /** MessageContainer MsgMpwActionPlayerEndTurn */
        MsgMpwActionPlayerEndTurn?: (NetMessage.IMsgMpwActionPlayerEndTurn|null);

        /** MessageContainer MsgMpwActionPlayerSurrender */
        MsgMpwActionPlayerSurrender?: (NetMessage.IMsgMpwActionPlayerSurrender|null);

        /** MessageContainer MsgMpwActionPlayerProduceUnit */
        MsgMpwActionPlayerProduceUnit?: (NetMessage.IMsgMpwActionPlayerProduceUnit|null);

        /** MessageContainer MsgMpwActionPlayerDeleteUnit */
        MsgMpwActionPlayerDeleteUnit?: (NetMessage.IMsgMpwActionPlayerDeleteUnit|null);

        /** MessageContainer MsgMpwActionPlayerVoteForDraw */
        MsgMpwActionPlayerVoteForDraw?: (NetMessage.IMsgMpwActionPlayerVoteForDraw|null);

        /** MessageContainer MsgMpwActionUnitWait */
        MsgMpwActionUnitWait?: (NetMessage.IMsgMpwActionUnitWait|null);

        /** MessageContainer MsgMpwActionUnitBeLoaded */
        MsgMpwActionUnitBeLoaded?: (NetMessage.IMsgMpwActionUnitBeLoaded|null);

        /** MessageContainer MsgMpwActionUnitCaptureTile */
        MsgMpwActionUnitCaptureTile?: (NetMessage.IMsgMpwActionUnitCaptureTile|null);

        /** MessageContainer MsgMpwActionUnitAttackTile */
        MsgMpwActionUnitAttackTile?: (NetMessage.IMsgMpwActionUnitAttackTile|null);

        /** MessageContainer MsgMpwActionUnitAttackUnit */
        MsgMpwActionUnitAttackUnit?: (NetMessage.IMsgMpwActionUnitAttackUnit|null);

        /** MessageContainer MsgMpwActionUnitDropUnit */
        MsgMpwActionUnitDropUnit?: (NetMessage.IMsgMpwActionUnitDropUnit|null);

        /** MessageContainer MsgMpwActionUnitBuildTile */
        MsgMpwActionUnitBuildTile?: (NetMessage.IMsgMpwActionUnitBuildTile|null);

        /** MessageContainer MsgMpwActionUnitDive */
        MsgMpwActionUnitDive?: (NetMessage.IMsgMpwActionUnitDive|null);

        /** MessageContainer MsgMpwActionUnitSurface */
        MsgMpwActionUnitSurface?: (NetMessage.IMsgMpwActionUnitSurface|null);

        /** MessageContainer MsgMpwActionUnitJoinUnit */
        MsgMpwActionUnitJoinUnit?: (NetMessage.IMsgMpwActionUnitJoinUnit|null);

        /** MessageContainer MsgMpwActionUnitLaunchFlare */
        MsgMpwActionUnitLaunchFlare?: (NetMessage.IMsgMpwActionUnitLaunchFlare|null);

        /** MessageContainer MsgMpwActionUnitLaunchSilo */
        MsgMpwActionUnitLaunchSilo?: (NetMessage.IMsgMpwActionUnitLaunchSilo|null);

        /** MessageContainer MsgMpwActionUnitProduceUnit */
        MsgMpwActionUnitProduceUnit?: (NetMessage.IMsgMpwActionUnitProduceUnit|null);

        /** MessageContainer MsgMpwActionUnitSupplyUnit */
        MsgMpwActionUnitSupplyUnit?: (NetMessage.IMsgMpwActionUnitSupplyUnit|null);

        /** MessageContainer MsgMpwActionUnitLoadCo */
        MsgMpwActionUnitLoadCo?: (NetMessage.IMsgMpwActionUnitLoadCo|null);

        /** MessageContainer MsgMpwActionUnitUseCoSkill */
        MsgMpwActionUnitUseCoSkill?: (NetMessage.IMsgMpwActionUnitUseCoSkill|null);

        /** MessageContainer MsgScrCreateWar */
        MsgScrCreateWar?: (NetMessage.IMsgScrCreateWar|null);

        /** MessageContainer MsgScrGetSaveSlotInfoList */
        MsgScrGetSaveSlotInfoList?: (NetMessage.IMsgScrGetSaveSlotInfoList|null);

        /** MessageContainer MsgScrContinueWar */
        MsgScrContinueWar?: (NetMessage.IMsgScrContinueWar|null);

        /** MessageContainer MsgScrSaveWar */
        MsgScrSaveWar?: (NetMessage.IMsgScrSaveWar|null);

        /** MessageContainer MsgScrCreateCustomWar */
        MsgScrCreateCustomWar?: (NetMessage.IMsgScrCreateCustomWar|null);

        /** MessageContainer MsgScrDeleteWar */
        MsgScrDeleteWar?: (NetMessage.IMsgScrDeleteWar|null);

        /** MessageContainer MsgMrrSetMaxConcurrentCount */
        MsgMrrSetMaxConcurrentCount?: (NetMessage.IMsgMrrSetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetMaxConcurrentCount */
        MsgMrrGetMaxConcurrentCount?: (NetMessage.IMsgMrrGetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetMyRoomPublicInfoList */
        MsgMrrGetMyRoomPublicInfoList?: (NetMessage.IMsgMrrGetMyRoomPublicInfoList|null);

        /** MessageContainer MsgMrrGetRoomPublicInfo */
        MsgMrrGetRoomPublicInfo?: (NetMessage.IMsgMrrGetRoomPublicInfo|null);

        /** MessageContainer MsgMrrDeleteRoom */
        MsgMrrDeleteRoom?: (NetMessage.IMsgMrrDeleteRoom|null);

        /** MessageContainer MsgMrrSetBannedCoIdList */
        MsgMrrSetBannedCoIdList?: (NetMessage.IMsgMrrSetBannedCoIdList|null);

        /** MessageContainer MsgMrrSetSelfSettings */
        MsgMrrSetSelfSettings?: (NetMessage.IMsgMrrSetSelfSettings|null);

        /** MessageContainer MsgBroadcastGetMessageList */
        MsgBroadcastGetMessageList?: (NetMessage.IMsgBroadcastGetMessageList|null);

        /** MessageContainer MsgBroadcastAddMessage */
        MsgBroadcastAddMessage?: (NetMessage.IMsgBroadcastAddMessage|null);

        /** MessageContainer MsgBroadcastDeleteMessage */
        MsgBroadcastDeleteMessage?: (NetMessage.IMsgBroadcastDeleteMessage|null);

        /** MessageContainer MsgBroadcastDoBroadcast */
        MsgBroadcastDoBroadcast?: (NetMessage.IMsgBroadcastDoBroadcast|null);

        /** MessageContainer MsgChangeLogGetMessageList */
        MsgChangeLogGetMessageList?: (NetMessage.IMsgChangeLogGetMessageList|null);

        /** MessageContainer MsgChangeLogAddMessage */
        MsgChangeLogAddMessage?: (NetMessage.IMsgChangeLogAddMessage|null);

        /** MessageContainer MsgChangeLogModifyMessage */
        MsgChangeLogModifyMessage?: (NetMessage.IMsgChangeLogModifyMessage|null);

        /** MessageContainer MsgMfrCreateRoom */
        MsgMfrCreateRoom?: (NetMessage.IMsgMfrCreateRoom|null);

        /** MessageContainer MsgMfrExitRoom */
        MsgMfrExitRoom?: (NetMessage.IMsgMfrExitRoom|null);

        /** MessageContainer MsgMfrJoinRoom */
        MsgMfrJoinRoom?: (NetMessage.IMsgMfrJoinRoom|null);

        /** MessageContainer MsgMfrDeleteRoom */
        MsgMfrDeleteRoom?: (NetMessage.IMsgMfrDeleteRoom|null);

        /** MessageContainer MsgMfrSetReady */
        MsgMfrSetReady?: (NetMessage.IMsgMfrSetReady|null);

        /** MessageContainer MsgMfrDeletePlayer */
        MsgMfrDeletePlayer?: (NetMessage.IMsgMfrDeletePlayer|null);

        /** MessageContainer MsgMfrSetSelfSettings */
        MsgMfrSetSelfSettings?: (NetMessage.IMsgMfrSetSelfSettings|null);

        /** MessageContainer MsgMfrStartWar */
        MsgMfrStartWar?: (NetMessage.IMsgMfrStartWar|null);

        /** MessageContainer MsgMfrGetJoinedRoomInfoList */
        MsgMfrGetJoinedRoomInfoList?: (NetMessage.IMsgMfrGetJoinedRoomInfoList|null);

        /** MessageContainer MsgMfrGetRoomInfo */
        MsgMfrGetRoomInfo?: (NetMessage.IMsgMfrGetRoomInfo|null);

        /** MessageContainer MsgMfrGetJoinableRoomInfoList */
        MsgMfrGetJoinableRoomInfoList?: (NetMessage.IMsgMfrGetJoinableRoomInfoList|null);
    }

    /** Represents a MessageContainer. */
    class MessageContainer implements IMessageContainer {

        /**
         * Constructs a new MessageContainer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMessageContainer);

        /** MessageContainer MsgCommonHeartbeat. */
        public MsgCommonHeartbeat?: (NetMessage.IMsgCommonHeartbeat|null);

        /** MessageContainer MsgCommonError. */
        public MsgCommonError?: (NetMessage.IMsgCommonError|null);

        /** MessageContainer MsgCommonServerDisconnect. */
        public MsgCommonServerDisconnect?: (NetMessage.IMsgCommonServerDisconnect|null);

        /** MessageContainer MsgCommonLatestConfigVersion. */
        public MsgCommonLatestConfigVersion?: (NetMessage.IMsgCommonLatestConfigVersion|null);

        /** MessageContainer MsgCommonGetServerStatus. */
        public MsgCommonGetServerStatus?: (NetMessage.IMsgCommonGetServerStatus|null);

        /** MessageContainer MsgCommonGetRankList. */
        public MsgCommonGetRankList?: (NetMessage.IMsgCommonGetRankList|null);

        /** MessageContainer MsgUserRegister. */
        public MsgUserRegister?: (NetMessage.IMsgUserRegister|null);

        /** MessageContainer MsgUserLogin. */
        public MsgUserLogin?: (NetMessage.IMsgUserLogin|null);

        /** MessageContainer MsgUserLogout. */
        public MsgUserLogout?: (NetMessage.IMsgUserLogout|null);

        /** MessageContainer MsgUserGetPublicInfo. */
        public MsgUserGetPublicInfo?: (NetMessage.IMsgUserGetPublicInfo|null);

        /** MessageContainer MsgUserGetOnlineUsers. */
        public MsgUserGetOnlineUsers?: (NetMessage.IMsgUserGetOnlineUsers|null);

        /** MessageContainer MsgUserSetNickname. */
        public MsgUserSetNickname?: (NetMessage.IMsgUserSetNickname|null);

        /** MessageContainer MsgUserSetDiscordId. */
        public MsgUserSetDiscordId?: (NetMessage.IMsgUserSetDiscordId|null);

        /** MessageContainer MsgUserSetPrivilege. */
        public MsgUserSetPrivilege?: (NetMessage.IMsgUserSetPrivilege|null);

        /** MessageContainer MsgUserSetPassword. */
        public MsgUserSetPassword?: (NetMessage.IMsgUserSetPassword|null);

        /** MessageContainer MsgUserGetSettings. */
        public MsgUserGetSettings?: (NetMessage.IMsgUserGetSettings|null);

        /** MessageContainer MsgUserSetSettings. */
        public MsgUserSetSettings?: (NetMessage.IMsgUserSetSettings|null);

        /** MessageContainer MsgMapGetEnabledBriefDataList. */
        public MsgMapGetEnabledBriefDataList?: (NetMessage.IMsgMapGetEnabledBriefDataList|null);

        /** MessageContainer MsgMapGetEnabledRawDataList. */
        public MsgMapGetEnabledRawDataList?: (NetMessage.IMsgMapGetEnabledRawDataList|null);

        /** MessageContainer MsgMapGetBriefData. */
        public MsgMapGetBriefData?: (NetMessage.IMsgMapGetBriefData|null);

        /** MessageContainer MsgMapGetRawData. */
        public MsgMapGetRawData?: (NetMessage.IMsgMapGetRawData|null);

        /** MessageContainer MsgMeGetMapDataList. */
        public MsgMeGetMapDataList?: (NetMessage.IMsgMeGetMapDataList|null);

        /** MessageContainer MsgMeGetMapData. */
        public MsgMeGetMapData?: (NetMessage.IMsgMeGetMapData|null);

        /** MessageContainer MsgMeSubmitMap. */
        public MsgMeSubmitMap?: (NetMessage.IMsgMeSubmitMap|null);

        /** MessageContainer MsgMeSubmitWarRule. */
        public MsgMeSubmitWarRule?: (NetMessage.IMsgMeSubmitWarRule|null);

        /** MessageContainer MsgMeGetSubmittedWarRuleList. */
        public MsgMeGetSubmittedWarRuleList?: (NetMessage.IMsgMeGetSubmittedWarRuleList|null);

        /** MessageContainer MsgChatAddMessage. */
        public MsgChatAddMessage?: (NetMessage.IMsgChatAddMessage|null);

        /** MessageContainer MsgChatGetAllMessages. */
        public MsgChatGetAllMessages?: (NetMessage.IMsgChatGetAllMessages|null);

        /** MessageContainer MsgChatUpdateReadProgress. */
        public MsgChatUpdateReadProgress?: (NetMessage.IMsgChatUpdateReadProgress|null);

        /** MessageContainer MsgChatGetAllReadProgressList. */
        public MsgChatGetAllReadProgressList?: (NetMessage.IMsgChatGetAllReadProgressList|null);

        /** MessageContainer MsgMmSetMapAvailability. */
        public MsgMmSetMapAvailability?: (NetMessage.IMsgMmSetMapAvailability|null);

        /** MessageContainer MsgMmSetMapEnabled. */
        public MsgMmSetMapEnabled?: (NetMessage.IMsgMmSetMapEnabled|null);

        /** MessageContainer MsgMmGetReviewingMaps. */
        public MsgMmGetReviewingMaps?: (NetMessage.IMsgMmGetReviewingMaps|null);

        /** MessageContainer MsgMmReviewMap. */
        public MsgMmReviewMap?: (NetMessage.IMsgMmReviewMap|null);

        /** MessageContainer MsgMmGetReviewingWarRuleList. */
        public MsgMmGetReviewingWarRuleList?: (NetMessage.IMsgMmGetReviewingWarRuleList|null);

        /** MessageContainer MsgMmReviewWarRule. */
        public MsgMmReviewWarRule?: (NetMessage.IMsgMmReviewWarRule|null);

        /** MessageContainer MsgMmSetMapTag. */
        public MsgMmSetMapTag?: (NetMessage.IMsgMmSetMapTag|null);

        /** MessageContainer MsgReplaySetRating. */
        public MsgReplaySetRating?: (NetMessage.IMsgReplaySetRating|null);

        /** MessageContainer MsgReplayGetInfoList. */
        public MsgReplayGetInfoList?: (NetMessage.IMsgReplayGetInfoList|null);

        /** MessageContainer MsgReplayGetData. */
        public MsgReplayGetData?: (NetMessage.IMsgReplayGetData|null);

        /** MessageContainer MsgMcrCreateRoom. */
        public MsgMcrCreateRoom?: (NetMessage.IMsgMcrCreateRoom|null);

        /** MessageContainer MsgMcrExitRoom. */
        public MsgMcrExitRoom?: (NetMessage.IMsgMcrExitRoom|null);

        /** MessageContainer MsgMcrJoinRoom. */
        public MsgMcrJoinRoom?: (NetMessage.IMsgMcrJoinRoom|null);

        /** MessageContainer MsgMcrDeleteRoomByPlayer. */
        public MsgMcrDeleteRoomByPlayer?: (NetMessage.IMsgMcrDeleteRoomByPlayer|null);

        /** MessageContainer MsgMcrDeleteRoomByServer. */
        public MsgMcrDeleteRoomByServer?: (NetMessage.IMsgMcrDeleteRoomByServer|null);

        /** MessageContainer MsgMcrSetReady. */
        public MsgMcrSetReady?: (NetMessage.IMsgMcrSetReady|null);

        /** MessageContainer MsgMcrDeletePlayer. */
        public MsgMcrDeletePlayer?: (NetMessage.IMsgMcrDeletePlayer|null);

        /** MessageContainer MsgMcrSetSelfSettings. */
        public MsgMcrSetSelfSettings?: (NetMessage.IMsgMcrSetSelfSettings|null);

        /** MessageContainer MsgMcrSetWarRule. */
        public MsgMcrSetWarRule?: (NetMessage.IMsgMcrSetWarRule|null);

        /** MessageContainer MsgMcrGetOwnerPlayerIndex. */
        public MsgMcrGetOwnerPlayerIndex?: (NetMessage.IMsgMcrGetOwnerPlayerIndex|null);

        /** MessageContainer MsgMcrStartWar. */
        public MsgMcrStartWar?: (NetMessage.IMsgMcrStartWar|null);

        /** MessageContainer MsgMcrGetJoinedRoomInfoList. */
        public MsgMcrGetJoinedRoomInfoList?: (NetMessage.IMsgMcrGetJoinedRoomInfoList|null);

        /** MessageContainer MsgMcrGetRoomInfo. */
        public MsgMcrGetRoomInfo?: (NetMessage.IMsgMcrGetRoomInfo|null);

        /** MessageContainer MsgMcrGetJoinableRoomInfoList. */
        public MsgMcrGetJoinableRoomInfoList?: (NetMessage.IMsgMcrGetJoinableRoomInfoList|null);

        /** MessageContainer MsgMpwCommonGetMyWarInfoList. */
        public MsgMpwCommonGetMyWarInfoList?: (NetMessage.IMsgMpwCommonGetMyWarInfoList|null);

        /** MessageContainer MsgMpwCommonContinueWar. */
        public MsgMpwCommonContinueWar?: (NetMessage.IMsgMpwCommonContinueWar|null);

        /** MessageContainer MsgMpwCommonSyncWar. */
        public MsgMpwCommonSyncWar?: (NetMessage.IMsgMpwCommonSyncWar|null);

        /** MessageContainer MsgMpwCommonHandleBoot. */
        public MsgMpwCommonHandleBoot?: (NetMessage.IMsgMpwCommonHandleBoot|null);

        /** MessageContainer MsgMpwCommonBroadcastGameStart. */
        public MsgMpwCommonBroadcastGameStart?: (NetMessage.IMsgMpwCommonBroadcastGameStart|null);

        /** MessageContainer MsgMpwWatchMakeRequest. */
        public MsgMpwWatchMakeRequest?: (NetMessage.IMsgMpwWatchMakeRequest|null);

        /** MessageContainer MsgMpwWatchHandleRequest. */
        public MsgMpwWatchHandleRequest?: (NetMessage.IMsgMpwWatchHandleRequest|null);

        /** MessageContainer MsgMpwWatchDeleteWatcher. */
        public MsgMpwWatchDeleteWatcher?: (NetMessage.IMsgMpwWatchDeleteWatcher|null);

        /** MessageContainer MsgMpwWatchGetUnwatchedWarInfos. */
        public MsgMpwWatchGetUnwatchedWarInfos?: (NetMessage.IMsgMpwWatchGetUnwatchedWarInfos|null);

        /** MessageContainer MsgMpwWatchGetOngoingWarInfos. */
        public MsgMpwWatchGetOngoingWarInfos?: (NetMessage.IMsgMpwWatchGetOngoingWarInfos|null);

        /** MessageContainer MsgMpwWatchGetRequestedWarInfos. */
        public MsgMpwWatchGetRequestedWarInfos?: (NetMessage.IMsgMpwWatchGetRequestedWarInfos|null);

        /** MessageContainer MsgMpwWatchGetWatchedWarInfos. */
        public MsgMpwWatchGetWatchedWarInfos?: (NetMessage.IMsgMpwWatchGetWatchedWarInfos|null);

        /** MessageContainer MsgMpwWatchContinueWar. */
        public MsgMpwWatchContinueWar?: (NetMessage.IMsgMpwWatchContinueWar|null);

        /** MessageContainer MsgMpwActionSystemBeginTurn. */
        public MsgMpwActionSystemBeginTurn?: (NetMessage.IMsgMpwActionSystemBeginTurn|null);

        /** MessageContainer MsgMpwActionSystemCallWarEvent. */
        public MsgMpwActionSystemCallWarEvent?: (NetMessage.IMsgMpwActionSystemCallWarEvent|null);

        /** MessageContainer MsgMpwActionSystemDestroyPlayerForce. */
        public MsgMpwActionSystemDestroyPlayerForce?: (NetMessage.IMsgMpwActionSystemDestroyPlayerForce|null);

        /** MessageContainer MsgMpwActionSystemEndWar. */
        public MsgMpwActionSystemEndWar?: (NetMessage.IMsgMpwActionSystemEndWar|null);

        /** MessageContainer MsgMpwActionPlayerEndTurn. */
        public MsgMpwActionPlayerEndTurn?: (NetMessage.IMsgMpwActionPlayerEndTurn|null);

        /** MessageContainer MsgMpwActionPlayerSurrender. */
        public MsgMpwActionPlayerSurrender?: (NetMessage.IMsgMpwActionPlayerSurrender|null);

        /** MessageContainer MsgMpwActionPlayerProduceUnit. */
        public MsgMpwActionPlayerProduceUnit?: (NetMessage.IMsgMpwActionPlayerProduceUnit|null);

        /** MessageContainer MsgMpwActionPlayerDeleteUnit. */
        public MsgMpwActionPlayerDeleteUnit?: (NetMessage.IMsgMpwActionPlayerDeleteUnit|null);

        /** MessageContainer MsgMpwActionPlayerVoteForDraw. */
        public MsgMpwActionPlayerVoteForDraw?: (NetMessage.IMsgMpwActionPlayerVoteForDraw|null);

        /** MessageContainer MsgMpwActionUnitWait. */
        public MsgMpwActionUnitWait?: (NetMessage.IMsgMpwActionUnitWait|null);

        /** MessageContainer MsgMpwActionUnitBeLoaded. */
        public MsgMpwActionUnitBeLoaded?: (NetMessage.IMsgMpwActionUnitBeLoaded|null);

        /** MessageContainer MsgMpwActionUnitCaptureTile. */
        public MsgMpwActionUnitCaptureTile?: (NetMessage.IMsgMpwActionUnitCaptureTile|null);

        /** MessageContainer MsgMpwActionUnitAttackTile. */
        public MsgMpwActionUnitAttackTile?: (NetMessage.IMsgMpwActionUnitAttackTile|null);

        /** MessageContainer MsgMpwActionUnitAttackUnit. */
        public MsgMpwActionUnitAttackUnit?: (NetMessage.IMsgMpwActionUnitAttackUnit|null);

        /** MessageContainer MsgMpwActionUnitDropUnit. */
        public MsgMpwActionUnitDropUnit?: (NetMessage.IMsgMpwActionUnitDropUnit|null);

        /** MessageContainer MsgMpwActionUnitBuildTile. */
        public MsgMpwActionUnitBuildTile?: (NetMessage.IMsgMpwActionUnitBuildTile|null);

        /** MessageContainer MsgMpwActionUnitDive. */
        public MsgMpwActionUnitDive?: (NetMessage.IMsgMpwActionUnitDive|null);

        /** MessageContainer MsgMpwActionUnitSurface. */
        public MsgMpwActionUnitSurface?: (NetMessage.IMsgMpwActionUnitSurface|null);

        /** MessageContainer MsgMpwActionUnitJoinUnit. */
        public MsgMpwActionUnitJoinUnit?: (NetMessage.IMsgMpwActionUnitJoinUnit|null);

        /** MessageContainer MsgMpwActionUnitLaunchFlare. */
        public MsgMpwActionUnitLaunchFlare?: (NetMessage.IMsgMpwActionUnitLaunchFlare|null);

        /** MessageContainer MsgMpwActionUnitLaunchSilo. */
        public MsgMpwActionUnitLaunchSilo?: (NetMessage.IMsgMpwActionUnitLaunchSilo|null);

        /** MessageContainer MsgMpwActionUnitProduceUnit. */
        public MsgMpwActionUnitProduceUnit?: (NetMessage.IMsgMpwActionUnitProduceUnit|null);

        /** MessageContainer MsgMpwActionUnitSupplyUnit. */
        public MsgMpwActionUnitSupplyUnit?: (NetMessage.IMsgMpwActionUnitSupplyUnit|null);

        /** MessageContainer MsgMpwActionUnitLoadCo. */
        public MsgMpwActionUnitLoadCo?: (NetMessage.IMsgMpwActionUnitLoadCo|null);

        /** MessageContainer MsgMpwActionUnitUseCoSkill. */
        public MsgMpwActionUnitUseCoSkill?: (NetMessage.IMsgMpwActionUnitUseCoSkill|null);

        /** MessageContainer MsgScrCreateWar. */
        public MsgScrCreateWar?: (NetMessage.IMsgScrCreateWar|null);

        /** MessageContainer MsgScrGetSaveSlotInfoList. */
        public MsgScrGetSaveSlotInfoList?: (NetMessage.IMsgScrGetSaveSlotInfoList|null);

        /** MessageContainer MsgScrContinueWar. */
        public MsgScrContinueWar?: (NetMessage.IMsgScrContinueWar|null);

        /** MessageContainer MsgScrSaveWar. */
        public MsgScrSaveWar?: (NetMessage.IMsgScrSaveWar|null);

        /** MessageContainer MsgScrCreateCustomWar. */
        public MsgScrCreateCustomWar?: (NetMessage.IMsgScrCreateCustomWar|null);

        /** MessageContainer MsgScrDeleteWar. */
        public MsgScrDeleteWar?: (NetMessage.IMsgScrDeleteWar|null);

        /** MessageContainer MsgMrrSetMaxConcurrentCount. */
        public MsgMrrSetMaxConcurrentCount?: (NetMessage.IMsgMrrSetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetMaxConcurrentCount. */
        public MsgMrrGetMaxConcurrentCount?: (NetMessage.IMsgMrrGetMaxConcurrentCount|null);

        /** MessageContainer MsgMrrGetMyRoomPublicInfoList. */
        public MsgMrrGetMyRoomPublicInfoList?: (NetMessage.IMsgMrrGetMyRoomPublicInfoList|null);

        /** MessageContainer MsgMrrGetRoomPublicInfo. */
        public MsgMrrGetRoomPublicInfo?: (NetMessage.IMsgMrrGetRoomPublicInfo|null);

        /** MessageContainer MsgMrrDeleteRoom. */
        public MsgMrrDeleteRoom?: (NetMessage.IMsgMrrDeleteRoom|null);

        /** MessageContainer MsgMrrSetBannedCoIdList. */
        public MsgMrrSetBannedCoIdList?: (NetMessage.IMsgMrrSetBannedCoIdList|null);

        /** MessageContainer MsgMrrSetSelfSettings. */
        public MsgMrrSetSelfSettings?: (NetMessage.IMsgMrrSetSelfSettings|null);

        /** MessageContainer MsgBroadcastGetMessageList. */
        public MsgBroadcastGetMessageList?: (NetMessage.IMsgBroadcastGetMessageList|null);

        /** MessageContainer MsgBroadcastAddMessage. */
        public MsgBroadcastAddMessage?: (NetMessage.IMsgBroadcastAddMessage|null);

        /** MessageContainer MsgBroadcastDeleteMessage. */
        public MsgBroadcastDeleteMessage?: (NetMessage.IMsgBroadcastDeleteMessage|null);

        /** MessageContainer MsgBroadcastDoBroadcast. */
        public MsgBroadcastDoBroadcast?: (NetMessage.IMsgBroadcastDoBroadcast|null);

        /** MessageContainer MsgChangeLogGetMessageList. */
        public MsgChangeLogGetMessageList?: (NetMessage.IMsgChangeLogGetMessageList|null);

        /** MessageContainer MsgChangeLogAddMessage. */
        public MsgChangeLogAddMessage?: (NetMessage.IMsgChangeLogAddMessage|null);

        /** MessageContainer MsgChangeLogModifyMessage. */
        public MsgChangeLogModifyMessage?: (NetMessage.IMsgChangeLogModifyMessage|null);

        /** MessageContainer MsgMfrCreateRoom. */
        public MsgMfrCreateRoom?: (NetMessage.IMsgMfrCreateRoom|null);

        /** MessageContainer MsgMfrExitRoom. */
        public MsgMfrExitRoom?: (NetMessage.IMsgMfrExitRoom|null);

        /** MessageContainer MsgMfrJoinRoom. */
        public MsgMfrJoinRoom?: (NetMessage.IMsgMfrJoinRoom|null);

        /** MessageContainer MsgMfrDeleteRoom. */
        public MsgMfrDeleteRoom?: (NetMessage.IMsgMfrDeleteRoom|null);

        /** MessageContainer MsgMfrSetReady. */
        public MsgMfrSetReady?: (NetMessage.IMsgMfrSetReady|null);

        /** MessageContainer MsgMfrDeletePlayer. */
        public MsgMfrDeletePlayer?: (NetMessage.IMsgMfrDeletePlayer|null);

        /** MessageContainer MsgMfrSetSelfSettings. */
        public MsgMfrSetSelfSettings?: (NetMessage.IMsgMfrSetSelfSettings|null);

        /** MessageContainer MsgMfrStartWar. */
        public MsgMfrStartWar?: (NetMessage.IMsgMfrStartWar|null);

        /** MessageContainer MsgMfrGetJoinedRoomInfoList. */
        public MsgMfrGetJoinedRoomInfoList?: (NetMessage.IMsgMfrGetJoinedRoomInfoList|null);

        /** MessageContainer MsgMfrGetRoomInfo. */
        public MsgMfrGetRoomInfo?: (NetMessage.IMsgMfrGetRoomInfo|null);

        /** MessageContainer MsgMfrGetJoinableRoomInfoList. */
        public MsgMfrGetJoinableRoomInfoList?: (NetMessage.IMsgMfrGetJoinableRoomInfoList|null);

        /**
         * Creates a new MessageContainer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MessageContainer instance
         */
        public static create(properties?: NetMessage.IMessageContainer): NetMessage.MessageContainer;

        /**
         * Encodes the specified MessageContainer message. Does not implicitly {@link NetMessage.MessageContainer.verify|verify} messages.
         * @param message MessageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MessageContainer message, length delimited. Does not implicitly {@link NetMessage.MessageContainer.verify|verify} messages.
         * @param message MessageContainer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMessageContainer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MessageContainer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MessageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MessageContainer;

        /**
         * Decodes a MessageContainer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MessageContainer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MessageContainer;

        /**
         * Verifies a MessageContainer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MessageContainer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MessageContainer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MessageContainer;

        /**
         * Creates a plain object from a MessageContainer message. Also converts values to other types if specified.
         * @param message MessageContainer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MessageContainer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MessageContainer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MsgCommonHeartbeat. */
    interface IMsgCommonHeartbeat {

        /** MsgCommonHeartbeat c */
        c?: (NetMessage.MsgCommonHeartbeat.IC|null);

        /** MsgCommonHeartbeat s */
        s?: (NetMessage.MsgCommonHeartbeat.IS|null);
    }

    /** Represents a MsgCommonHeartbeat. */
    class MsgCommonHeartbeat implements IMsgCommonHeartbeat {

        /**
         * Constructs a new MsgCommonHeartbeat.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonHeartbeat);

        /** MsgCommonHeartbeat c. */
        public c?: (NetMessage.MsgCommonHeartbeat.IC|null);

        /** MsgCommonHeartbeat s. */
        public s?: (NetMessage.MsgCommonHeartbeat.IS|null);

        /**
         * Creates a new MsgCommonHeartbeat instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonHeartbeat instance
         */
        public static create(properties?: NetMessage.IMsgCommonHeartbeat): NetMessage.MsgCommonHeartbeat;

        /**
         * Encodes the specified MsgCommonHeartbeat message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.verify|verify} messages.
         * @param message MsgCommonHeartbeat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonHeartbeat message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.verify|verify} messages.
         * @param message MsgCommonHeartbeat message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonHeartbeat, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonHeartbeat message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat;

        /**
         * Decodes a MsgCommonHeartbeat message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonHeartbeat
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat;

        /**
         * Verifies a MsgCommonHeartbeat message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonHeartbeat message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonHeartbeat
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat;

        /**
         * Creates a plain object from a MsgCommonHeartbeat message. Also converts values to other types if specified.
         * @param message MsgCommonHeartbeat
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonHeartbeat, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonHeartbeat to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonHeartbeat {

        /** Properties of a C. */
        interface IC {

            /** C counter */
            counter?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonHeartbeat.IC);

            /** C counter. */
            public counter: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonHeartbeat.IC): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonHeartbeat.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonHeartbeat.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S counter */
            counter?: (number|null);

            /** S timestamp */
            timestamp?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonHeartbeat.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S counter. */
            public counter: number;

            /** S timestamp. */
            public timestamp: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonHeartbeat.IS): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonHeartbeat.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonHeartbeat.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonHeartbeat.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonHeartbeat.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonError. */
    interface IMsgCommonError {

        /** MsgCommonError s */
        s?: (NetMessage.MsgCommonError.IS|null);
    }

    /** Represents a MsgCommonError. */
    class MsgCommonError implements IMsgCommonError {

        /**
         * Constructs a new MsgCommonError.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonError);

        /** MsgCommonError s. */
        public s?: (NetMessage.MsgCommonError.IS|null);

        /**
         * Creates a new MsgCommonError instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonError instance
         */
        public static create(properties?: NetMessage.IMsgCommonError): NetMessage.MsgCommonError;

        /**
         * Encodes the specified MsgCommonError message. Does not implicitly {@link NetMessage.MsgCommonError.verify|verify} messages.
         * @param message MsgCommonError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonError message, length delimited. Does not implicitly {@link NetMessage.MsgCommonError.verify|verify} messages.
         * @param message MsgCommonError message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonError, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonError message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonError;

        /**
         * Decodes a MsgCommonError message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonError
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonError;

        /**
         * Verifies a MsgCommonError message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonError message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonError
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonError;

        /**
         * Creates a plain object from a MsgCommonError message. Also converts values to other types if specified.
         * @param message MsgCommonError
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonError, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonError to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonError {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonError.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonError.IS): NetMessage.MsgCommonError.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonError.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonError.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonError.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonError.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonError.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonError.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonError.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonServerDisconnect. */
    interface IMsgCommonServerDisconnect {

        /** MsgCommonServerDisconnect s */
        s?: (NetMessage.MsgCommonServerDisconnect.IS|null);
    }

    /** Represents a MsgCommonServerDisconnect. */
    class MsgCommonServerDisconnect implements IMsgCommonServerDisconnect {

        /**
         * Constructs a new MsgCommonServerDisconnect.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonServerDisconnect);

        /** MsgCommonServerDisconnect s. */
        public s?: (NetMessage.MsgCommonServerDisconnect.IS|null);

        /**
         * Creates a new MsgCommonServerDisconnect instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonServerDisconnect instance
         */
        public static create(properties?: NetMessage.IMsgCommonServerDisconnect): NetMessage.MsgCommonServerDisconnect;

        /**
         * Encodes the specified MsgCommonServerDisconnect message. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
         * @param message MsgCommonServerDisconnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonServerDisconnect message, length delimited. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.verify|verify} messages.
         * @param message MsgCommonServerDisconnect message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonServerDisconnect, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonServerDisconnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonServerDisconnect;

        /**
         * Decodes a MsgCommonServerDisconnect message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonServerDisconnect
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonServerDisconnect;

        /**
         * Verifies a MsgCommonServerDisconnect message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonServerDisconnect message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonServerDisconnect
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonServerDisconnect;

        /**
         * Creates a plain object from a MsgCommonServerDisconnect message. Also converts values to other types if specified.
         * @param message MsgCommonServerDisconnect
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonServerDisconnect, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonServerDisconnect to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonServerDisconnect {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonServerDisconnect.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonServerDisconnect.IS): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonServerDisconnect.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonServerDisconnect.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonServerDisconnect.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonServerDisconnect.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonLatestConfigVersion. */
    interface IMsgCommonLatestConfigVersion {

        /** MsgCommonLatestConfigVersion s */
        s?: (NetMessage.MsgCommonLatestConfigVersion.IS|null);
    }

    /** Represents a MsgCommonLatestConfigVersion. */
    class MsgCommonLatestConfigVersion implements IMsgCommonLatestConfigVersion {

        /**
         * Constructs a new MsgCommonLatestConfigVersion.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonLatestConfigVersion);

        /** MsgCommonLatestConfigVersion s. */
        public s?: (NetMessage.MsgCommonLatestConfigVersion.IS|null);

        /**
         * Creates a new MsgCommonLatestConfigVersion instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonLatestConfigVersion instance
         */
        public static create(properties?: NetMessage.IMsgCommonLatestConfigVersion): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Encodes the specified MsgCommonLatestConfigVersion message. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
         * @param message MsgCommonLatestConfigVersion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonLatestConfigVersion message, length delimited. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.verify|verify} messages.
         * @param message MsgCommonLatestConfigVersion message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonLatestConfigVersion, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonLatestConfigVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Decodes a MsgCommonLatestConfigVersion message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonLatestConfigVersion
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Verifies a MsgCommonLatestConfigVersion message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonLatestConfigVersion message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonLatestConfigVersion
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonLatestConfigVersion;

        /**
         * Creates a plain object from a MsgCommonLatestConfigVersion message. Also converts values to other types if specified.
         * @param message MsgCommonLatestConfigVersion
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonLatestConfigVersion, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonLatestConfigVersion to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonLatestConfigVersion {

        /** Properties of a S. */
        interface IS {

            /** S version */
            version?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonLatestConfigVersion.IS);

            /** S version. */
            public version: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonLatestConfigVersion.IS): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonLatestConfigVersion.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonLatestConfigVersion.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonLatestConfigVersion.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonLatestConfigVersion.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonGetServerStatus. */
    interface IMsgCommonGetServerStatus {

        /** MsgCommonGetServerStatus c */
        c?: (NetMessage.MsgCommonGetServerStatus.IC|null);

        /** MsgCommonGetServerStatus s */
        s?: (NetMessage.MsgCommonGetServerStatus.IS|null);
    }

    /** Represents a MsgCommonGetServerStatus. */
    class MsgCommonGetServerStatus implements IMsgCommonGetServerStatus {

        /**
         * Constructs a new MsgCommonGetServerStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonGetServerStatus);

        /** MsgCommonGetServerStatus c. */
        public c?: (NetMessage.MsgCommonGetServerStatus.IC|null);

        /** MsgCommonGetServerStatus s. */
        public s?: (NetMessage.MsgCommonGetServerStatus.IS|null);

        /**
         * Creates a new MsgCommonGetServerStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonGetServerStatus instance
         */
        public static create(properties?: NetMessage.IMsgCommonGetServerStatus): NetMessage.MsgCommonGetServerStatus;

        /**
         * Encodes the specified MsgCommonGetServerStatus message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
         * @param message MsgCommonGetServerStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonGetServerStatus message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.verify|verify} messages.
         * @param message MsgCommonGetServerStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonGetServerStatus, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonGetServerStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus;

        /**
         * Decodes a MsgCommonGetServerStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonGetServerStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus;

        /**
         * Verifies a MsgCommonGetServerStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonGetServerStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonGetServerStatus
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus;

        /**
         * Creates a plain object from a MsgCommonGetServerStatus message. Also converts values to other types if specified.
         * @param message MsgCommonGetServerStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonGetServerStatus, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonGetServerStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonGetServerStatus {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetServerStatus.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonGetServerStatus.IC): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetServerStatus.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetServerStatus.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S totalAccounts */
            totalAccounts?: (number|null);

            /** S totalOnlineTime */
            totalOnlineTime?: (number|null);

            /** S activeAccounts */
            activeAccounts?: (number[]|null);

            /** S newAccounts */
            newAccounts?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetServerStatus.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S totalAccounts. */
            public totalAccounts: number;

            /** S totalOnlineTime. */
            public totalOnlineTime: number;

            /** S activeAccounts. */
            public activeAccounts: number[];

            /** S newAccounts. */
            public newAccounts: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonGetServerStatus.IS): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetServerStatus.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetServerStatus.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetServerStatus.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetServerStatus.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgCommonGetRankList. */
    interface IMsgCommonGetRankList {

        /** MsgCommonGetRankList c */
        c?: (NetMessage.MsgCommonGetRankList.IC|null);

        /** MsgCommonGetRankList s */
        s?: (NetMessage.MsgCommonGetRankList.IS|null);
    }

    /** Represents a MsgCommonGetRankList. */
    class MsgCommonGetRankList implements IMsgCommonGetRankList {

        /**
         * Constructs a new MsgCommonGetRankList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgCommonGetRankList);

        /** MsgCommonGetRankList c. */
        public c?: (NetMessage.MsgCommonGetRankList.IC|null);

        /** MsgCommonGetRankList s. */
        public s?: (NetMessage.MsgCommonGetRankList.IS|null);

        /**
         * Creates a new MsgCommonGetRankList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgCommonGetRankList instance
         */
        public static create(properties?: NetMessage.IMsgCommonGetRankList): NetMessage.MsgCommonGetRankList;

        /**
         * Encodes the specified MsgCommonGetRankList message. Does not implicitly {@link NetMessage.MsgCommonGetRankList.verify|verify} messages.
         * @param message MsgCommonGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgCommonGetRankList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgCommonGetRankList message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetRankList.verify|verify} messages.
         * @param message MsgCommonGetRankList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgCommonGetRankList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgCommonGetRankList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgCommonGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetRankList;

        /**
         * Decodes a MsgCommonGetRankList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgCommonGetRankList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetRankList;

        /**
         * Verifies a MsgCommonGetRankList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgCommonGetRankList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgCommonGetRankList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetRankList;

        /**
         * Creates a plain object from a MsgCommonGetRankList message. Also converts values to other types if specified.
         * @param message MsgCommonGetRankList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgCommonGetRankList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgCommonGetRankList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgCommonGetRankList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetRankList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgCommonGetRankList.IC): NetMessage.MsgCommonGetRankList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgCommonGetRankList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetRankList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetRankList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetRankList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetRankList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetRankList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetRankList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S rankDataList */
            rankDataList?: (Structure.IDataForPlayerRank[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgCommonGetRankList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S rankDataList. */
            public rankDataList: Structure.IDataForPlayerRank[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgCommonGetRankList.IS): NetMessage.MsgCommonGetRankList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgCommonGetRankList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgCommonGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgCommonGetRankList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgCommonGetRankList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgCommonGetRankList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgCommonGetRankList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgCommonGetRankList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgCommonGetRankList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastGetMessageList. */
    interface IMsgBroadcastGetMessageList {

        /** MsgBroadcastGetMessageList c */
        c?: (NetMessage.MsgBroadcastGetMessageList.IC|null);

        /** MsgBroadcastGetMessageList s */
        s?: (NetMessage.MsgBroadcastGetMessageList.IS|null);
    }

    /** Represents a MsgBroadcastGetMessageList. */
    class MsgBroadcastGetMessageList implements IMsgBroadcastGetMessageList {

        /**
         * Constructs a new MsgBroadcastGetMessageList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastGetMessageList);

        /** MsgBroadcastGetMessageList c. */
        public c?: (NetMessage.MsgBroadcastGetMessageList.IC|null);

        /** MsgBroadcastGetMessageList s. */
        public s?: (NetMessage.MsgBroadcastGetMessageList.IS|null);

        /**
         * Creates a new MsgBroadcastGetMessageList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastGetMessageList instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastGetMessageList): NetMessage.MsgBroadcastGetMessageList;

        /**
         * Encodes the specified MsgBroadcastGetMessageList message. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageList.verify|verify} messages.
         * @param message MsgBroadcastGetMessageList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastGetMessageList message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageList.verify|verify} messages.
         * @param message MsgBroadcastGetMessageList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastGetMessageList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastGetMessageList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetMessageList;

        /**
         * Decodes a MsgBroadcastGetMessageList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastGetMessageList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetMessageList;

        /**
         * Verifies a MsgBroadcastGetMessageList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastGetMessageList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastGetMessageList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetMessageList;

        /**
         * Creates a plain object from a MsgBroadcastGetMessageList message. Also converts values to other types if specified.
         * @param message MsgBroadcastGetMessageList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastGetMessageList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastGetMessageList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastGetMessageList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastGetMessageList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastGetMessageList.IC): NetMessage.MsgBroadcastGetMessageList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetMessageList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetMessageList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetMessageList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastGetMessageList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageList */
            messageList?: (Broadcast.IBroadcastMessage[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastGetMessageList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageList. */
            public messageList: Broadcast.IBroadcastMessage[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastGetMessageList.IS): NetMessage.MsgBroadcastGetMessageList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastGetMessageList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastGetMessageList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastGetMessageList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastGetMessageList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastGetMessageList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastAddMessage. */
    interface IMsgBroadcastAddMessage {

        /** MsgBroadcastAddMessage c */
        c?: (NetMessage.MsgBroadcastAddMessage.IC|null);

        /** MsgBroadcastAddMessage s */
        s?: (NetMessage.MsgBroadcastAddMessage.IS|null);
    }

    /** Represents a MsgBroadcastAddMessage. */
    class MsgBroadcastAddMessage implements IMsgBroadcastAddMessage {

        /**
         * Constructs a new MsgBroadcastAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastAddMessage);

        /** MsgBroadcastAddMessage c. */
        public c?: (NetMessage.MsgBroadcastAddMessage.IC|null);

        /** MsgBroadcastAddMessage s. */
        public s?: (NetMessage.MsgBroadcastAddMessage.IS|null);

        /**
         * Creates a new MsgBroadcastAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastAddMessage): NetMessage.MsgBroadcastAddMessage;

        /**
         * Encodes the specified MsgBroadcastAddMessage message. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.verify|verify} messages.
         * @param message MsgBroadcastAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.verify|verify} messages.
         * @param message MsgBroadcastAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastAddMessage;

        /**
         * Decodes a MsgBroadcastAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastAddMessage;

        /**
         * Verifies a MsgBroadcastAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastAddMessage;

        /**
         * Creates a plain object from a MsgBroadcastAddMessage message. Also converts values to other types if specified.
         * @param message MsgBroadcastAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C textList */
            textList?: (Structure.ILanguageText[]|null);

            /** C startTime */
            startTime?: (number|null);

            /** C endTime */
            endTime?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastAddMessage.IC);

            /** C textList. */
            public textList: Structure.ILanguageText[];

            /** C startTime. */
            public startTime: number;

            /** C endTime. */
            public endTime: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastAddMessage.IC): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastAddMessage.IS): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastDeleteMessage. */
    interface IMsgBroadcastDeleteMessage {

        /** MsgBroadcastDeleteMessage c */
        c?: (NetMessage.MsgBroadcastDeleteMessage.IC|null);

        /** MsgBroadcastDeleteMessage s */
        s?: (NetMessage.MsgBroadcastDeleteMessage.IS|null);
    }

    /** Represents a MsgBroadcastDeleteMessage. */
    class MsgBroadcastDeleteMessage implements IMsgBroadcastDeleteMessage {

        /**
         * Constructs a new MsgBroadcastDeleteMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastDeleteMessage);

        /** MsgBroadcastDeleteMessage c. */
        public c?: (NetMessage.MsgBroadcastDeleteMessage.IC|null);

        /** MsgBroadcastDeleteMessage s. */
        public s?: (NetMessage.MsgBroadcastDeleteMessage.IS|null);

        /**
         * Creates a new MsgBroadcastDeleteMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastDeleteMessage instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastDeleteMessage): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Encodes the specified MsgBroadcastDeleteMessage message. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.verify|verify} messages.
         * @param message MsgBroadcastDeleteMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastDeleteMessage message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.verify|verify} messages.
         * @param message MsgBroadcastDeleteMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastDeleteMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastDeleteMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastDeleteMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Decodes a MsgBroadcastDeleteMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastDeleteMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Verifies a MsgBroadcastDeleteMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastDeleteMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastDeleteMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDeleteMessage;

        /**
         * Creates a plain object from a MsgBroadcastDeleteMessage message. Also converts values to other types if specified.
         * @param message MsgBroadcastDeleteMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastDeleteMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastDeleteMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastDeleteMessage {

        /** Properties of a C. */
        interface IC {

            /** C messageId */
            messageId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDeleteMessage.IC);

            /** C messageId. */
            public messageId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDeleteMessage.IC): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDeleteMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDeleteMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDeleteMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDeleteMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDeleteMessage.IS): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDeleteMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDeleteMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDeleteMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDeleteMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgBroadcastDoBroadcast. */
    interface IMsgBroadcastDoBroadcast {

        /** MsgBroadcastDoBroadcast c */
        c?: (NetMessage.MsgBroadcastDoBroadcast.IC|null);

        /** MsgBroadcastDoBroadcast s */
        s?: (NetMessage.MsgBroadcastDoBroadcast.IS|null);
    }

    /** Represents a MsgBroadcastDoBroadcast. */
    class MsgBroadcastDoBroadcast implements IMsgBroadcastDoBroadcast {

        /**
         * Constructs a new MsgBroadcastDoBroadcast.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgBroadcastDoBroadcast);

        /** MsgBroadcastDoBroadcast c. */
        public c?: (NetMessage.MsgBroadcastDoBroadcast.IC|null);

        /** MsgBroadcastDoBroadcast s. */
        public s?: (NetMessage.MsgBroadcastDoBroadcast.IS|null);

        /**
         * Creates a new MsgBroadcastDoBroadcast instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgBroadcastDoBroadcast instance
         */
        public static create(properties?: NetMessage.IMsgBroadcastDoBroadcast): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Encodes the specified MsgBroadcastDoBroadcast message. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.verify|verify} messages.
         * @param message MsgBroadcastDoBroadcast message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgBroadcastDoBroadcast, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgBroadcastDoBroadcast message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.verify|verify} messages.
         * @param message MsgBroadcastDoBroadcast message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgBroadcastDoBroadcast, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgBroadcastDoBroadcast message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgBroadcastDoBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Decodes a MsgBroadcastDoBroadcast message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgBroadcastDoBroadcast
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Verifies a MsgBroadcastDoBroadcast message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgBroadcastDoBroadcast message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgBroadcastDoBroadcast
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDoBroadcast;

        /**
         * Creates a plain object from a MsgBroadcastDoBroadcast message. Also converts values to other types if specified.
         * @param message MsgBroadcastDoBroadcast
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgBroadcastDoBroadcast, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgBroadcastDoBroadcast to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgBroadcastDoBroadcast {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDoBroadcast.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDoBroadcast.IC): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDoBroadcast.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDoBroadcast.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDoBroadcast.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDoBroadcast.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgBroadcastDoBroadcast.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgBroadcastDoBroadcast.IS): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgBroadcastDoBroadcast.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgBroadcastDoBroadcast.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgBroadcastDoBroadcast.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgBroadcastDoBroadcast.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgBroadcastDoBroadcast.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChangeLogGetMessageList. */
    interface IMsgChangeLogGetMessageList {

        /** MsgChangeLogGetMessageList c */
        c?: (NetMessage.MsgChangeLogGetMessageList.IC|null);

        /** MsgChangeLogGetMessageList s */
        s?: (NetMessage.MsgChangeLogGetMessageList.IS|null);
    }

    /** Represents a MsgChangeLogGetMessageList. */
    class MsgChangeLogGetMessageList implements IMsgChangeLogGetMessageList {

        /**
         * Constructs a new MsgChangeLogGetMessageList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChangeLogGetMessageList);

        /** MsgChangeLogGetMessageList c. */
        public c?: (NetMessage.MsgChangeLogGetMessageList.IC|null);

        /** MsgChangeLogGetMessageList s. */
        public s?: (NetMessage.MsgChangeLogGetMessageList.IS|null);

        /**
         * Creates a new MsgChangeLogGetMessageList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChangeLogGetMessageList instance
         */
        public static create(properties?: NetMessage.IMsgChangeLogGetMessageList): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Encodes the specified MsgChangeLogGetMessageList message. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.verify|verify} messages.
         * @param message MsgChangeLogGetMessageList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChangeLogGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChangeLogGetMessageList message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.verify|verify} messages.
         * @param message MsgChangeLogGetMessageList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChangeLogGetMessageList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChangeLogGetMessageList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChangeLogGetMessageList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Decodes a MsgChangeLogGetMessageList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChangeLogGetMessageList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Verifies a MsgChangeLogGetMessageList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChangeLogGetMessageList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChangeLogGetMessageList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogGetMessageList;

        /**
         * Creates a plain object from a MsgChangeLogGetMessageList message. Also converts values to other types if specified.
         * @param message MsgChangeLogGetMessageList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChangeLogGetMessageList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChangeLogGetMessageList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChangeLogGetMessageList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogGetMessageList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChangeLogGetMessageList.IC): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogGetMessageList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogGetMessageList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogGetMessageList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageList */
            messageList?: (ChangeLog.IChangeLogMessage[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogGetMessageList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageList. */
            public messageList: ChangeLog.IChangeLogMessage[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChangeLogGetMessageList.IS): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogGetMessageList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogGetMessageList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogGetMessageList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogGetMessageList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChangeLogAddMessage. */
    interface IMsgChangeLogAddMessage {

        /** MsgChangeLogAddMessage c */
        c?: (NetMessage.MsgChangeLogAddMessage.IC|null);

        /** MsgChangeLogAddMessage s */
        s?: (NetMessage.MsgChangeLogAddMessage.IS|null);
    }

    /** Represents a MsgChangeLogAddMessage. */
    class MsgChangeLogAddMessage implements IMsgChangeLogAddMessage {

        /**
         * Constructs a new MsgChangeLogAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChangeLogAddMessage);

        /** MsgChangeLogAddMessage c. */
        public c?: (NetMessage.MsgChangeLogAddMessage.IC|null);

        /** MsgChangeLogAddMessage s. */
        public s?: (NetMessage.MsgChangeLogAddMessage.IS|null);

        /**
         * Creates a new MsgChangeLogAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChangeLogAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgChangeLogAddMessage): NetMessage.MsgChangeLogAddMessage;

        /**
         * Encodes the specified MsgChangeLogAddMessage message. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.verify|verify} messages.
         * @param message MsgChangeLogAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChangeLogAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChangeLogAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.verify|verify} messages.
         * @param message MsgChangeLogAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChangeLogAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChangeLogAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChangeLogAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogAddMessage;

        /**
         * Decodes a MsgChangeLogAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChangeLogAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogAddMessage;

        /**
         * Verifies a MsgChangeLogAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChangeLogAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChangeLogAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogAddMessage;

        /**
         * Creates a plain object from a MsgChangeLogAddMessage message. Also converts values to other types if specified.
         * @param message MsgChangeLogAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChangeLogAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChangeLogAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChangeLogAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C textList */
            textList?: (Structure.ILanguageText[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogAddMessage.IC);

            /** C textList. */
            public textList: Structure.ILanguageText[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChangeLogAddMessage.IC): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChangeLogAddMessage.IS): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChangeLogModifyMessage. */
    interface IMsgChangeLogModifyMessage {

        /** MsgChangeLogModifyMessage c */
        c?: (NetMessage.MsgChangeLogModifyMessage.IC|null);

        /** MsgChangeLogModifyMessage s */
        s?: (NetMessage.MsgChangeLogModifyMessage.IS|null);
    }

    /** Represents a MsgChangeLogModifyMessage. */
    class MsgChangeLogModifyMessage implements IMsgChangeLogModifyMessage {

        /**
         * Constructs a new MsgChangeLogModifyMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChangeLogModifyMessage);

        /** MsgChangeLogModifyMessage c. */
        public c?: (NetMessage.MsgChangeLogModifyMessage.IC|null);

        /** MsgChangeLogModifyMessage s. */
        public s?: (NetMessage.MsgChangeLogModifyMessage.IS|null);

        /**
         * Creates a new MsgChangeLogModifyMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChangeLogModifyMessage instance
         */
        public static create(properties?: NetMessage.IMsgChangeLogModifyMessage): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Encodes the specified MsgChangeLogModifyMessage message. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.verify|verify} messages.
         * @param message MsgChangeLogModifyMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChangeLogModifyMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChangeLogModifyMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.verify|verify} messages.
         * @param message MsgChangeLogModifyMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChangeLogModifyMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChangeLogModifyMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChangeLogModifyMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Decodes a MsgChangeLogModifyMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChangeLogModifyMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Verifies a MsgChangeLogModifyMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChangeLogModifyMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChangeLogModifyMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogModifyMessage;

        /**
         * Creates a plain object from a MsgChangeLogModifyMessage message. Also converts values to other types if specified.
         * @param message MsgChangeLogModifyMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChangeLogModifyMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChangeLogModifyMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChangeLogModifyMessage {

        /** Properties of a C. */
        interface IC {

            /** C messageId */
            messageId?: (number|null);

            /** C textList */
            textList?: (Structure.ILanguageText[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogModifyMessage.IC);

            /** C messageId. */
            public messageId: number;

            /** C textList. */
            public textList: Structure.ILanguageText[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChangeLogModifyMessage.IC): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogModifyMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogModifyMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogModifyMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogModifyMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageId */
            messageId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChangeLogModifyMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageId. */
            public messageId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChangeLogModifyMessage.IS): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChangeLogModifyMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChangeLogModifyMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChangeLogModifyMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChangeLogModifyMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChangeLogModifyMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserRegister. */
    interface IMsgUserRegister {

        /** MsgUserRegister c */
        c?: (NetMessage.MsgUserRegister.IC|null);

        /** MsgUserRegister s */
        s?: (NetMessage.MsgUserRegister.IS|null);
    }

    /** Represents a MsgUserRegister. */
    class MsgUserRegister implements IMsgUserRegister {

        /**
         * Constructs a new MsgUserRegister.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserRegister);

        /** MsgUserRegister c. */
        public c?: (NetMessage.MsgUserRegister.IC|null);

        /** MsgUserRegister s. */
        public s?: (NetMessage.MsgUserRegister.IS|null);

        /**
         * Creates a new MsgUserRegister instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserRegister instance
         */
        public static create(properties?: NetMessage.IMsgUserRegister): NetMessage.MsgUserRegister;

        /**
         * Encodes the specified MsgUserRegister message. Does not implicitly {@link NetMessage.MsgUserRegister.verify|verify} messages.
         * @param message MsgUserRegister message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserRegister message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.verify|verify} messages.
         * @param message MsgUserRegister message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserRegister, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserRegister message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserRegister
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister;

        /**
         * Decodes a MsgUserRegister message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserRegister
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister;

        /**
         * Verifies a MsgUserRegister message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserRegister message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserRegister
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister;

        /**
         * Creates a plain object from a MsgUserRegister message. Also converts values to other types if specified.
         * @param message MsgUserRegister
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserRegister, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserRegister to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserRegister {

        /** Properties of a C. */
        interface IC {

            /** C account */
            account?: (string|null);

            /** C password */
            password?: (string|null);

            /** C nickname */
            nickname?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserRegister.IC);

            /** C account. */
            public account: string;

            /** C password. */
            public password: string;

            /** C nickname. */
            public nickname: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserRegister.IC): NetMessage.MsgUserRegister.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserRegister.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserRegister.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserRegister.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S account */
            account?: (string|null);

            /** S password */
            password?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserRegister.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S account. */
            public account: string;

            /** S password. */
            public password: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserRegister.IS): NetMessage.MsgUserRegister.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserRegister.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserRegister.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserRegister.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserRegister.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserRegister.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserRegister.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserRegister.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserLogin. */
    interface IMsgUserLogin {

        /** MsgUserLogin c */
        c?: (NetMessage.MsgUserLogin.IC|null);

        /** MsgUserLogin s */
        s?: (NetMessage.MsgUserLogin.IS|null);
    }

    /** Represents a MsgUserLogin. */
    class MsgUserLogin implements IMsgUserLogin {

        /**
         * Constructs a new MsgUserLogin.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserLogin);

        /** MsgUserLogin c. */
        public c?: (NetMessage.MsgUserLogin.IC|null);

        /** MsgUserLogin s. */
        public s?: (NetMessage.MsgUserLogin.IS|null);

        /**
         * Creates a new MsgUserLogin instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserLogin instance
         */
        public static create(properties?: NetMessage.IMsgUserLogin): NetMessage.MsgUserLogin;

        /**
         * Encodes the specified MsgUserLogin message. Does not implicitly {@link NetMessage.MsgUserLogin.verify|verify} messages.
         * @param message MsgUserLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserLogin message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.verify|verify} messages.
         * @param message MsgUserLogin message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserLogin, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserLogin message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin;

        /**
         * Decodes a MsgUserLogin message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserLogin
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin;

        /**
         * Verifies a MsgUserLogin message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserLogin message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserLogin
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin;

        /**
         * Creates a plain object from a MsgUserLogin message. Also converts values to other types if specified.
         * @param message MsgUserLogin
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserLogin, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserLogin to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserLogin {

        /** Properties of a C. */
        interface IC {

            /** C account */
            account?: (string|null);

            /** C password */
            password?: (string|null);

            /** C isAutoRelogin */
            isAutoRelogin?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogin.IC);

            /** C account. */
            public account: string;

            /** C password. */
            public password: string;

            /** C isAutoRelogin. */
            public isAutoRelogin: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserLogin.IC): NetMessage.MsgUserLogin.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserLogin.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogin.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogin.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userPublicInfo */
            userPublicInfo?: (User.IUserPublicInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogin.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userPublicInfo. */
            public userPublicInfo?: (User.IUserPublicInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserLogin.IS): NetMessage.MsgUserLogin.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserLogin.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogin.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogin.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogin.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogin.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogin.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogin.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserLogout. */
    interface IMsgUserLogout {

        /** MsgUserLogout c */
        c?: (NetMessage.MsgUserLogout.IC|null);

        /** MsgUserLogout s */
        s?: (NetMessage.MsgUserLogout.IS|null);
    }

    /** Represents a MsgUserLogout. */
    class MsgUserLogout implements IMsgUserLogout {

        /**
         * Constructs a new MsgUserLogout.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserLogout);

        /** MsgUserLogout c. */
        public c?: (NetMessage.MsgUserLogout.IC|null);

        /** MsgUserLogout s. */
        public s?: (NetMessage.MsgUserLogout.IS|null);

        /**
         * Creates a new MsgUserLogout instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserLogout instance
         */
        public static create(properties?: NetMessage.IMsgUserLogout): NetMessage.MsgUserLogout;

        /**
         * Encodes the specified MsgUserLogout message. Does not implicitly {@link NetMessage.MsgUserLogout.verify|verify} messages.
         * @param message MsgUserLogout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserLogout message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.verify|verify} messages.
         * @param message MsgUserLogout message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserLogout, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserLogout message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserLogout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout;

        /**
         * Decodes a MsgUserLogout message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserLogout
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout;

        /**
         * Verifies a MsgUserLogout message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserLogout message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserLogout
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout;

        /**
         * Creates a plain object from a MsgUserLogout message. Also converts values to other types if specified.
         * @param message MsgUserLogout
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserLogout, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserLogout to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserLogout {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogout.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserLogout.IC): NetMessage.MsgUserLogout.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserLogout.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogout.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogout.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S reason */
            reason?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserLogout.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S reason. */
            public reason: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserLogout.IS): NetMessage.MsgUserLogout.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserLogout.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserLogout.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserLogout.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserLogout.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserLogout.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserLogout.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserLogout.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetPublicInfo. */
    interface IMsgUserGetPublicInfo {

        /** MsgUserGetPublicInfo c */
        c?: (NetMessage.MsgUserGetPublicInfo.IC|null);

        /** MsgUserGetPublicInfo s */
        s?: (NetMessage.MsgUserGetPublicInfo.IS|null);
    }

    /** Represents a MsgUserGetPublicInfo. */
    class MsgUserGetPublicInfo implements IMsgUserGetPublicInfo {

        /**
         * Constructs a new MsgUserGetPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetPublicInfo);

        /** MsgUserGetPublicInfo c. */
        public c?: (NetMessage.MsgUserGetPublicInfo.IC|null);

        /** MsgUserGetPublicInfo s. */
        public s?: (NetMessage.MsgUserGetPublicInfo.IS|null);

        /**
         * Creates a new MsgUserGetPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetPublicInfo instance
         */
        public static create(properties?: NetMessage.IMsgUserGetPublicInfo): NetMessage.MsgUserGetPublicInfo;

        /**
         * Encodes the specified MsgUserGetPublicInfo message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
         * @param message MsgUserGetPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetPublicInfo message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.verify|verify} messages.
         * @param message MsgUserGetPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo;

        /**
         * Decodes a MsgUserGetPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo;

        /**
         * Verifies a MsgUserGetPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo;

        /**
         * Creates a plain object from a MsgUserGetPublicInfo message. Also converts values to other types if specified.
         * @param message MsgUserGetPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetPublicInfo {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetPublicInfo.IC);

            /** C userId. */
            public userId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetPublicInfo.IC): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userId */
            userId?: (number|null);

            /** S userPublicInfo */
            userPublicInfo?: (User.IUserPublicInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetPublicInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userId. */
            public userId: number;

            /** S userPublicInfo. */
            public userPublicInfo?: (User.IUserPublicInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetPublicInfo.IS): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetPublicInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetNickname. */
    interface IMsgUserSetNickname {

        /** MsgUserSetNickname c */
        c?: (NetMessage.MsgUserSetNickname.IC|null);

        /** MsgUserSetNickname s */
        s?: (NetMessage.MsgUserSetNickname.IS|null);
    }

    /** Represents a MsgUserSetNickname. */
    class MsgUserSetNickname implements IMsgUserSetNickname {

        /**
         * Constructs a new MsgUserSetNickname.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetNickname);

        /** MsgUserSetNickname c. */
        public c?: (NetMessage.MsgUserSetNickname.IC|null);

        /** MsgUserSetNickname s. */
        public s?: (NetMessage.MsgUserSetNickname.IS|null);

        /**
         * Creates a new MsgUserSetNickname instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetNickname instance
         */
        public static create(properties?: NetMessage.IMsgUserSetNickname): NetMessage.MsgUserSetNickname;

        /**
         * Encodes the specified MsgUserSetNickname message. Does not implicitly {@link NetMessage.MsgUserSetNickname.verify|verify} messages.
         * @param message MsgUserSetNickname message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetNickname message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.verify|verify} messages.
         * @param message MsgUserSetNickname message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetNickname, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetNickname message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetNickname
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname;

        /**
         * Decodes a MsgUserSetNickname message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetNickname
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname;

        /**
         * Verifies a MsgUserSetNickname message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetNickname message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetNickname
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname;

        /**
         * Creates a plain object from a MsgUserSetNickname message. Also converts values to other types if specified.
         * @param message MsgUserSetNickname
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetNickname, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetNickname to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetNickname {

        /** Properties of a C. */
        interface IC {

            /** C nickname */
            nickname?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetNickname.IC);

            /** C nickname. */
            public nickname: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetNickname.IC): NetMessage.MsgUserSetNickname.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetNickname.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetNickname.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetNickname.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S nickname */
            nickname?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetNickname.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S nickname. */
            public nickname: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetNickname.IS): NetMessage.MsgUserSetNickname.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetNickname.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetNickname.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetNickname.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetNickname.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetNickname.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetNickname.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetNickname.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetDiscordId. */
    interface IMsgUserSetDiscordId {

        /** MsgUserSetDiscordId c */
        c?: (NetMessage.MsgUserSetDiscordId.IC|null);

        /** MsgUserSetDiscordId s */
        s?: (NetMessage.MsgUserSetDiscordId.IS|null);
    }

    /** Represents a MsgUserSetDiscordId. */
    class MsgUserSetDiscordId implements IMsgUserSetDiscordId {

        /**
         * Constructs a new MsgUserSetDiscordId.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetDiscordId);

        /** MsgUserSetDiscordId c. */
        public c?: (NetMessage.MsgUserSetDiscordId.IC|null);

        /** MsgUserSetDiscordId s. */
        public s?: (NetMessage.MsgUserSetDiscordId.IS|null);

        /**
         * Creates a new MsgUserSetDiscordId instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetDiscordId instance
         */
        public static create(properties?: NetMessage.IMsgUserSetDiscordId): NetMessage.MsgUserSetDiscordId;

        /**
         * Encodes the specified MsgUserSetDiscordId message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.verify|verify} messages.
         * @param message MsgUserSetDiscordId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetDiscordId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetDiscordId message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.verify|verify} messages.
         * @param message MsgUserSetDiscordId message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetDiscordId, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetDiscordId message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetDiscordId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId;

        /**
         * Decodes a MsgUserSetDiscordId message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetDiscordId
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId;

        /**
         * Verifies a MsgUserSetDiscordId message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetDiscordId message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetDiscordId
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId;

        /**
         * Creates a plain object from a MsgUserSetDiscordId message. Also converts values to other types if specified.
         * @param message MsgUserSetDiscordId
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetDiscordId, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetDiscordId to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetDiscordId {

        /** Properties of a C. */
        interface IC {

            /** C discordId */
            discordId?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetDiscordId.IC);

            /** C discordId. */
            public discordId: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetDiscordId.IC): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetDiscordId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetDiscordId.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetDiscordId.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S discordId */
            discordId?: (string|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetDiscordId.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S discordId. */
            public discordId: string;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetDiscordId.IS): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetDiscordId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetDiscordId.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetDiscordId.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetDiscordId.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetDiscordId.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetOnlineUsers. */
    interface IMsgUserGetOnlineUsers {

        /** MsgUserGetOnlineUsers c */
        c?: (NetMessage.MsgUserGetOnlineUsers.IC|null);

        /** MsgUserGetOnlineUsers s */
        s?: (NetMessage.MsgUserGetOnlineUsers.IS|null);
    }

    /** Represents a MsgUserGetOnlineUsers. */
    class MsgUserGetOnlineUsers implements IMsgUserGetOnlineUsers {

        /**
         * Constructs a new MsgUserGetOnlineUsers.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetOnlineUsers);

        /** MsgUserGetOnlineUsers c. */
        public c?: (NetMessage.MsgUserGetOnlineUsers.IC|null);

        /** MsgUserGetOnlineUsers s. */
        public s?: (NetMessage.MsgUserGetOnlineUsers.IS|null);

        /**
         * Creates a new MsgUserGetOnlineUsers instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetOnlineUsers instance
         */
        public static create(properties?: NetMessage.IMsgUserGetOnlineUsers): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Encodes the specified MsgUserGetOnlineUsers message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.verify|verify} messages.
         * @param message MsgUserGetOnlineUsers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetOnlineUsers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetOnlineUsers message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.verify|verify} messages.
         * @param message MsgUserGetOnlineUsers message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetOnlineUsers, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetOnlineUsers message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetOnlineUsers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Decodes a MsgUserGetOnlineUsers message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetOnlineUsers
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Verifies a MsgUserGetOnlineUsers message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetOnlineUsers message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetOnlineUsers
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUsers;

        /**
         * Creates a plain object from a MsgUserGetOnlineUsers message. Also converts values to other types if specified.
         * @param message MsgUserGetOnlineUsers
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetOnlineUsers, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetOnlineUsers to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetOnlineUsers {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineUsers.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineUsers.IC): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineUsers.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineUsers.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUsers.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineUsers.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S totalCount */
            totalCount?: (number|null);

            /** S userInfos */
            userInfos?: (User.IUserBriefInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetOnlineUsers.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S totalCount. */
            public totalCount: number;

            /** S userInfos. */
            public userInfos: User.IUserBriefInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetOnlineUsers.IS): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetOnlineUsers.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetOnlineUsers.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetOnlineUsers.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetOnlineUsers.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetOnlineUsers.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetPrivilege. */
    interface IMsgUserSetPrivilege {

        /** MsgUserSetPrivilege c */
        c?: (NetMessage.MsgUserSetPrivilege.IC|null);

        /** MsgUserSetPrivilege s */
        s?: (NetMessage.MsgUserSetPrivilege.IS|null);
    }

    /** Represents a MsgUserSetPrivilege. */
    class MsgUserSetPrivilege implements IMsgUserSetPrivilege {

        /**
         * Constructs a new MsgUserSetPrivilege.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetPrivilege);

        /** MsgUserSetPrivilege c. */
        public c?: (NetMessage.MsgUserSetPrivilege.IC|null);

        /** MsgUserSetPrivilege s. */
        public s?: (NetMessage.MsgUserSetPrivilege.IS|null);

        /**
         * Creates a new MsgUserSetPrivilege instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetPrivilege instance
         */
        public static create(properties?: NetMessage.IMsgUserSetPrivilege): NetMessage.MsgUserSetPrivilege;

        /**
         * Encodes the specified MsgUserSetPrivilege message. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.verify|verify} messages.
         * @param message MsgUserSetPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetPrivilege message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.verify|verify} messages.
         * @param message MsgUserSetPrivilege message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetPrivilege, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetPrivilege message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPrivilege;

        /**
         * Decodes a MsgUserSetPrivilege message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetPrivilege
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPrivilege;

        /**
         * Verifies a MsgUserSetPrivilege message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetPrivilege message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetPrivilege
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPrivilege;

        /**
         * Creates a plain object from a MsgUserSetPrivilege message. Also converts values to other types if specified.
         * @param message MsgUserSetPrivilege
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetPrivilege, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetPrivilege to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetPrivilege {

        /** Properties of a C. */
        interface IC {

            /** C userId */
            userId?: (number|null);

            /** C userPrivilege */
            userPrivilege?: (User.IUserPrivilege|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPrivilege.IC);

            /** C userId. */
            public userId: number;

            /** C userPrivilege. */
            public userPrivilege?: (User.IUserPrivilege|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetPrivilege.IC): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPrivilege.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPrivilege.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPrivilege.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPrivilege.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPrivilege.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetPrivilege.IS): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPrivilege.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPrivilege.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPrivilege.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPrivilege.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPrivilege.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetPassword. */
    interface IMsgUserSetPassword {

        /** MsgUserSetPassword c */
        c?: (NetMessage.MsgUserSetPassword.IC|null);

        /** MsgUserSetPassword s */
        s?: (NetMessage.MsgUserSetPassword.IS|null);
    }

    /** Represents a MsgUserSetPassword. */
    class MsgUserSetPassword implements IMsgUserSetPassword {

        /**
         * Constructs a new MsgUserSetPassword.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetPassword);

        /** MsgUserSetPassword c. */
        public c?: (NetMessage.MsgUserSetPassword.IC|null);

        /** MsgUserSetPassword s. */
        public s?: (NetMessage.MsgUserSetPassword.IS|null);

        /**
         * Creates a new MsgUserSetPassword instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetPassword instance
         */
        public static create(properties?: NetMessage.IMsgUserSetPassword): NetMessage.MsgUserSetPassword;

        /**
         * Encodes the specified MsgUserSetPassword message. Does not implicitly {@link NetMessage.MsgUserSetPassword.verify|verify} messages.
         * @param message MsgUserSetPassword message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetPassword, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetPassword message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPassword.verify|verify} messages.
         * @param message MsgUserSetPassword message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetPassword, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetPassword message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPassword;

        /**
         * Decodes a MsgUserSetPassword message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetPassword
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPassword;

        /**
         * Verifies a MsgUserSetPassword message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetPassword message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetPassword
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPassword;

        /**
         * Creates a plain object from a MsgUserSetPassword message. Also converts values to other types if specified.
         * @param message MsgUserSetPassword
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetPassword, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetPassword to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetPassword {

        /** Properties of a C. */
        interface IC {

            /** C oldPassword */
            oldPassword?: (string|null);

            /** C newPassword */
            newPassword?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPassword.IC);

            /** C oldPassword. */
            public oldPassword: string;

            /** C newPassword. */
            public newPassword: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetPassword.IC): NetMessage.MsgUserSetPassword.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetPassword.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPassword.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPassword.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPassword.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPassword.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPassword.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPassword.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPassword.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetPassword.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetPassword.IS): NetMessage.MsgUserSetPassword.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetPassword.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetPassword.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetPassword.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetPassword.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetPassword.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetPassword.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetPassword.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetPassword.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserGetSettings. */
    interface IMsgUserGetSettings {

        /** MsgUserGetSettings c */
        c?: (NetMessage.MsgUserGetSettings.IC|null);

        /** MsgUserGetSettings s */
        s?: (NetMessage.MsgUserGetSettings.IS|null);
    }

    /** Represents a MsgUserGetSettings. */
    class MsgUserGetSettings implements IMsgUserGetSettings {

        /**
         * Constructs a new MsgUserGetSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserGetSettings);

        /** MsgUserGetSettings c. */
        public c?: (NetMessage.MsgUserGetSettings.IC|null);

        /** MsgUserGetSettings s. */
        public s?: (NetMessage.MsgUserGetSettings.IS|null);

        /**
         * Creates a new MsgUserGetSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserGetSettings instance
         */
        public static create(properties?: NetMessage.IMsgUserGetSettings): NetMessage.MsgUserGetSettings;

        /**
         * Encodes the specified MsgUserGetSettings message. Does not implicitly {@link NetMessage.MsgUserGetSettings.verify|verify} messages.
         * @param message MsgUserGetSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserGetSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserGetSettings message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetSettings.verify|verify} messages.
         * @param message MsgUserGetSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserGetSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserGetSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserGetSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetSettings;

        /**
         * Decodes a MsgUserGetSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserGetSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetSettings;

        /**
         * Verifies a MsgUserGetSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserGetSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserGetSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetSettings;

        /**
         * Creates a plain object from a MsgUserGetSettings message. Also converts values to other types if specified.
         * @param message MsgUserGetSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserGetSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserGetSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserGetSettings {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetSettings.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserGetSettings.IC): NetMessage.MsgUserGetSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserGetSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S userSettings */
            userSettings?: (User.IUserSettings|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserGetSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S userSettings. */
            public userSettings?: (User.IUserSettings|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserGetSettings.IS): NetMessage.MsgUserGetSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserGetSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserGetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserGetSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserGetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserGetSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserGetSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserGetSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserGetSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgUserSetSettings. */
    interface IMsgUserSetSettings {

        /** MsgUserSetSettings c */
        c?: (NetMessage.MsgUserSetSettings.IC|null);

        /** MsgUserSetSettings s */
        s?: (NetMessage.MsgUserSetSettings.IS|null);
    }

    /** Represents a MsgUserSetSettings. */
    class MsgUserSetSettings implements IMsgUserSetSettings {

        /**
         * Constructs a new MsgUserSetSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgUserSetSettings);

        /** MsgUserSetSettings c. */
        public c?: (NetMessage.MsgUserSetSettings.IC|null);

        /** MsgUserSetSettings s. */
        public s?: (NetMessage.MsgUserSetSettings.IS|null);

        /**
         * Creates a new MsgUserSetSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgUserSetSettings instance
         */
        public static create(properties?: NetMessage.IMsgUserSetSettings): NetMessage.MsgUserSetSettings;

        /**
         * Encodes the specified MsgUserSetSettings message. Does not implicitly {@link NetMessage.MsgUserSetSettings.verify|verify} messages.
         * @param message MsgUserSetSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgUserSetSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgUserSetSettings message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetSettings.verify|verify} messages.
         * @param message MsgUserSetSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgUserSetSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgUserSetSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgUserSetSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetSettings;

        /**
         * Decodes a MsgUserSetSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgUserSetSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetSettings;

        /**
         * Verifies a MsgUserSetSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgUserSetSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgUserSetSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetSettings;

        /**
         * Creates a plain object from a MsgUserSetSettings message. Also converts values to other types if specified.
         * @param message MsgUserSetSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgUserSetSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgUserSetSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgUserSetSettings {

        /** Properties of a C. */
        interface IC {

            /** C userSettings */
            userSettings?: (User.IUserSettings|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetSettings.IC);

            /** C userSettings. */
            public userSettings?: (User.IUserSettings|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgUserSetSettings.IC): NetMessage.MsgUserSetSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgUserSetSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgUserSetSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgUserSetSettings.IS): NetMessage.MsgUserSetSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgUserSetSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgUserSetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgUserSetSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgUserSetSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgUserSetSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgUserSetSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgUserSetSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgUserSetSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetEnabledBriefDataList. */
    interface IMsgMapGetEnabledBriefDataList {

        /** MsgMapGetEnabledBriefDataList c */
        c?: (NetMessage.MsgMapGetEnabledBriefDataList.IC|null);

        /** MsgMapGetEnabledBriefDataList s */
        s?: (NetMessage.MsgMapGetEnabledBriefDataList.IS|null);
    }

    /** Represents a MsgMapGetEnabledBriefDataList. */
    class MsgMapGetEnabledBriefDataList implements IMsgMapGetEnabledBriefDataList {

        /**
         * Constructs a new MsgMapGetEnabledBriefDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetEnabledBriefDataList);

        /** MsgMapGetEnabledBriefDataList c. */
        public c?: (NetMessage.MsgMapGetEnabledBriefDataList.IC|null);

        /** MsgMapGetEnabledBriefDataList s. */
        public s?: (NetMessage.MsgMapGetEnabledBriefDataList.IS|null);

        /**
         * Creates a new MsgMapGetEnabledBriefDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetEnabledBriefDataList instance
         */
        public static create(properties?: NetMessage.IMsgMapGetEnabledBriefDataList): NetMessage.MsgMapGetEnabledBriefDataList;

        /**
         * Encodes the specified MsgMapGetEnabledBriefDataList message. Does not implicitly {@link NetMessage.MsgMapGetEnabledBriefDataList.verify|verify} messages.
         * @param message MsgMapGetEnabledBriefDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetEnabledBriefDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetEnabledBriefDataList message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledBriefDataList.verify|verify} messages.
         * @param message MsgMapGetEnabledBriefDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetEnabledBriefDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetEnabledBriefDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetEnabledBriefDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledBriefDataList;

        /**
         * Decodes a MsgMapGetEnabledBriefDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetEnabledBriefDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledBriefDataList;

        /**
         * Verifies a MsgMapGetEnabledBriefDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetEnabledBriefDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetEnabledBriefDataList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledBriefDataList;

        /**
         * Creates a plain object from a MsgMapGetEnabledBriefDataList message. Also converts values to other types if specified.
         * @param message MsgMapGetEnabledBriefDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetEnabledBriefDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetEnabledBriefDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetEnabledBriefDataList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledBriefDataList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledBriefDataList.IC): NetMessage.MsgMapGetEnabledBriefDataList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetEnabledBriefDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledBriefDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledBriefDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledBriefDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledBriefDataList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledBriefDataList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledBriefDataList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledBriefDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Map.IMapBriefData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledBriefDataList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Map.IMapBriefData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledBriefDataList.IS): NetMessage.MsgMapGetEnabledBriefDataList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetEnabledBriefDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledBriefDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledBriefDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledBriefDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledBriefDataList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledBriefDataList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledBriefDataList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledBriefDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetEnabledRawDataList. */
    interface IMsgMapGetEnabledRawDataList {

        /** MsgMapGetEnabledRawDataList c */
        c?: (NetMessage.MsgMapGetEnabledRawDataList.IC|null);

        /** MsgMapGetEnabledRawDataList s */
        s?: (NetMessage.MsgMapGetEnabledRawDataList.IS|null);
    }

    /** Represents a MsgMapGetEnabledRawDataList. */
    class MsgMapGetEnabledRawDataList implements IMsgMapGetEnabledRawDataList {

        /**
         * Constructs a new MsgMapGetEnabledRawDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetEnabledRawDataList);

        /** MsgMapGetEnabledRawDataList c. */
        public c?: (NetMessage.MsgMapGetEnabledRawDataList.IC|null);

        /** MsgMapGetEnabledRawDataList s. */
        public s?: (NetMessage.MsgMapGetEnabledRawDataList.IS|null);

        /**
         * Creates a new MsgMapGetEnabledRawDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetEnabledRawDataList instance
         */
        public static create(properties?: NetMessage.IMsgMapGetEnabledRawDataList): NetMessage.MsgMapGetEnabledRawDataList;

        /**
         * Encodes the specified MsgMapGetEnabledRawDataList message. Does not implicitly {@link NetMessage.MsgMapGetEnabledRawDataList.verify|verify} messages.
         * @param message MsgMapGetEnabledRawDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetEnabledRawDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetEnabledRawDataList message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledRawDataList.verify|verify} messages.
         * @param message MsgMapGetEnabledRawDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetEnabledRawDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetEnabledRawDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetEnabledRawDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledRawDataList;

        /**
         * Decodes a MsgMapGetEnabledRawDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetEnabledRawDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledRawDataList;

        /**
         * Verifies a MsgMapGetEnabledRawDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetEnabledRawDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetEnabledRawDataList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledRawDataList;

        /**
         * Creates a plain object from a MsgMapGetEnabledRawDataList message. Also converts values to other types if specified.
         * @param message MsgMapGetEnabledRawDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetEnabledRawDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetEnabledRawDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetEnabledRawDataList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledRawDataList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledRawDataList.IC): NetMessage.MsgMapGetEnabledRawDataList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetEnabledRawDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledRawDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledRawDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledRawDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledRawDataList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledRawDataList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledRawDataList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledRawDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Map.IMapRawData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetEnabledRawDataList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Map.IMapRawData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetEnabledRawDataList.IS): NetMessage.MsgMapGetEnabledRawDataList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetEnabledRawDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetEnabledRawDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetEnabledRawDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetEnabledRawDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetEnabledRawDataList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetEnabledRawDataList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetEnabledRawDataList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetEnabledRawDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetBriefData. */
    interface IMsgMapGetBriefData {

        /** MsgMapGetBriefData c */
        c?: (NetMessage.MsgMapGetBriefData.IC|null);

        /** MsgMapGetBriefData s */
        s?: (NetMessage.MsgMapGetBriefData.IS|null);
    }

    /** Represents a MsgMapGetBriefData. */
    class MsgMapGetBriefData implements IMsgMapGetBriefData {

        /**
         * Constructs a new MsgMapGetBriefData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetBriefData);

        /** MsgMapGetBriefData c. */
        public c?: (NetMessage.MsgMapGetBriefData.IC|null);

        /** MsgMapGetBriefData s. */
        public s?: (NetMessage.MsgMapGetBriefData.IS|null);

        /**
         * Creates a new MsgMapGetBriefData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetBriefData instance
         */
        public static create(properties?: NetMessage.IMsgMapGetBriefData): NetMessage.MsgMapGetBriefData;

        /**
         * Encodes the specified MsgMapGetBriefData message. Does not implicitly {@link NetMessage.MsgMapGetBriefData.verify|verify} messages.
         * @param message MsgMapGetBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetBriefData message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetBriefData.verify|verify} messages.
         * @param message MsgMapGetBriefData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetBriefData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetBriefData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetBriefData;

        /**
         * Decodes a MsgMapGetBriefData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetBriefData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetBriefData;

        /**
         * Verifies a MsgMapGetBriefData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetBriefData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetBriefData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetBriefData;

        /**
         * Creates a plain object from a MsgMapGetBriefData message. Also converts values to other types if specified.
         * @param message MsgMapGetBriefData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetBriefData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetBriefData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetBriefData {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetBriefData.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetBriefData.IC): NetMessage.MsgMapGetBriefData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetBriefData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetBriefData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetBriefData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetBriefData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetBriefData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetBriefData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetBriefData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetBriefData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapBriefData */
            mapBriefData?: (Map.IMapBriefData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetBriefData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapBriefData. */
            public mapBriefData?: (Map.IMapBriefData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetBriefData.IS): NetMessage.MsgMapGetBriefData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetBriefData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetBriefData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetBriefData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetBriefData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetBriefData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetBriefData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetBriefData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetBriefData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMapGetRawData. */
    interface IMsgMapGetRawData {

        /** MsgMapGetRawData c */
        c?: (NetMessage.MsgMapGetRawData.IC|null);

        /** MsgMapGetRawData s */
        s?: (NetMessage.MsgMapGetRawData.IS|null);
    }

    /** Represents a MsgMapGetRawData. */
    class MsgMapGetRawData implements IMsgMapGetRawData {

        /**
         * Constructs a new MsgMapGetRawData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMapGetRawData);

        /** MsgMapGetRawData c. */
        public c?: (NetMessage.MsgMapGetRawData.IC|null);

        /** MsgMapGetRawData s. */
        public s?: (NetMessage.MsgMapGetRawData.IS|null);

        /**
         * Creates a new MsgMapGetRawData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMapGetRawData instance
         */
        public static create(properties?: NetMessage.IMsgMapGetRawData): NetMessage.MsgMapGetRawData;

        /**
         * Encodes the specified MsgMapGetRawData message. Does not implicitly {@link NetMessage.MsgMapGetRawData.verify|verify} messages.
         * @param message MsgMapGetRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMapGetRawData message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.verify|verify} messages.
         * @param message MsgMapGetRawData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMapGetRawData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMapGetRawData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMapGetRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData;

        /**
         * Decodes a MsgMapGetRawData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMapGetRawData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData;

        /**
         * Verifies a MsgMapGetRawData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMapGetRawData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMapGetRawData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData;

        /**
         * Creates a plain object from a MsgMapGetRawData message. Also converts values to other types if specified.
         * @param message MsgMapGetRawData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMapGetRawData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMapGetRawData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMapGetRawData {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetRawData.IC);

            /** C mapId. */
            public mapId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMapGetRawData.IC): NetMessage.MsgMapGetRawData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMapGetRawData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetRawData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetRawData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mapRawData */
            mapRawData?: (Map.IMapRawData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMapGetRawData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S mapRawData. */
            public mapRawData?: (Map.IMapRawData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMapGetRawData.IS): NetMessage.MsgMapGetRawData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMapGetRawData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMapGetRawData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMapGetRawData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMapGetRawData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMapGetRawData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMapGetRawData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMapGetRawData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetMapDataList. */
    interface IMsgMeGetMapDataList {

        /** MsgMeGetMapDataList c */
        c?: (NetMessage.MsgMeGetMapDataList.IC|null);

        /** MsgMeGetMapDataList s */
        s?: (NetMessage.MsgMeGetMapDataList.IS|null);
    }

    /** Represents a MsgMeGetMapDataList. */
    class MsgMeGetMapDataList implements IMsgMeGetMapDataList {

        /**
         * Constructs a new MsgMeGetMapDataList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetMapDataList);

        /** MsgMeGetMapDataList c. */
        public c?: (NetMessage.MsgMeGetMapDataList.IC|null);

        /** MsgMeGetMapDataList s. */
        public s?: (NetMessage.MsgMeGetMapDataList.IS|null);

        /**
         * Creates a new MsgMeGetMapDataList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetMapDataList instance
         */
        public static create(properties?: NetMessage.IMsgMeGetMapDataList): NetMessage.MsgMeGetMapDataList;

        /**
         * Encodes the specified MsgMeGetMapDataList message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.verify|verify} messages.
         * @param message MsgMeGetMapDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetMapDataList message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.verify|verify} messages.
         * @param message MsgMeGetMapDataList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetMapDataList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetMapDataList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetMapDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList;

        /**
         * Decodes a MsgMeGetMapDataList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetMapDataList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList;

        /**
         * Verifies a MsgMeGetMapDataList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetMapDataList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetMapDataList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList;

        /**
         * Creates a plain object from a MsgMeGetMapDataList message. Also converts values to other types if specified.
         * @param message MsgMeGetMapDataList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetMapDataList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetMapDataList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetMapDataList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapDataList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapDataList.IC): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapDataList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapDataList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Map.IMapEditorData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapDataList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Map.IMapEditorData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapDataList.IS): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapDataList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapDataList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapDataList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapDataList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetMapData. */
    interface IMsgMeGetMapData {

        /** MsgMeGetMapData c */
        c?: (NetMessage.MsgMeGetMapData.IC|null);

        /** MsgMeGetMapData s */
        s?: (NetMessage.MsgMeGetMapData.IS|null);
    }

    /** Represents a MsgMeGetMapData. */
    class MsgMeGetMapData implements IMsgMeGetMapData {

        /**
         * Constructs a new MsgMeGetMapData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetMapData);

        /** MsgMeGetMapData c. */
        public c?: (NetMessage.MsgMeGetMapData.IC|null);

        /** MsgMeGetMapData s. */
        public s?: (NetMessage.MsgMeGetMapData.IS|null);

        /**
         * Creates a new MsgMeGetMapData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetMapData instance
         */
        public static create(properties?: NetMessage.IMsgMeGetMapData): NetMessage.MsgMeGetMapData;

        /**
         * Encodes the specified MsgMeGetMapData message. Does not implicitly {@link NetMessage.MsgMeGetMapData.verify|verify} messages.
         * @param message MsgMeGetMapData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetMapData message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.verify|verify} messages.
         * @param message MsgMeGetMapData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetMapData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetMapData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetMapData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData;

        /**
         * Decodes a MsgMeGetMapData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetMapData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData;

        /**
         * Verifies a MsgMeGetMapData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetMapData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetMapData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData;

        /**
         * Creates a plain object from a MsgMeGetMapData message. Also converts values to other types if specified.
         * @param message MsgMeGetMapData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetMapData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetMapData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetMapData {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapData.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapData.IC): NetMessage.MsgMeGetMapData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetMapData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S data */
            data?: (Map.IMapEditorData|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetMapData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S data. */
            public data?: (Map.IMapEditorData|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetMapData.IS): NetMessage.MsgMeGetMapData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetMapData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetMapData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetMapData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetMapData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetMapData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetMapData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetMapData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeSubmitMap. */
    interface IMsgMeSubmitMap {

        /** MsgMeSubmitMap c */
        c?: (NetMessage.MsgMeSubmitMap.IC|null);

        /** MsgMeSubmitMap s */
        s?: (NetMessage.MsgMeSubmitMap.IS|null);
    }

    /** Represents a MsgMeSubmitMap. */
    class MsgMeSubmitMap implements IMsgMeSubmitMap {

        /**
         * Constructs a new MsgMeSubmitMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeSubmitMap);

        /** MsgMeSubmitMap c. */
        public c?: (NetMessage.MsgMeSubmitMap.IC|null);

        /** MsgMeSubmitMap s. */
        public s?: (NetMessage.MsgMeSubmitMap.IS|null);

        /**
         * Creates a new MsgMeSubmitMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeSubmitMap instance
         */
        public static create(properties?: NetMessage.IMsgMeSubmitMap): NetMessage.MsgMeSubmitMap;

        /**
         * Encodes the specified MsgMeSubmitMap message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.verify|verify} messages.
         * @param message MsgMeSubmitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeSubmitMap message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.verify|verify} messages.
         * @param message MsgMeSubmitMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeSubmitMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeSubmitMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeSubmitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap;

        /**
         * Decodes a MsgMeSubmitMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeSubmitMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap;

        /**
         * Verifies a MsgMeSubmitMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeSubmitMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeSubmitMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap;

        /**
         * Creates a plain object from a MsgMeSubmitMap message. Also converts values to other types if specified.
         * @param message MsgMeSubmitMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeSubmitMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeSubmitMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeSubmitMap {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C mapRawData */
            mapRawData?: (Map.IMapRawData|null);

            /** C needReview */
            needReview?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitMap.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C mapRawData. */
            public mapRawData?: (Map.IMapRawData|null);

            /** C needReview. */
            public needReview: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitMap.IC): NetMessage.MsgMeSubmitMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapRawDataErrorCode */
            mapRawDataErrorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapRawDataErrorCode. */
            public mapRawDataErrorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitMap.IS): NetMessage.MsgMeSubmitMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeSubmitWarRule. */
    interface IMsgMeSubmitWarRule {

        /** MsgMeSubmitWarRule c */
        c?: (NetMessage.MsgMeSubmitWarRule.IC|null);

        /** MsgMeSubmitWarRule s */
        s?: (NetMessage.MsgMeSubmitWarRule.IS|null);
    }

    /** Represents a MsgMeSubmitWarRule. */
    class MsgMeSubmitWarRule implements IMsgMeSubmitWarRule {

        /**
         * Constructs a new MsgMeSubmitWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeSubmitWarRule);

        /** MsgMeSubmitWarRule c. */
        public c?: (NetMessage.MsgMeSubmitWarRule.IC|null);

        /** MsgMeSubmitWarRule s. */
        public s?: (NetMessage.MsgMeSubmitWarRule.IS|null);

        /**
         * Creates a new MsgMeSubmitWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeSubmitWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMeSubmitWarRule): NetMessage.MsgMeSubmitWarRule;

        /**
         * Encodes the specified MsgMeSubmitWarRule message. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.verify|verify} messages.
         * @param message MsgMeSubmitWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeSubmitWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeSubmitWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.verify|verify} messages.
         * @param message MsgMeSubmitWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeSubmitWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeSubmitWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeSubmitWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitWarRule;

        /**
         * Decodes a MsgMeSubmitWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeSubmitWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitWarRule;

        /**
         * Verifies a MsgMeSubmitWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeSubmitWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeSubmitWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitWarRule;

        /**
         * Creates a plain object from a MsgMeSubmitWarRule message. Also converts values to other types if specified.
         * @param message MsgMeSubmitWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeSubmitWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeSubmitWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeSubmitWarRule {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C warRuleList */
            warRuleList?: (WarRule.IWarRule[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitWarRule.IC);

            /** C mapId. */
            public mapId: number;

            /** C warRuleList. */
            public warRuleList: WarRule.IWarRule[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitWarRule.IC): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeSubmitWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeSubmitWarRule.IS): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeSubmitWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeSubmitWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeSubmitWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeSubmitWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeSubmitWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMeGetSubmittedWarRuleList. */
    interface IMsgMeGetSubmittedWarRuleList {

        /** MsgMeGetSubmittedWarRuleList c */
        c?: (NetMessage.MsgMeGetSubmittedWarRuleList.IC|null);

        /** MsgMeGetSubmittedWarRuleList s */
        s?: (NetMessage.MsgMeGetSubmittedWarRuleList.IS|null);
    }

    /** Represents a MsgMeGetSubmittedWarRuleList. */
    class MsgMeGetSubmittedWarRuleList implements IMsgMeGetSubmittedWarRuleList {

        /**
         * Constructs a new MsgMeGetSubmittedWarRuleList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMeGetSubmittedWarRuleList);

        /** MsgMeGetSubmittedWarRuleList c. */
        public c?: (NetMessage.MsgMeGetSubmittedWarRuleList.IC|null);

        /** MsgMeGetSubmittedWarRuleList s. */
        public s?: (NetMessage.MsgMeGetSubmittedWarRuleList.IS|null);

        /**
         * Creates a new MsgMeGetSubmittedWarRuleList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMeGetSubmittedWarRuleList instance
         */
        public static create(properties?: NetMessage.IMsgMeGetSubmittedWarRuleList): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Encodes the specified MsgMeGetSubmittedWarRuleList message. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.verify|verify} messages.
         * @param message MsgMeGetSubmittedWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMeGetSubmittedWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMeGetSubmittedWarRuleList message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.verify|verify} messages.
         * @param message MsgMeGetSubmittedWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMeGetSubmittedWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMeGetSubmittedWarRuleList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMeGetSubmittedWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Decodes a MsgMeGetSubmittedWarRuleList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMeGetSubmittedWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Verifies a MsgMeGetSubmittedWarRuleList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMeGetSubmittedWarRuleList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMeGetSubmittedWarRuleList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetSubmittedWarRuleList;

        /**
         * Creates a plain object from a MsgMeGetSubmittedWarRuleList message. Also converts values to other types if specified.
         * @param message MsgMeGetSubmittedWarRuleList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMeGetSubmittedWarRuleList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMeGetSubmittedWarRuleList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMeGetSubmittedWarRuleList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IC): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetSubmittedWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetSubmittedWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetSubmittedWarRuleList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetSubmittedWarRuleList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Structure.IDataForReviewWarRule[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Structure.IDataForReviewWarRule[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMeGetSubmittedWarRuleList.IS): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMeGetSubmittedWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMeGetSubmittedWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMeGetSubmittedWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMeGetSubmittedWarRuleList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMeGetSubmittedWarRuleList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatAddMessage. */
    interface IMsgChatAddMessage {

        /** MsgChatAddMessage c */
        c?: (NetMessage.MsgChatAddMessage.IC|null);

        /** MsgChatAddMessage s */
        s?: (NetMessage.MsgChatAddMessage.IS|null);
    }

    /** Represents a MsgChatAddMessage. */
    class MsgChatAddMessage implements IMsgChatAddMessage {

        /**
         * Constructs a new MsgChatAddMessage.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatAddMessage);

        /** MsgChatAddMessage c. */
        public c?: (NetMessage.MsgChatAddMessage.IC|null);

        /** MsgChatAddMessage s. */
        public s?: (NetMessage.MsgChatAddMessage.IS|null);

        /**
         * Creates a new MsgChatAddMessage instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatAddMessage instance
         */
        public static create(properties?: NetMessage.IMsgChatAddMessage): NetMessage.MsgChatAddMessage;

        /**
         * Encodes the specified MsgChatAddMessage message. Does not implicitly {@link NetMessage.MsgChatAddMessage.verify|verify} messages.
         * @param message MsgChatAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatAddMessage message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.verify|verify} messages.
         * @param message MsgChatAddMessage message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatAddMessage, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatAddMessage message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage;

        /**
         * Decodes a MsgChatAddMessage message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatAddMessage
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage;

        /**
         * Verifies a MsgChatAddMessage message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatAddMessage message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatAddMessage
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage;

        /**
         * Creates a plain object from a MsgChatAddMessage message. Also converts values to other types if specified.
         * @param message MsgChatAddMessage
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatAddMessage, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatAddMessage to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatAddMessage {

        /** Properties of a C. */
        interface IC {

            /** C toCategory */
            toCategory?: (number|null);

            /** C toTarget */
            toTarget?: (number|null);

            /** C content */
            content?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatAddMessage.IC);

            /** C toCategory. */
            public toCategory: number;

            /** C toTarget. */
            public toTarget: number;

            /** C content. */
            public content: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatAddMessage.IC): NetMessage.MsgChatAddMessage.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatAddMessage.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatAddMessage.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S message */
            message?: (Chat.IChatMessage|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatAddMessage.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S message. */
            public message?: (Chat.IChatMessage|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatAddMessage.IS): NetMessage.MsgChatAddMessage.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatAddMessage.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatAddMessage.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatAddMessage.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatAddMessage.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatAddMessage.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatAddMessage.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatGetAllMessages. */
    interface IMsgChatGetAllMessages {

        /** MsgChatGetAllMessages c */
        c?: (NetMessage.MsgChatGetAllMessages.IC|null);

        /** MsgChatGetAllMessages s */
        s?: (NetMessage.MsgChatGetAllMessages.IS|null);
    }

    /** Represents a MsgChatGetAllMessages. */
    class MsgChatGetAllMessages implements IMsgChatGetAllMessages {

        /**
         * Constructs a new MsgChatGetAllMessages.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatGetAllMessages);

        /** MsgChatGetAllMessages c. */
        public c?: (NetMessage.MsgChatGetAllMessages.IC|null);

        /** MsgChatGetAllMessages s. */
        public s?: (NetMessage.MsgChatGetAllMessages.IS|null);

        /**
         * Creates a new MsgChatGetAllMessages instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatGetAllMessages instance
         */
        public static create(properties?: NetMessage.IMsgChatGetAllMessages): NetMessage.MsgChatGetAllMessages;

        /**
         * Encodes the specified MsgChatGetAllMessages message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.verify|verify} messages.
         * @param message MsgChatGetAllMessages message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatGetAllMessages message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.verify|verify} messages.
         * @param message MsgChatGetAllMessages message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatGetAllMessages, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatGetAllMessages message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatGetAllMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages;

        /**
         * Decodes a MsgChatGetAllMessages message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatGetAllMessages
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages;

        /**
         * Verifies a MsgChatGetAllMessages message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatGetAllMessages message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatGetAllMessages
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages;

        /**
         * Creates a plain object from a MsgChatGetAllMessages message. Also converts values to other types if specified.
         * @param message MsgChatGetAllMessages
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatGetAllMessages, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatGetAllMessages to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatGetAllMessages {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllMessages.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllMessages.IC): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllMessages.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllMessages.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S messageList */
            messageList?: (Chat.IChatMessage[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllMessages.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S messageList. */
            public messageList: Chat.IChatMessage[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllMessages.IS): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllMessages.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllMessages.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllMessages.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllMessages.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatUpdateReadProgress. */
    interface IMsgChatUpdateReadProgress {

        /** MsgChatUpdateReadProgress c */
        c?: (NetMessage.MsgChatUpdateReadProgress.IC|null);

        /** MsgChatUpdateReadProgress s */
        s?: (NetMessage.MsgChatUpdateReadProgress.IS|null);
    }

    /** Represents a MsgChatUpdateReadProgress. */
    class MsgChatUpdateReadProgress implements IMsgChatUpdateReadProgress {

        /**
         * Constructs a new MsgChatUpdateReadProgress.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatUpdateReadProgress);

        /** MsgChatUpdateReadProgress c. */
        public c?: (NetMessage.MsgChatUpdateReadProgress.IC|null);

        /** MsgChatUpdateReadProgress s. */
        public s?: (NetMessage.MsgChatUpdateReadProgress.IS|null);

        /**
         * Creates a new MsgChatUpdateReadProgress instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatUpdateReadProgress instance
         */
        public static create(properties?: NetMessage.IMsgChatUpdateReadProgress): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Encodes the specified MsgChatUpdateReadProgress message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
         * @param message MsgChatUpdateReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatUpdateReadProgress message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.verify|verify} messages.
         * @param message MsgChatUpdateReadProgress message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatUpdateReadProgress, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatUpdateReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Decodes a MsgChatUpdateReadProgress message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatUpdateReadProgress
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Verifies a MsgChatUpdateReadProgress message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatUpdateReadProgress message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatUpdateReadProgress
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress;

        /**
         * Creates a plain object from a MsgChatUpdateReadProgress message. Also converts values to other types if specified.
         * @param message MsgChatUpdateReadProgress
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatUpdateReadProgress, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatUpdateReadProgress to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatUpdateReadProgress {

        /** Properties of a C. */
        interface IC {

            /** C progress */
            progress?: (Chat.IChatReadProgress|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatUpdateReadProgress.IC);

            /** C progress. */
            public progress?: (Chat.IChatReadProgress|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatUpdateReadProgress.IC): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatUpdateReadProgress.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatUpdateReadProgress.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S progress */
            progress?: (Chat.IChatReadProgress|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatUpdateReadProgress.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S progress. */
            public progress?: (Chat.IChatReadProgress|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatUpdateReadProgress.IS): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatUpdateReadProgress.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatUpdateReadProgress.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatUpdateReadProgress.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatUpdateReadProgress.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgChatGetAllReadProgressList. */
    interface IMsgChatGetAllReadProgressList {

        /** MsgChatGetAllReadProgressList c */
        c?: (NetMessage.MsgChatGetAllReadProgressList.IC|null);

        /** MsgChatGetAllReadProgressList s */
        s?: (NetMessage.MsgChatGetAllReadProgressList.IS|null);
    }

    /** Represents a MsgChatGetAllReadProgressList. */
    class MsgChatGetAllReadProgressList implements IMsgChatGetAllReadProgressList {

        /**
         * Constructs a new MsgChatGetAllReadProgressList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgChatGetAllReadProgressList);

        /** MsgChatGetAllReadProgressList c. */
        public c?: (NetMessage.MsgChatGetAllReadProgressList.IC|null);

        /** MsgChatGetAllReadProgressList s. */
        public s?: (NetMessage.MsgChatGetAllReadProgressList.IS|null);

        /**
         * Creates a new MsgChatGetAllReadProgressList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgChatGetAllReadProgressList instance
         */
        public static create(properties?: NetMessage.IMsgChatGetAllReadProgressList): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Encodes the specified MsgChatGetAllReadProgressList message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
         * @param message MsgChatGetAllReadProgressList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgChatGetAllReadProgressList message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.verify|verify} messages.
         * @param message MsgChatGetAllReadProgressList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgChatGetAllReadProgressList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgChatGetAllReadProgressList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Decodes a MsgChatGetAllReadProgressList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgChatGetAllReadProgressList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Verifies a MsgChatGetAllReadProgressList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgChatGetAllReadProgressList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgChatGetAllReadProgressList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList;

        /**
         * Creates a plain object from a MsgChatGetAllReadProgressList message. Also converts values to other types if specified.
         * @param message MsgChatGetAllReadProgressList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgChatGetAllReadProgressList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgChatGetAllReadProgressList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgChatGetAllReadProgressList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllReadProgressList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllReadProgressList.IC): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllReadProgressList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllReadProgressList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S list */
            list?: (Chat.IChatReadProgress[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgChatGetAllReadProgressList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S list. */
            public list: Chat.IChatReadProgress[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgChatGetAllReadProgressList.IS): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgChatGetAllReadProgressList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgChatGetAllReadProgressList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgChatGetAllReadProgressList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgChatGetAllReadProgressList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapAvailability. */
    interface IMsgMmSetMapAvailability {

        /** MsgMmSetMapAvailability c */
        c?: (NetMessage.MsgMmSetMapAvailability.IC|null);

        /** MsgMmSetMapAvailability s */
        s?: (NetMessage.MsgMmSetMapAvailability.IS|null);
    }

    /** Represents a MsgMmSetMapAvailability. */
    class MsgMmSetMapAvailability implements IMsgMmSetMapAvailability {

        /**
         * Constructs a new MsgMmSetMapAvailability.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapAvailability);

        /** MsgMmSetMapAvailability c. */
        public c?: (NetMessage.MsgMmSetMapAvailability.IC|null);

        /** MsgMmSetMapAvailability s. */
        public s?: (NetMessage.MsgMmSetMapAvailability.IS|null);

        /**
         * Creates a new MsgMmSetMapAvailability instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapAvailability instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapAvailability): NetMessage.MsgMmSetMapAvailability;

        /**
         * Encodes the specified MsgMmSetMapAvailability message. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.verify|verify} messages.
         * @param message MsgMmSetMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapAvailability message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.verify|verify} messages.
         * @param message MsgMmSetMapAvailability message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapAvailability, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapAvailability message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapAvailability;

        /**
         * Decodes a MsgMmSetMapAvailability message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapAvailability
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapAvailability;

        /**
         * Verifies a MsgMmSetMapAvailability message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapAvailability message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapAvailability
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapAvailability;

        /**
         * Creates a plain object from a MsgMmSetMapAvailability message. Also converts values to other types if specified.
         * @param message MsgMmSetMapAvailability
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapAvailability, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapAvailability to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapAvailability {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C availability */
            availability?: (Map.IDataForMapAvailability|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapAvailability.IC);

            /** C mapId. */
            public mapId: number;

            /** C availability. */
            public availability?: (Map.IDataForMapAvailability|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapAvailability.IC): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapAvailability.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapAvailability.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapAvailability.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S availability */
            availability?: (Map.IDataForMapAvailability|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapAvailability.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S availability. */
            public availability?: (Map.IDataForMapAvailability|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapAvailability.IS): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapAvailability.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapAvailability.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapAvailability.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapAvailability.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReloadAllMaps. */
    interface IMsgMmReloadAllMaps {

        /** MsgMmReloadAllMaps c */
        c?: (NetMessage.MsgMmReloadAllMaps.IC|null);

        /** MsgMmReloadAllMaps s */
        s?: (NetMessage.MsgMmReloadAllMaps.IS|null);
    }

    /** Represents a MsgMmReloadAllMaps. */
    class MsgMmReloadAllMaps implements IMsgMmReloadAllMaps {

        /**
         * Constructs a new MsgMmReloadAllMaps.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReloadAllMaps);

        /** MsgMmReloadAllMaps c. */
        public c?: (NetMessage.MsgMmReloadAllMaps.IC|null);

        /** MsgMmReloadAllMaps s. */
        public s?: (NetMessage.MsgMmReloadAllMaps.IS|null);

        /**
         * Creates a new MsgMmReloadAllMaps instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReloadAllMaps instance
         */
        public static create(properties?: NetMessage.IMsgMmReloadAllMaps): NetMessage.MsgMmReloadAllMaps;

        /**
         * Encodes the specified MsgMmReloadAllMaps message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
         * @param message MsgMmReloadAllMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReloadAllMaps message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.verify|verify} messages.
         * @param message MsgMmReloadAllMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReloadAllMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReloadAllMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps;

        /**
         * Decodes a MsgMmReloadAllMaps message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReloadAllMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps;

        /**
         * Verifies a MsgMmReloadAllMaps message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReloadAllMaps message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReloadAllMaps
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps;

        /**
         * Creates a plain object from a MsgMmReloadAllMaps message. Also converts values to other types if specified.
         * @param message MsgMmReloadAllMaps
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReloadAllMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReloadAllMaps to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReloadAllMaps {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReloadAllMaps.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReloadAllMaps.IC): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReloadAllMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReloadAllMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReloadAllMaps.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReloadAllMaps.IS): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReloadAllMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReloadAllMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReloadAllMaps.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReloadAllMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapEnabled. */
    interface IMsgMmSetMapEnabled {

        /** MsgMmSetMapEnabled c */
        c?: (NetMessage.MsgMmSetMapEnabled.IC|null);

        /** MsgMmSetMapEnabled s */
        s?: (NetMessage.MsgMmSetMapEnabled.IS|null);
    }

    /** Represents a MsgMmSetMapEnabled. */
    class MsgMmSetMapEnabled implements IMsgMmSetMapEnabled {

        /**
         * Constructs a new MsgMmSetMapEnabled.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapEnabled);

        /** MsgMmSetMapEnabled c. */
        public c?: (NetMessage.MsgMmSetMapEnabled.IC|null);

        /** MsgMmSetMapEnabled s. */
        public s?: (NetMessage.MsgMmSetMapEnabled.IS|null);

        /**
         * Creates a new MsgMmSetMapEnabled instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapEnabled instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapEnabled): NetMessage.MsgMmSetMapEnabled;

        /**
         * Encodes the specified MsgMmSetMapEnabled message. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.verify|verify} messages.
         * @param message MsgMmSetMapEnabled message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapEnabled, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapEnabled message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.verify|verify} messages.
         * @param message MsgMmSetMapEnabled message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapEnabled, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapEnabled message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapEnabled
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapEnabled;

        /**
         * Decodes a MsgMmSetMapEnabled message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapEnabled
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapEnabled;

        /**
         * Verifies a MsgMmSetMapEnabled message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapEnabled message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapEnabled
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapEnabled;

        /**
         * Creates a plain object from a MsgMmSetMapEnabled message. Also converts values to other types if specified.
         * @param message MsgMmSetMapEnabled
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapEnabled, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapEnabled to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapEnabled {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C isEnabled */
            isEnabled?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapEnabled.IC);

            /** C mapId. */
            public mapId: number;

            /** C isEnabled. */
            public isEnabled: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapEnabled.IC): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapEnabled.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapEnabled.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapEnabled.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapEnabled.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S isEnabled */
            isEnabled?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapEnabled.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S mapId. */
            public mapId: number;

            /** S isEnabled. */
            public isEnabled: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapEnabled.IS): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapEnabled.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapEnabled.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapEnabled.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapEnabled.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapEnabled.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmGetReviewingMaps. */
    interface IMsgMmGetReviewingMaps {

        /** MsgMmGetReviewingMaps c */
        c?: (NetMessage.MsgMmGetReviewingMaps.IC|null);

        /** MsgMmGetReviewingMaps s */
        s?: (NetMessage.MsgMmGetReviewingMaps.IS|null);
    }

    /** Represents a MsgMmGetReviewingMaps. */
    class MsgMmGetReviewingMaps implements IMsgMmGetReviewingMaps {

        /**
         * Constructs a new MsgMmGetReviewingMaps.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmGetReviewingMaps);

        /** MsgMmGetReviewingMaps c. */
        public c?: (NetMessage.MsgMmGetReviewingMaps.IC|null);

        /** MsgMmGetReviewingMaps s. */
        public s?: (NetMessage.MsgMmGetReviewingMaps.IS|null);

        /**
         * Creates a new MsgMmGetReviewingMaps instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmGetReviewingMaps instance
         */
        public static create(properties?: NetMessage.IMsgMmGetReviewingMaps): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Encodes the specified MsgMmGetReviewingMaps message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
         * @param message MsgMmGetReviewingMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmGetReviewingMaps message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.verify|verify} messages.
         * @param message MsgMmGetReviewingMaps message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmGetReviewingMaps, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmGetReviewingMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Decodes a MsgMmGetReviewingMaps message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmGetReviewingMaps
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Verifies a MsgMmGetReviewingMaps message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmGetReviewingMaps message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmGetReviewingMaps
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps;

        /**
         * Creates a plain object from a MsgMmGetReviewingMaps message. Also converts values to other types if specified.
         * @param message MsgMmGetReviewingMaps
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmGetReviewingMaps, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmGetReviewingMaps to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmGetReviewingMaps {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingMaps.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingMaps.IC): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingMaps.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingMaps.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maps */
            maps?: (Map.IMapEditorData[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingMaps.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maps. */
            public maps: Map.IMapEditorData[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingMaps.IS): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingMaps.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingMaps.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingMaps.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingMaps.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReviewMap. */
    interface IMsgMmReviewMap {

        /** MsgMmReviewMap c */
        c?: (NetMessage.MsgMmReviewMap.IC|null);

        /** MsgMmReviewMap s */
        s?: (NetMessage.MsgMmReviewMap.IS|null);
    }

    /** Represents a MsgMmReviewMap. */
    class MsgMmReviewMap implements IMsgMmReviewMap {

        /**
         * Constructs a new MsgMmReviewMap.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReviewMap);

        /** MsgMmReviewMap c. */
        public c?: (NetMessage.MsgMmReviewMap.IC|null);

        /** MsgMmReviewMap s. */
        public s?: (NetMessage.MsgMmReviewMap.IS|null);

        /**
         * Creates a new MsgMmReviewMap instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReviewMap instance
         */
        public static create(properties?: NetMessage.IMsgMmReviewMap): NetMessage.MsgMmReviewMap;

        /**
         * Encodes the specified MsgMmReviewMap message. Does not implicitly {@link NetMessage.MsgMmReviewMap.verify|verify} messages.
         * @param message MsgMmReviewMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReviewMap message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.verify|verify} messages.
         * @param message MsgMmReviewMap message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReviewMap, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReviewMap message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReviewMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap;

        /**
         * Decodes a MsgMmReviewMap message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReviewMap
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap;

        /**
         * Verifies a MsgMmReviewMap message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReviewMap message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReviewMap
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap;

        /**
         * Creates a plain object from a MsgMmReviewMap message. Also converts values to other types if specified.
         * @param message MsgMmReviewMap
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReviewMap, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReviewMap to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReviewMap {

        /** Properties of a C. */
        interface IC {

            /** C designerUserId */
            designerUserId?: (number|null);

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C modifiedTime */
            modifiedTime?: (number|null);

            /** C isAccept */
            isAccept?: (boolean|null);

            /** C reviewComment */
            reviewComment?: (string|null);

            /** C availability */
            availability?: (Map.IDataForMapAvailability|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewMap.IC);

            /** C designerUserId. */
            public designerUserId: number;

            /** C slotIndex. */
            public slotIndex: number;

            /** C modifiedTime. */
            public modifiedTime: number;

            /** C isAccept. */
            public isAccept: boolean;

            /** C reviewComment. */
            public reviewComment: string;

            /** C availability. */
            public availability?: (Map.IDataForMapAvailability|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReviewMap.IC): NetMessage.MsgMmReviewMap.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReviewMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewMap.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewMap.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S isAccept */
            isAccept?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewMap.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S isAccept. */
            public isAccept: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReviewMap.IS): NetMessage.MsgMmReviewMap.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReviewMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewMap.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewMap.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewMap.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewMap.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewMap.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewMap.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmGetReviewingWarRuleList. */
    interface IMsgMmGetReviewingWarRuleList {

        /** MsgMmGetReviewingWarRuleList c */
        c?: (NetMessage.MsgMmGetReviewingWarRuleList.IC|null);

        /** MsgMmGetReviewingWarRuleList s */
        s?: (NetMessage.MsgMmGetReviewingWarRuleList.IS|null);
    }

    /** Represents a MsgMmGetReviewingWarRuleList. */
    class MsgMmGetReviewingWarRuleList implements IMsgMmGetReviewingWarRuleList {

        /**
         * Constructs a new MsgMmGetReviewingWarRuleList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmGetReviewingWarRuleList);

        /** MsgMmGetReviewingWarRuleList c. */
        public c?: (NetMessage.MsgMmGetReviewingWarRuleList.IC|null);

        /** MsgMmGetReviewingWarRuleList s. */
        public s?: (NetMessage.MsgMmGetReviewingWarRuleList.IS|null);

        /**
         * Creates a new MsgMmGetReviewingWarRuleList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmGetReviewingWarRuleList instance
         */
        public static create(properties?: NetMessage.IMsgMmGetReviewingWarRuleList): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Encodes the specified MsgMmGetReviewingWarRuleList message. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.verify|verify} messages.
         * @param message MsgMmGetReviewingWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmGetReviewingWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmGetReviewingWarRuleList message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.verify|verify} messages.
         * @param message MsgMmGetReviewingWarRuleList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmGetReviewingWarRuleList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmGetReviewingWarRuleList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmGetReviewingWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Decodes a MsgMmGetReviewingWarRuleList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmGetReviewingWarRuleList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Verifies a MsgMmGetReviewingWarRuleList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmGetReviewingWarRuleList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmGetReviewingWarRuleList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingWarRuleList;

        /**
         * Creates a plain object from a MsgMmGetReviewingWarRuleList message. Also converts values to other types if specified.
         * @param message MsgMmGetReviewingWarRuleList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmGetReviewingWarRuleList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmGetReviewingWarRuleList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmGetReviewingWarRuleList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IC): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingWarRuleList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingWarRuleList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingWarRuleList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S dataList */
            dataList?: (Structure.IDataForReviewWarRule[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S dataList. */
            public dataList: Structure.IDataForReviewWarRule[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmGetReviewingWarRuleList.IS): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmGetReviewingWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmGetReviewingWarRuleList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmGetReviewingWarRuleList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmGetReviewingWarRuleList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmGetReviewingWarRuleList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmReviewWarRule. */
    interface IMsgMmReviewWarRule {

        /** MsgMmReviewWarRule c */
        c?: (NetMessage.MsgMmReviewWarRule.IC|null);

        /** MsgMmReviewWarRule s */
        s?: (NetMessage.MsgMmReviewWarRule.IS|null);
    }

    /** Represents a MsgMmReviewWarRule. */
    class MsgMmReviewWarRule implements IMsgMmReviewWarRule {

        /**
         * Constructs a new MsgMmReviewWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmReviewWarRule);

        /** MsgMmReviewWarRule c. */
        public c?: (NetMessage.MsgMmReviewWarRule.IC|null);

        /** MsgMmReviewWarRule s. */
        public s?: (NetMessage.MsgMmReviewWarRule.IS|null);

        /**
         * Creates a new MsgMmReviewWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmReviewWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMmReviewWarRule): NetMessage.MsgMmReviewWarRule;

        /**
         * Encodes the specified MsgMmReviewWarRule message. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.verify|verify} messages.
         * @param message MsgMmReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmReviewWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.verify|verify} messages.
         * @param message MsgMmReviewWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmReviewWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmReviewWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewWarRule;

        /**
         * Decodes a MsgMmReviewWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmReviewWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewWarRule;

        /**
         * Verifies a MsgMmReviewWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmReviewWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmReviewWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewWarRule;

        /**
         * Creates a plain object from a MsgMmReviewWarRule message. Also converts values to other types if specified.
         * @param message MsgMmReviewWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmReviewWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmReviewWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmReviewWarRule {

        /** Properties of a C. */
        interface IC {

            /** C submitterUserId */
            submitterUserId?: (number|null);

            /** C submitTimestamp */
            submitTimestamp?: (number|null);

            /** C isAccept */
            isAccept?: (boolean|null);

            /** C reviewComment */
            reviewComment?: (string|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewWarRule.IC);

            /** C submitterUserId. */
            public submitterUserId: number;

            /** C submitTimestamp. */
            public submitTimestamp: number;

            /** C isAccept. */
            public isAccept: boolean;

            /** C reviewComment. */
            public reviewComment: string;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmReviewWarRule.IC): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S isAccept */
            isAccept?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmReviewWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S isAccept. */
            public isAccept: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmReviewWarRule.IS): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmReviewWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmReviewWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmReviewWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmReviewWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmReviewWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMmSetMapTag. */
    interface IMsgMmSetMapTag {

        /** MsgMmSetMapTag c */
        c?: (NetMessage.MsgMmSetMapTag.IC|null);

        /** MsgMmSetMapTag s */
        s?: (NetMessage.MsgMmSetMapTag.IS|null);
    }

    /** Represents a MsgMmSetMapTag. */
    class MsgMmSetMapTag implements IMsgMmSetMapTag {

        /**
         * Constructs a new MsgMmSetMapTag.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMmSetMapTag);

        /** MsgMmSetMapTag c. */
        public c?: (NetMessage.MsgMmSetMapTag.IC|null);

        /** MsgMmSetMapTag s. */
        public s?: (NetMessage.MsgMmSetMapTag.IS|null);

        /**
         * Creates a new MsgMmSetMapTag instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMmSetMapTag instance
         */
        public static create(properties?: NetMessage.IMsgMmSetMapTag): NetMessage.MsgMmSetMapTag;

        /**
         * Encodes the specified MsgMmSetMapTag message. Does not implicitly {@link NetMessage.MsgMmSetMapTag.verify|verify} messages.
         * @param message MsgMmSetMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMmSetMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMmSetMapTag message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapTag.verify|verify} messages.
         * @param message MsgMmSetMapTag message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMmSetMapTag, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMmSetMapTag message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMmSetMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapTag;

        /**
         * Decodes a MsgMmSetMapTag message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMmSetMapTag
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapTag;

        /**
         * Verifies a MsgMmSetMapTag message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMmSetMapTag message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMmSetMapTag
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapTag;

        /**
         * Creates a plain object from a MsgMmSetMapTag message. Also converts values to other types if specified.
         * @param message MsgMmSetMapTag
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMmSetMapTag, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMmSetMapTag to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMmSetMapTag {

        /** Properties of a C. */
        interface IC {

            /** C mapId */
            mapId?: (number|null);

            /** C mapTag */
            mapTag?: (Map.IDataForMapTag|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapTag.IC);

            /** C mapId. */
            public mapId: number;

            /** C mapTag. */
            public mapTag?: (Map.IDataForMapTag|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapTag.IC): NetMessage.MsgMmSetMapTag.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMmSetMapTag.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapTag.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapTag.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapTag.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapTag.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapTag.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapTag.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapTag.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMmSetMapTag.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMmSetMapTag.IS): NetMessage.MsgMmSetMapTag.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMmSetMapTag.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMmSetMapTag.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMmSetMapTag.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMmSetMapTag.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMmSetMapTag.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMmSetMapTag.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMmSetMapTag.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMmSetMapTag.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplaySetRating. */
    interface IMsgReplaySetRating {

        /** MsgReplaySetRating c */
        c?: (NetMessage.MsgReplaySetRating.IC|null);

        /** MsgReplaySetRating s */
        s?: (NetMessage.MsgReplaySetRating.IS|null);
    }

    /** Represents a MsgReplaySetRating. */
    class MsgReplaySetRating implements IMsgReplaySetRating {

        /**
         * Constructs a new MsgReplaySetRating.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplaySetRating);

        /** MsgReplaySetRating c. */
        public c?: (NetMessage.MsgReplaySetRating.IC|null);

        /** MsgReplaySetRating s. */
        public s?: (NetMessage.MsgReplaySetRating.IS|null);

        /**
         * Creates a new MsgReplaySetRating instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplaySetRating instance
         */
        public static create(properties?: NetMessage.IMsgReplaySetRating): NetMessage.MsgReplaySetRating;

        /**
         * Encodes the specified MsgReplaySetRating message. Does not implicitly {@link NetMessage.MsgReplaySetRating.verify|verify} messages.
         * @param message MsgReplaySetRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplaySetRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplaySetRating message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetRating.verify|verify} messages.
         * @param message MsgReplaySetRating message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplaySetRating, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplaySetRating message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplaySetRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetRating;

        /**
         * Decodes a MsgReplaySetRating message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplaySetRating
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetRating;

        /**
         * Verifies a MsgReplaySetRating message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplaySetRating message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplaySetRating
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetRating;

        /**
         * Creates a plain object from a MsgReplaySetRating message. Also converts values to other types if specified.
         * @param message MsgReplaySetRating
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplaySetRating, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplaySetRating to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplaySetRating {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);

            /** C rating */
            rating?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplaySetRating.IC);

            /** C replayId. */
            public replayId: number;

            /** C rating. */
            public rating: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplaySetRating.IC): NetMessage.MsgReplaySetRating.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplaySetRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplaySetRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetRating.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplaySetRating.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetRating.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetRating.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetRating.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplaySetRating.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplaySetRating.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplaySetRating.IS): NetMessage.MsgReplaySetRating.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplaySetRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplaySetRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplaySetRating.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplaySetRating.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplaySetRating.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplaySetRating.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplaySetRating.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplaySetRating.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetInfoList. */
    interface IMsgReplayGetInfoList {

        /** MsgReplayGetInfoList c */
        c?: (NetMessage.MsgReplayGetInfoList.IC|null);

        /** MsgReplayGetInfoList s */
        s?: (NetMessage.MsgReplayGetInfoList.IS|null);
    }

    /** Represents a MsgReplayGetInfoList. */
    class MsgReplayGetInfoList implements IMsgReplayGetInfoList {

        /**
         * Constructs a new MsgReplayGetInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetInfoList);

        /** MsgReplayGetInfoList c. */
        public c?: (NetMessage.MsgReplayGetInfoList.IC|null);

        /** MsgReplayGetInfoList s. */
        public s?: (NetMessage.MsgReplayGetInfoList.IS|null);

        /**
         * Creates a new MsgReplayGetInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetInfoList instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetInfoList): NetMessage.MsgReplayGetInfoList;

        /**
         * Encodes the specified MsgReplayGetInfoList message. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.verify|verify} messages.
         * @param message MsgReplayGetInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.verify|verify} messages.
         * @param message MsgReplayGetInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetInfoList;

        /**
         * Decodes a MsgReplayGetInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetInfoList;

        /**
         * Verifies a MsgReplayGetInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetInfoList;

        /**
         * Creates a plain object from a MsgReplayGetInfoList message. Also converts values to other types if specified.
         * @param message MsgReplayGetInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetInfoList {

        /** Properties of a C. */
        interface IC {

            /** C replayFilter */
            replayFilter?: (Replay.IReplayFilter|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetInfoList.IC);

            /** C replayFilter. */
            public replayFilter?: (Replay.IReplayFilter|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetInfoList.IC): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (Replay.IReplayInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: Replay.IReplayInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetInfoList.IS): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgReplayGetData. */
    interface IMsgReplayGetData {

        /** MsgReplayGetData c */
        c?: (NetMessage.MsgReplayGetData.IC|null);

        /** MsgReplayGetData s */
        s?: (NetMessage.MsgReplayGetData.IS|null);
    }

    /** Represents a MsgReplayGetData. */
    class MsgReplayGetData implements IMsgReplayGetData {

        /**
         * Constructs a new MsgReplayGetData.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgReplayGetData);

        /** MsgReplayGetData c. */
        public c?: (NetMessage.MsgReplayGetData.IC|null);

        /** MsgReplayGetData s. */
        public s?: (NetMessage.MsgReplayGetData.IS|null);

        /**
         * Creates a new MsgReplayGetData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgReplayGetData instance
         */
        public static create(properties?: NetMessage.IMsgReplayGetData): NetMessage.MsgReplayGetData;

        /**
         * Encodes the specified MsgReplayGetData message. Does not implicitly {@link NetMessage.MsgReplayGetData.verify|verify} messages.
         * @param message MsgReplayGetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgReplayGetData message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.verify|verify} messages.
         * @param message MsgReplayGetData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgReplayGetData, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgReplayGetData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgReplayGetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData;

        /**
         * Decodes a MsgReplayGetData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgReplayGetData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData;

        /**
         * Verifies a MsgReplayGetData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgReplayGetData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgReplayGetData
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData;

        /**
         * Creates a plain object from a MsgReplayGetData message. Also converts values to other types if specified.
         * @param message MsgReplayGetData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgReplayGetData, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgReplayGetData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgReplayGetData {

        /** Properties of a C. */
        interface IC {

            /** C replayId */
            replayId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetData.IC);

            /** C replayId. */
            public replayId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgReplayGetData.IC): NetMessage.MsgReplayGetData.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgReplayGetData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetData.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetData.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S replayId */
            replayId?: (number|null);

            /** S encodedWar */
            encodedWar?: (Uint8Array|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgReplayGetData.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S replayId. */
            public replayId: number;

            /** S encodedWar. */
            public encodedWar: Uint8Array;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgReplayGetData.IS): NetMessage.MsgReplayGetData.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgReplayGetData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgReplayGetData.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgReplayGetData.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgReplayGetData.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgReplayGetData.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgReplayGetData.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgReplayGetData.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrCreateRoom. */
    interface IMsgMcrCreateRoom {

        /** MsgMcrCreateRoom c */
        c?: (NetMessage.MsgMcrCreateRoom.IC|null);

        /** MsgMcrCreateRoom s */
        s?: (NetMessage.MsgMcrCreateRoom.IS|null);
    }

    /** Represents a MsgMcrCreateRoom. */
    class MsgMcrCreateRoom implements IMsgMcrCreateRoom {

        /**
         * Constructs a new MsgMcrCreateRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrCreateRoom);

        /** MsgMcrCreateRoom c. */
        public c?: (NetMessage.MsgMcrCreateRoom.IC|null);

        /** MsgMcrCreateRoom s. */
        public s?: (NetMessage.MsgMcrCreateRoom.IS|null);

        /**
         * Creates a new MsgMcrCreateRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrCreateRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrCreateRoom): NetMessage.MsgMcrCreateRoom;

        /**
         * Encodes the specified MsgMcrCreateRoom message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.verify|verify} messages.
         * @param message MsgMcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrCreateRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.verify|verify} messages.
         * @param message MsgMcrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrCreateRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom;

        /**
         * Decodes a MsgMcrCreateRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom;

        /**
         * Verifies a MsgMcrCreateRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrCreateRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrCreateRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom;

        /**
         * Creates a plain object from a MsgMcrCreateRoom message. Also converts values to other types if specified.
         * @param message MsgMcrCreateRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrCreateRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrCreateRoom {

        /** Properties of a C. */
        interface IC {

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForMcw */
            settingsForMcw?: (WarSettings.ISettingsForMcw|null);

            /** C selfPlayerIndex */
            selfPlayerIndex?: (number|null);

            /** C selfCoId */
            selfCoId?: (number|null);

            /** C selfUnitAndTileSkinId */
            selfUnitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrCreateRoom.IC);

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForMcw. */
            public settingsForMcw?: (WarSettings.ISettingsForMcw|null);

            /** C selfPlayerIndex. */
            public selfPlayerIndex: number;

            /** C selfCoId. */
            public selfCoId: number;

            /** C selfUnitAndTileSkinId. */
            public selfUnitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrCreateRoom.IC): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrCreateRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrCreateRoom.IS): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrCreateRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrExitRoom. */
    interface IMsgMcrExitRoom {

        /** MsgMcrExitRoom c */
        c?: (NetMessage.MsgMcrExitRoom.IC|null);

        /** MsgMcrExitRoom s */
        s?: (NetMessage.MsgMcrExitRoom.IS|null);
    }

    /** Represents a MsgMcrExitRoom. */
    class MsgMcrExitRoom implements IMsgMcrExitRoom {

        /**
         * Constructs a new MsgMcrExitRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrExitRoom);

        /** MsgMcrExitRoom c. */
        public c?: (NetMessage.MsgMcrExitRoom.IC|null);

        /** MsgMcrExitRoom s. */
        public s?: (NetMessage.MsgMcrExitRoom.IS|null);

        /**
         * Creates a new MsgMcrExitRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrExitRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrExitRoom): NetMessage.MsgMcrExitRoom;

        /**
         * Encodes the specified MsgMcrExitRoom message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.verify|verify} messages.
         * @param message MsgMcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrExitRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.verify|verify} messages.
         * @param message MsgMcrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrExitRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom;

        /**
         * Decodes a MsgMcrExitRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom;

        /**
         * Verifies a MsgMcrExitRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrExitRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrExitRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom;

        /**
         * Creates a plain object from a MsgMcrExitRoom message. Also converts values to other types if specified.
         * @param message MsgMcrExitRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrExitRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrExitRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrExitRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrExitRoom.IC): NetMessage.MsgMcrExitRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrExitRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrExitRoom.IS): NetMessage.MsgMcrExitRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrExitRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrExitRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrExitRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetJoinedRoomInfoList. */
    interface IMsgMcrGetJoinedRoomInfoList {

        /** MsgMcrGetJoinedRoomInfoList c */
        c?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IC|null);

        /** MsgMcrGetJoinedRoomInfoList s */
        s?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IS|null);
    }

    /** Represents a MsgMcrGetJoinedRoomInfoList. */
    class MsgMcrGetJoinedRoomInfoList implements IMsgMcrGetJoinedRoomInfoList {

        /**
         * Constructs a new MsgMcrGetJoinedRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetJoinedRoomInfoList);

        /** MsgMcrGetJoinedRoomInfoList c. */
        public c?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IC|null);

        /** MsgMcrGetJoinedRoomInfoList s. */
        public s?: (NetMessage.MsgMcrGetJoinedRoomInfoList.IS|null);

        /**
         * Creates a new MsgMcrGetJoinedRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetJoinedRoomInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetJoinedRoomInfoList): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Encodes the specified MsgMcrGetJoinedRoomInfoList message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetJoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetJoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetJoinedRoomInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetJoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetJoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetJoinedRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetJoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Decodes a MsgMcrGetJoinedRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetJoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Verifies a MsgMcrGetJoinedRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetJoinedRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetJoinedRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomInfoList;

        /**
         * Creates a plain object from a MsgMcrGetJoinedRoomInfoList message. Also converts values to other types if specified.
         * @param message MsgMcrGetJoinedRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetJoinedRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetJoinedRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetJoinedRoomInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IC): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinedRoomInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiCustomRoom.IMcrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiCustomRoom.IMcrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinedRoomInfoList.IS): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinedRoomInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinedRoomInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetRoomInfo. */
    interface IMsgMcrGetRoomInfo {

        /** MsgMcrGetRoomInfo c */
        c?: (NetMessage.MsgMcrGetRoomInfo.IC|null);

        /** MsgMcrGetRoomInfo s */
        s?: (NetMessage.MsgMcrGetRoomInfo.IS|null);
    }

    /** Represents a MsgMcrGetRoomInfo. */
    class MsgMcrGetRoomInfo implements IMsgMcrGetRoomInfo {

        /**
         * Constructs a new MsgMcrGetRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetRoomInfo);

        /** MsgMcrGetRoomInfo c. */
        public c?: (NetMessage.MsgMcrGetRoomInfo.IC|null);

        /** MsgMcrGetRoomInfo s. */
        public s?: (NetMessage.MsgMcrGetRoomInfo.IS|null);

        /**
         * Creates a new MsgMcrGetRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetRoomInfo instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetRoomInfo): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Encodes the specified MsgMcrGetRoomInfo message. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetRoomInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.verify|verify} messages.
         * @param message MsgMcrGetRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Decodes a MsgMcrGetRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Verifies a MsgMcrGetRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomInfo;

        /**
         * Creates a plain object from a MsgMcrGetRoomInfo message. Also converts values to other types if specified.
         * @param message MsgMcrGetRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetRoomInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomInfo.IC): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomInfo */
            roomInfo?: (MultiCustomRoom.IMcrRoomInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetRoomInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomInfo. */
            public roomInfo?: (MultiCustomRoom.IMcrRoomInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetRoomInfo.IS): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetRoomInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetRoomInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetRoomInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetRoomInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetRoomInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetJoinableRoomInfoList. */
    interface IMsgMcrGetJoinableRoomInfoList {

        /** MsgMcrGetJoinableRoomInfoList c */
        c?: (NetMessage.MsgMcrGetJoinableRoomInfoList.IC|null);

        /** MsgMcrGetJoinableRoomInfoList s */
        s?: (NetMessage.MsgMcrGetJoinableRoomInfoList.IS|null);
    }

    /** Represents a MsgMcrGetJoinableRoomInfoList. */
    class MsgMcrGetJoinableRoomInfoList implements IMsgMcrGetJoinableRoomInfoList {

        /**
         * Constructs a new MsgMcrGetJoinableRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetJoinableRoomInfoList);

        /** MsgMcrGetJoinableRoomInfoList c. */
        public c?: (NetMessage.MsgMcrGetJoinableRoomInfoList.IC|null);

        /** MsgMcrGetJoinableRoomInfoList s. */
        public s?: (NetMessage.MsgMcrGetJoinableRoomInfoList.IS|null);

        /**
         * Creates a new MsgMcrGetJoinableRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetJoinableRoomInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetJoinableRoomInfoList): NetMessage.MsgMcrGetJoinableRoomInfoList;

        /**
         * Encodes the specified MsgMcrGetJoinableRoomInfoList message. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetJoinableRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetJoinableRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetJoinableRoomInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomInfoList.verify|verify} messages.
         * @param message MsgMcrGetJoinableRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetJoinableRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetJoinableRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetJoinableRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinableRoomInfoList;

        /**
         * Decodes a MsgMcrGetJoinableRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetJoinableRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinableRoomInfoList;

        /**
         * Verifies a MsgMcrGetJoinableRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetJoinableRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetJoinableRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinableRoomInfoList;

        /**
         * Creates a plain object from a MsgMcrGetJoinableRoomInfoList message. Also converts values to other types if specified.
         * @param message MsgMcrGetJoinableRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetJoinableRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetJoinableRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetJoinableRoomInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinableRoomInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinableRoomInfoList.IC): NetMessage.MsgMcrGetJoinableRoomInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinableRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinableRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinableRoomInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinableRoomInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinableRoomInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinableRoomInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiCustomRoom.IMcrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetJoinableRoomInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiCustomRoom.IMcrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetJoinableRoomInfoList.IS): NetMessage.MsgMcrGetJoinableRoomInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetJoinableRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetJoinableRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetJoinableRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetJoinableRoomInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetJoinableRoomInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetJoinableRoomInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetJoinableRoomInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrJoinRoom. */
    interface IMsgMcrJoinRoom {

        /** MsgMcrJoinRoom c */
        c?: (NetMessage.MsgMcrJoinRoom.IC|null);

        /** MsgMcrJoinRoom s */
        s?: (NetMessage.MsgMcrJoinRoom.IS|null);
    }

    /** Represents a MsgMcrJoinRoom. */
    class MsgMcrJoinRoom implements IMsgMcrJoinRoom {

        /**
         * Constructs a new MsgMcrJoinRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrJoinRoom);

        /** MsgMcrJoinRoom c. */
        public c?: (NetMessage.MsgMcrJoinRoom.IC|null);

        /** MsgMcrJoinRoom s. */
        public s?: (NetMessage.MsgMcrJoinRoom.IS|null);

        /**
         * Creates a new MsgMcrJoinRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrJoinRoom instance
         */
        public static create(properties?: NetMessage.IMsgMcrJoinRoom): NetMessage.MsgMcrJoinRoom;

        /**
         * Encodes the specified MsgMcrJoinRoom message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.verify|verify} messages.
         * @param message MsgMcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrJoinRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.verify|verify} messages.
         * @param message MsgMcrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrJoinRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom;

        /**
         * Decodes a MsgMcrJoinRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom;

        /**
         * Verifies a MsgMcrJoinRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrJoinRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrJoinRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom;

        /**
         * Creates a plain object from a MsgMcrJoinRoom message. Also converts values to other types if specified.
         * @param message MsgMcrJoinRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrJoinRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrJoinRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrJoinRoom.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C isReady. */
            public isReady: boolean;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrJoinRoom.IC): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);

            /** S userId */
            userId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrJoinRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /** S coId. */
            public coId: number;

            /** S isReady. */
            public isReady: boolean;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /** S userId. */
            public userId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrJoinRoom.IS): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrJoinRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeleteRoomByPlayer. */
    interface IMsgMcrDeleteRoomByPlayer {

        /** MsgMcrDeleteRoomByPlayer c */
        c?: (NetMessage.MsgMcrDeleteRoomByPlayer.IC|null);

        /** MsgMcrDeleteRoomByPlayer s */
        s?: (NetMessage.MsgMcrDeleteRoomByPlayer.IS|null);
    }

    /** Represents a MsgMcrDeleteRoomByPlayer. */
    class MsgMcrDeleteRoomByPlayer implements IMsgMcrDeleteRoomByPlayer {

        /**
         * Constructs a new MsgMcrDeleteRoomByPlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeleteRoomByPlayer);

        /** MsgMcrDeleteRoomByPlayer c. */
        public c?: (NetMessage.MsgMcrDeleteRoomByPlayer.IC|null);

        /** MsgMcrDeleteRoomByPlayer s. */
        public s?: (NetMessage.MsgMcrDeleteRoomByPlayer.IS|null);

        /**
         * Creates a new MsgMcrDeleteRoomByPlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeleteRoomByPlayer instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeleteRoomByPlayer): NetMessage.MsgMcrDeleteRoomByPlayer;

        /**
         * Encodes the specified MsgMcrDeleteRoomByPlayer message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByPlayer.verify|verify} messages.
         * @param message MsgMcrDeleteRoomByPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeleteRoomByPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeleteRoomByPlayer message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByPlayer.verify|verify} messages.
         * @param message MsgMcrDeleteRoomByPlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeleteRoomByPlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeleteRoomByPlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeleteRoomByPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoomByPlayer;

        /**
         * Decodes a MsgMcrDeleteRoomByPlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeleteRoomByPlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoomByPlayer;

        /**
         * Verifies a MsgMcrDeleteRoomByPlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeleteRoomByPlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeleteRoomByPlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoomByPlayer;

        /**
         * Creates a plain object from a MsgMcrDeleteRoomByPlayer message. Also converts values to other types if specified.
         * @param message MsgMcrDeleteRoomByPlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeleteRoomByPlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeleteRoomByPlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeleteRoomByPlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoomByPlayer.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoomByPlayer.IC): NetMessage.MsgMcrDeleteRoomByPlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByPlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoomByPlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByPlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoomByPlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoomByPlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoomByPlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoomByPlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoomByPlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoomByPlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoomByPlayer.IS): NetMessage.MsgMcrDeleteRoomByPlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByPlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoomByPlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByPlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoomByPlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoomByPlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoomByPlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoomByPlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoomByPlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeleteRoomByServer. */
    interface IMsgMcrDeleteRoomByServer {

        /** MsgMcrDeleteRoomByServer s */
        s?: (NetMessage.MsgMcrDeleteRoomByServer.IS|null);
    }

    /** Represents a MsgMcrDeleteRoomByServer. */
    class MsgMcrDeleteRoomByServer implements IMsgMcrDeleteRoomByServer {

        /**
         * Constructs a new MsgMcrDeleteRoomByServer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeleteRoomByServer);

        /** MsgMcrDeleteRoomByServer s. */
        public s?: (NetMessage.MsgMcrDeleteRoomByServer.IS|null);

        /**
         * Creates a new MsgMcrDeleteRoomByServer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeleteRoomByServer instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeleteRoomByServer): NetMessage.MsgMcrDeleteRoomByServer;

        /**
         * Encodes the specified MsgMcrDeleteRoomByServer message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByServer.verify|verify} messages.
         * @param message MsgMcrDeleteRoomByServer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeleteRoomByServer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeleteRoomByServer message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByServer.verify|verify} messages.
         * @param message MsgMcrDeleteRoomByServer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeleteRoomByServer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeleteRoomByServer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeleteRoomByServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoomByServer;

        /**
         * Decodes a MsgMcrDeleteRoomByServer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeleteRoomByServer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoomByServer;

        /**
         * Verifies a MsgMcrDeleteRoomByServer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeleteRoomByServer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeleteRoomByServer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoomByServer;

        /**
         * Creates a plain object from a MsgMcrDeleteRoomByServer message. Also converts values to other types if specified.
         * @param message MsgMcrDeleteRoomByServer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeleteRoomByServer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeleteRoomByServer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeleteRoomByServer {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeleteRoomByServer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeleteRoomByServer.IS): NetMessage.MsgMcrDeleteRoomByServer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByServer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeleteRoomByServer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeleteRoomByServer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeleteRoomByServer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeleteRoomByServer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeleteRoomByServer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeleteRoomByServer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeleteRoomByServer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetReady. */
    interface IMsgMcrSetReady {

        /** MsgMcrSetReady c */
        c?: (NetMessage.MsgMcrSetReady.IC|null);

        /** MsgMcrSetReady s */
        s?: (NetMessage.MsgMcrSetReady.IS|null);
    }

    /** Represents a MsgMcrSetReady. */
    class MsgMcrSetReady implements IMsgMcrSetReady {

        /**
         * Constructs a new MsgMcrSetReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetReady);

        /** MsgMcrSetReady c. */
        public c?: (NetMessage.MsgMcrSetReady.IC|null);

        /** MsgMcrSetReady s. */
        public s?: (NetMessage.MsgMcrSetReady.IS|null);

        /**
         * Creates a new MsgMcrSetReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetReady instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetReady): NetMessage.MsgMcrSetReady;

        /**
         * Encodes the specified MsgMcrSetReady message. Does not implicitly {@link NetMessage.MsgMcrSetReady.verify|verify} messages.
         * @param message MsgMcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetReady message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.verify|verify} messages.
         * @param message MsgMcrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady;

        /**
         * Decodes a MsgMcrSetReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady;

        /**
         * Verifies a MsgMcrSetReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetReady
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady;

        /**
         * Creates a plain object from a MsgMcrSetReady message. Also converts values to other types if specified.
         * @param message MsgMcrSetReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetReady {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetReady.IC);

            /** C roomId. */
            public roomId: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetReady.IC): NetMessage.MsgMcrSetReady.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S playerIndex */
            playerIndex?: (number|null);

            /** S isReady */
            isReady?: (boolean|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetReady.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S playerIndex. */
            public playerIndex: number;

            /** S isReady. */
            public isReady: boolean;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetReady.IS): NetMessage.MsgMcrSetReady.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetReady.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetReady.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetReady.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrDeletePlayer. */
    interface IMsgMcrDeletePlayer {

        /** MsgMcrDeletePlayer c */
        c?: (NetMessage.MsgMcrDeletePlayer.IC|null);

        /** MsgMcrDeletePlayer s */
        s?: (NetMessage.MsgMcrDeletePlayer.IS|null);
    }

    /** Represents a MsgMcrDeletePlayer. */
    class MsgMcrDeletePlayer implements IMsgMcrDeletePlayer {

        /**
         * Constructs a new MsgMcrDeletePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrDeletePlayer);

        /** MsgMcrDeletePlayer c. */
        public c?: (NetMessage.MsgMcrDeletePlayer.IC|null);

        /** MsgMcrDeletePlayer s. */
        public s?: (NetMessage.MsgMcrDeletePlayer.IS|null);

        /**
         * Creates a new MsgMcrDeletePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrDeletePlayer instance
         */
        public static create(properties?: NetMessage.IMsgMcrDeletePlayer): NetMessage.MsgMcrDeletePlayer;

        /**
         * Encodes the specified MsgMcrDeletePlayer message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
         * @param message MsgMcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrDeletePlayer message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.verify|verify} messages.
         * @param message MsgMcrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer;

        /**
         * Decodes a MsgMcrDeletePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer;

        /**
         * Verifies a MsgMcrDeletePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrDeletePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrDeletePlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer;

        /**
         * Creates a plain object from a MsgMcrDeletePlayer message. Also converts values to other types if specified.
         * @param message MsgMcrDeletePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrDeletePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrDeletePlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeletePlayer.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrDeletePlayer.IC): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S targetPlayerIndex */
            targetPlayerIndex?: (number|null);

            /** S targetUserId */
            targetUserId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrDeletePlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S targetPlayerIndex. */
            public targetPlayerIndex: number;

            /** S targetUserId. */
            public targetUserId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrDeletePlayer.IS): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrDeletePlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetSelfSettings. */
    interface IMsgMcrSetSelfSettings {

        /** MsgMcrSetSelfSettings c */
        c?: (NetMessage.MsgMcrSetSelfSettings.IC|null);

        /** MsgMcrSetSelfSettings s */
        s?: (NetMessage.MsgMcrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMcrSetSelfSettings. */
    class MsgMcrSetSelfSettings implements IMsgMcrSetSelfSettings {

        /**
         * Constructs a new MsgMcrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetSelfSettings);

        /** MsgMcrSetSelfSettings c. */
        public c?: (NetMessage.MsgMcrSetSelfSettings.IC|null);

        /** MsgMcrSetSelfSettings s. */
        public s?: (NetMessage.MsgMcrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMcrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetSelfSettings): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Encodes the specified MsgMcrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
         * @param message MsgMcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.verify|verify} messages.
         * @param message MsgMcrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Decodes a MsgMcrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Verifies a MsgMcrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMcrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMcrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C coId. */
            public coId: number;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetSelfSettings.IC): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S oldPlayerIndex */
            oldPlayerIndex?: (number|null);

            /** S newPlayerIndex */
            newPlayerIndex?: (number|null);

            /** S coId */
            coId?: (number|null);

            /** S unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S oldPlayerIndex. */
            public oldPlayerIndex: number;

            /** S newPlayerIndex. */
            public newPlayerIndex: number;

            /** S coId. */
            public coId: number;

            /** S unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetSelfSettings.IS): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrSetWarRule. */
    interface IMsgMcrSetWarRule {

        /** MsgMcrSetWarRule c */
        c?: (NetMessage.MsgMcrSetWarRule.IC|null);

        /** MsgMcrSetWarRule s */
        s?: (NetMessage.MsgMcrSetWarRule.IS|null);
    }

    /** Represents a MsgMcrSetWarRule. */
    class MsgMcrSetWarRule implements IMsgMcrSetWarRule {

        /**
         * Constructs a new MsgMcrSetWarRule.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrSetWarRule);

        /** MsgMcrSetWarRule c. */
        public c?: (NetMessage.MsgMcrSetWarRule.IC|null);

        /** MsgMcrSetWarRule s. */
        public s?: (NetMessage.MsgMcrSetWarRule.IS|null);

        /**
         * Creates a new MsgMcrSetWarRule instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrSetWarRule instance
         */
        public static create(properties?: NetMessage.IMsgMcrSetWarRule): NetMessage.MsgMcrSetWarRule;

        /**
         * Encodes the specified MsgMcrSetWarRule message. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.verify|verify} messages.
         * @param message MsgMcrSetWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrSetWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrSetWarRule message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.verify|verify} messages.
         * @param message MsgMcrSetWarRule message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrSetWarRule, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrSetWarRule message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrSetWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetWarRule;

        /**
         * Decodes a MsgMcrSetWarRule message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrSetWarRule
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetWarRule;

        /**
         * Verifies a MsgMcrSetWarRule message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrSetWarRule message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrSetWarRule
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetWarRule;

        /**
         * Creates a plain object from a MsgMcrSetWarRule message. Also converts values to other types if specified.
         * @param message MsgMcrSetWarRule
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrSetWarRule, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrSetWarRule to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrSetWarRule {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C presetWarRuleId */
            presetWarRuleId?: (number|null);

            /** C warRule */
            warRule?: (WarRule.IWarRule|null);

            /** C bootTimerParams */
            bootTimerParams?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetWarRule.IC);

            /** C roomId. */
            public roomId: number;

            /** C presetWarRuleId. */
            public presetWarRuleId: number;

            /** C warRule. */
            public warRule?: (WarRule.IWarRule|null);

            /** C bootTimerParams. */
            public bootTimerParams: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrSetWarRule.IC): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetWarRule.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetWarRule.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetWarRule.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrSetWarRule.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrSetWarRule.IS): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrSetWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrSetWarRule.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrSetWarRule.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrSetWarRule.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrSetWarRule.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrGetOwnerPlayerIndex. */
    interface IMsgMcrGetOwnerPlayerIndex {

        /** MsgMcrGetOwnerPlayerIndex s */
        s?: (NetMessage.MsgMcrGetOwnerPlayerIndex.IS|null);
    }

    /** Represents a MsgMcrGetOwnerPlayerIndex. */
    class MsgMcrGetOwnerPlayerIndex implements IMsgMcrGetOwnerPlayerIndex {

        /**
         * Constructs a new MsgMcrGetOwnerPlayerIndex.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrGetOwnerPlayerIndex);

        /** MsgMcrGetOwnerPlayerIndex s. */
        public s?: (NetMessage.MsgMcrGetOwnerPlayerIndex.IS|null);

        /**
         * Creates a new MsgMcrGetOwnerPlayerIndex instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrGetOwnerPlayerIndex instance
         */
        public static create(properties?: NetMessage.IMsgMcrGetOwnerPlayerIndex): NetMessage.MsgMcrGetOwnerPlayerIndex;

        /**
         * Encodes the specified MsgMcrGetOwnerPlayerIndex message. Does not implicitly {@link NetMessage.MsgMcrGetOwnerPlayerIndex.verify|verify} messages.
         * @param message MsgMcrGetOwnerPlayerIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrGetOwnerPlayerIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrGetOwnerPlayerIndex message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetOwnerPlayerIndex.verify|verify} messages.
         * @param message MsgMcrGetOwnerPlayerIndex message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrGetOwnerPlayerIndex, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrGetOwnerPlayerIndex message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrGetOwnerPlayerIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetOwnerPlayerIndex;

        /**
         * Decodes a MsgMcrGetOwnerPlayerIndex message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrGetOwnerPlayerIndex
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetOwnerPlayerIndex;

        /**
         * Verifies a MsgMcrGetOwnerPlayerIndex message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrGetOwnerPlayerIndex message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrGetOwnerPlayerIndex
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetOwnerPlayerIndex;

        /**
         * Creates a plain object from a MsgMcrGetOwnerPlayerIndex message. Also converts values to other types if specified.
         * @param message MsgMcrGetOwnerPlayerIndex
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrGetOwnerPlayerIndex, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrGetOwnerPlayerIndex to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrGetOwnerPlayerIndex {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S ownerPlayerIndex */
            ownerPlayerIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrGetOwnerPlayerIndex.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S ownerPlayerIndex. */
            public ownerPlayerIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrGetOwnerPlayerIndex.IS): NetMessage.MsgMcrGetOwnerPlayerIndex.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrGetOwnerPlayerIndex.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrGetOwnerPlayerIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrGetOwnerPlayerIndex.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrGetOwnerPlayerIndex.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrGetOwnerPlayerIndex.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrGetOwnerPlayerIndex.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrGetOwnerPlayerIndex.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrGetOwnerPlayerIndex.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMcrStartWar. */
    interface IMsgMcrStartWar {

        /** MsgMcrStartWar c */
        c?: (NetMessage.MsgMcrStartWar.IC|null);

        /** MsgMcrStartWar s */
        s?: (NetMessage.MsgMcrStartWar.IS|null);
    }

    /** Represents a MsgMcrStartWar. */
    class MsgMcrStartWar implements IMsgMcrStartWar {

        /**
         * Constructs a new MsgMcrStartWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMcrStartWar);

        /** MsgMcrStartWar c. */
        public c?: (NetMessage.MsgMcrStartWar.IC|null);

        /** MsgMcrStartWar s. */
        public s?: (NetMessage.MsgMcrStartWar.IS|null);

        /**
         * Creates a new MsgMcrStartWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMcrStartWar instance
         */
        public static create(properties?: NetMessage.IMsgMcrStartWar): NetMessage.MsgMcrStartWar;

        /**
         * Encodes the specified MsgMcrStartWar message. Does not implicitly {@link NetMessage.MsgMcrStartWar.verify|verify} messages.
         * @param message MsgMcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMcrStartWar message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.verify|verify} messages.
         * @param message MsgMcrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMcrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMcrStartWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar;

        /**
         * Decodes a MsgMcrStartWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMcrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar;

        /**
         * Verifies a MsgMcrStartWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMcrStartWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMcrStartWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar;

        /**
         * Creates a plain object from a MsgMcrStartWar message. Also converts values to other types if specified.
         * @param message MsgMcrStartWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMcrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMcrStartWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMcrStartWar {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrStartWar.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMcrStartWar.IC): NetMessage.MsgMcrStartWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMcrStartWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMcrStartWar.IS): NetMessage.MsgMcrStartWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMcrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMcrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMcrStartWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMcrStartWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMcrStartWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMcrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonGetMyWarInfoList. */
    interface IMsgMpwCommonGetMyWarInfoList {

        /** MsgMpwCommonGetMyWarInfoList c */
        c?: (NetMessage.MsgMpwCommonGetMyWarInfoList.IC|null);

        /** MsgMpwCommonGetMyWarInfoList s */
        s?: (NetMessage.MsgMpwCommonGetMyWarInfoList.IS|null);
    }

    /** Represents a MsgMpwCommonGetMyWarInfoList. */
    class MsgMpwCommonGetMyWarInfoList implements IMsgMpwCommonGetMyWarInfoList {

        /**
         * Constructs a new MsgMpwCommonGetMyWarInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonGetMyWarInfoList);

        /** MsgMpwCommonGetMyWarInfoList c. */
        public c?: (NetMessage.MsgMpwCommonGetMyWarInfoList.IC|null);

        /** MsgMpwCommonGetMyWarInfoList s. */
        public s?: (NetMessage.MsgMpwCommonGetMyWarInfoList.IS|null);

        /**
         * Creates a new MsgMpwCommonGetMyWarInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonGetMyWarInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonGetMyWarInfoList): NetMessage.MsgMpwCommonGetMyWarInfoList;

        /**
         * Encodes the specified MsgMpwCommonGetMyWarInfoList message. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarInfoList.verify|verify} messages.
         * @param message MsgMpwCommonGetMyWarInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonGetMyWarInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonGetMyWarInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarInfoList.verify|verify} messages.
         * @param message MsgMpwCommonGetMyWarInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonGetMyWarInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonGetMyWarInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonGetMyWarInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetMyWarInfoList;

        /**
         * Decodes a MsgMpwCommonGetMyWarInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonGetMyWarInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetMyWarInfoList;

        /**
         * Verifies a MsgMpwCommonGetMyWarInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonGetMyWarInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonGetMyWarInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetMyWarInfoList;

        /**
         * Creates a plain object from a MsgMpwCommonGetMyWarInfoList message. Also converts values to other types if specified.
         * @param message MsgMpwCommonGetMyWarInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonGetMyWarInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonGetMyWarInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonGetMyWarInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetMyWarInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetMyWarInfoList.IC): NetMessage.MsgMpwCommonGetMyWarInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetMyWarInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetMyWarInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetMyWarInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetMyWarInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetMyWarInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetMyWarInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S infos */
            infos?: (MultiPlayerWar.IMpwWarInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonGetMyWarInfoList.IS);

            /** S infos. */
            public infos: MultiPlayerWar.IMpwWarInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonGetMyWarInfoList.IS): NetMessage.MsgMpwCommonGetMyWarInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonGetMyWarInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonGetMyWarInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonGetMyWarInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonGetMyWarInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonGetMyWarInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonGetMyWarInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonGetMyWarInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonContinueWar. */
    interface IMsgMpwCommonContinueWar {

        /** MsgMpwCommonContinueWar c */
        c?: (NetMessage.MsgMpwCommonContinueWar.IC|null);

        /** MsgMpwCommonContinueWar s */
        s?: (NetMessage.MsgMpwCommonContinueWar.IS|null);
    }

    /** Represents a MsgMpwCommonContinueWar. */
    class MsgMpwCommonContinueWar implements IMsgMpwCommonContinueWar {

        /**
         * Constructs a new MsgMpwCommonContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonContinueWar);

        /** MsgMpwCommonContinueWar c. */
        public c?: (NetMessage.MsgMpwCommonContinueWar.IC|null);

        /** MsgMpwCommonContinueWar s. */
        public s?: (NetMessage.MsgMpwCommonContinueWar.IS|null);

        /**
         * Creates a new MsgMpwCommonContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonContinueWar): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Encodes the specified MsgMpwCommonContinueWar message. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.verify|verify} messages.
         * @param message MsgMpwCommonContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.verify|verify} messages.
         * @param message MsgMpwCommonContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Decodes a MsgMpwCommonContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Verifies a MsgMpwCommonContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonContinueWar;

        /**
         * Creates a plain object from a MsgMpwCommonContinueWar message. Also converts values to other types if specified.
         * @param message MsgMpwCommonContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonContinueWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonContinueWar.IC): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonContinueWar.IS): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonHandleBoot. */
    interface IMsgMpwCommonHandleBoot {

        /** MsgMpwCommonHandleBoot c */
        c?: (NetMessage.MsgMpwCommonHandleBoot.IC|null);

        /** MsgMpwCommonHandleBoot s */
        s?: (NetMessage.MsgMpwCommonHandleBoot.IS|null);
    }

    /** Represents a MsgMpwCommonHandleBoot. */
    class MsgMpwCommonHandleBoot implements IMsgMpwCommonHandleBoot {

        /**
         * Constructs a new MsgMpwCommonHandleBoot.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonHandleBoot);

        /** MsgMpwCommonHandleBoot c. */
        public c?: (NetMessage.MsgMpwCommonHandleBoot.IC|null);

        /** MsgMpwCommonHandleBoot s. */
        public s?: (NetMessage.MsgMpwCommonHandleBoot.IS|null);

        /**
         * Creates a new MsgMpwCommonHandleBoot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonHandleBoot instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonHandleBoot): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Encodes the specified MsgMpwCommonHandleBoot message. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.verify|verify} messages.
         * @param message MsgMpwCommonHandleBoot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonHandleBoot message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.verify|verify} messages.
         * @param message MsgMpwCommonHandleBoot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonHandleBoot, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonHandleBoot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonHandleBoot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Decodes a MsgMpwCommonHandleBoot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonHandleBoot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Verifies a MsgMpwCommonHandleBoot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonHandleBoot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonHandleBoot
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonHandleBoot;

        /**
         * Creates a plain object from a MsgMpwCommonHandleBoot message. Also converts values to other types if specified.
         * @param message MsgMpwCommonHandleBoot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonHandleBoot, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonHandleBoot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonHandleBoot {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonHandleBoot.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonHandleBoot.IC): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonHandleBoot.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonHandleBoot.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonHandleBoot.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonHandleBoot.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonHandleBoot.IS): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonHandleBoot.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonHandleBoot.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonHandleBoot.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonHandleBoot.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonBroadcastGameStart. */
    interface IMsgMpwCommonBroadcastGameStart {

        /** MsgMpwCommonBroadcastGameStart s */
        s?: (NetMessage.MsgMpwCommonBroadcastGameStart.IS|null);
    }

    /** Represents a MsgMpwCommonBroadcastGameStart. */
    class MsgMpwCommonBroadcastGameStart implements IMsgMpwCommonBroadcastGameStart {

        /**
         * Constructs a new MsgMpwCommonBroadcastGameStart.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonBroadcastGameStart);

        /** MsgMpwCommonBroadcastGameStart s. */
        public s?: (NetMessage.MsgMpwCommonBroadcastGameStart.IS|null);

        /**
         * Creates a new MsgMpwCommonBroadcastGameStart instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonBroadcastGameStart instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonBroadcastGameStart): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Encodes the specified MsgMpwCommonBroadcastGameStart message. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.verify|verify} messages.
         * @param message MsgMpwCommonBroadcastGameStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonBroadcastGameStart message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.verify|verify} messages.
         * @param message MsgMpwCommonBroadcastGameStart message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonBroadcastGameStart, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonBroadcastGameStart message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonBroadcastGameStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Decodes a MsgMpwCommonBroadcastGameStart message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonBroadcastGameStart
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Verifies a MsgMpwCommonBroadcastGameStart message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonBroadcastGameStart message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonBroadcastGameStart
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonBroadcastGameStart;

        /**
         * Creates a plain object from a MsgMpwCommonBroadcastGameStart message. Also converts values to other types if specified.
         * @param message MsgMpwCommonBroadcastGameStart
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonBroadcastGameStart, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonBroadcastGameStart to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonBroadcastGameStart {

        /** Properties of a S. */
        interface IS {

            /** S warId */
            warId?: (number|null);

            /** S mapId */
            mapId?: (number|null);

            /** S mcrRoomId */
            mcrRoomId?: (number|null);

            /** S mrrRoomId */
            mrrRoomId?: (number|null);

            /** S mfrRoomId */
            mfrRoomId?: (number|null);

            /** S playerInfoList */
            playerInfoList?: (Structure.IWarPlayerInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonBroadcastGameStart.IS);

            /** S warId. */
            public warId: number;

            /** S mapId. */
            public mapId: number;

            /** S mcrRoomId. */
            public mcrRoomId: number;

            /** S mrrRoomId. */
            public mrrRoomId: number;

            /** S mfrRoomId. */
            public mfrRoomId: number;

            /** S playerInfoList. */
            public playerInfoList: Structure.IWarPlayerInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonBroadcastGameStart.IS): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonBroadcastGameStart.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonBroadcastGameStart.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonBroadcastGameStart.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonBroadcastGameStart.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwCommonSyncWar. */
    interface IMsgMpwCommonSyncWar {

        /** MsgMpwCommonSyncWar c */
        c?: (NetMessage.MsgMpwCommonSyncWar.IC|null);

        /** MsgMpwCommonSyncWar s */
        s?: (NetMessage.MsgMpwCommonSyncWar.IS|null);
    }

    /** Represents a MsgMpwCommonSyncWar. */
    class MsgMpwCommonSyncWar implements IMsgMpwCommonSyncWar {

        /**
         * Constructs a new MsgMpwCommonSyncWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwCommonSyncWar);

        /** MsgMpwCommonSyncWar c. */
        public c?: (NetMessage.MsgMpwCommonSyncWar.IC|null);

        /** MsgMpwCommonSyncWar s. */
        public s?: (NetMessage.MsgMpwCommonSyncWar.IS|null);

        /**
         * Creates a new MsgMpwCommonSyncWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwCommonSyncWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwCommonSyncWar): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Encodes the specified MsgMpwCommonSyncWar message. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.verify|verify} messages.
         * @param message MsgMpwCommonSyncWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwCommonSyncWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.verify|verify} messages.
         * @param message MsgMpwCommonSyncWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwCommonSyncWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwCommonSyncWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwCommonSyncWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Decodes a MsgMpwCommonSyncWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwCommonSyncWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Verifies a MsgMpwCommonSyncWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwCommonSyncWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwCommonSyncWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonSyncWar;

        /**
         * Creates a plain object from a MsgMpwCommonSyncWar message. Also converts values to other types if specified.
         * @param message MsgMpwCommonSyncWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwCommonSyncWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwCommonSyncWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwCommonSyncWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C executedActionsCount */
            executedActionsCount?: (number|null);

            /** C requestType */
            requestType?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonSyncWar.IC);

            /** C warId. */
            public warId: number;

            /** C executedActionsCount. */
            public executedActionsCount: number;

            /** C requestType. */
            public requestType: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonSyncWar.IC): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonSyncWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonSyncWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonSyncWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S executedActionsCount */
            executedActionsCount?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);

            /** S status */
            status?: (number|null);

            /** S requestType */
            requestType?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwCommonSyncWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S executedActionsCount. */
            public executedActionsCount: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /** S status. */
            public status: number;

            /** S requestType. */
            public requestType: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwCommonSyncWar.IS): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwCommonSyncWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwCommonSyncWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwCommonSyncWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwCommonSyncWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchMakeRequest. */
    interface IMsgMpwWatchMakeRequest {

        /** MsgMpwWatchMakeRequest c */
        c?: (NetMessage.MsgMpwWatchMakeRequest.IC|null);

        /** MsgMpwWatchMakeRequest s */
        s?: (NetMessage.MsgMpwWatchMakeRequest.IS|null);
    }

    /** Represents a MsgMpwWatchMakeRequest. */
    class MsgMpwWatchMakeRequest implements IMsgMpwWatchMakeRequest {

        /**
         * Constructs a new MsgMpwWatchMakeRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchMakeRequest);

        /** MsgMpwWatchMakeRequest c. */
        public c?: (NetMessage.MsgMpwWatchMakeRequest.IC|null);

        /** MsgMpwWatchMakeRequest s. */
        public s?: (NetMessage.MsgMpwWatchMakeRequest.IS|null);

        /**
         * Creates a new MsgMpwWatchMakeRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchMakeRequest instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchMakeRequest): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Encodes the specified MsgMpwWatchMakeRequest message. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.verify|verify} messages.
         * @param message MsgMpwWatchMakeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchMakeRequest message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.verify|verify} messages.
         * @param message MsgMpwWatchMakeRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchMakeRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchMakeRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchMakeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Decodes a MsgMpwWatchMakeRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchMakeRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Verifies a MsgMpwWatchMakeRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchMakeRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchMakeRequest
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchMakeRequest;

        /**
         * Creates a plain object from a MsgMpwWatchMakeRequest message. Also converts values to other types if specified.
         * @param message MsgMpwWatchMakeRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchMakeRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchMakeRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchMakeRequest {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C dstUserIds */
            dstUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchMakeRequest.IC);

            /** C warId. */
            public warId: number;

            /** C dstUserIds. */
            public dstUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchMakeRequest.IC): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchMakeRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchMakeRequest.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchMakeRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S dstUserIds */
            dstUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchMakeRequest.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S dstUserIds. */
            public dstUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchMakeRequest.IS): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchMakeRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchMakeRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchMakeRequest.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchMakeRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchHandleRequest. */
    interface IMsgMpwWatchHandleRequest {

        /** MsgMpwWatchHandleRequest c */
        c?: (NetMessage.MsgMpwWatchHandleRequest.IC|null);

        /** MsgMpwWatchHandleRequest s */
        s?: (NetMessage.MsgMpwWatchHandleRequest.IS|null);
    }

    /** Represents a MsgMpwWatchHandleRequest. */
    class MsgMpwWatchHandleRequest implements IMsgMpwWatchHandleRequest {

        /**
         * Constructs a new MsgMpwWatchHandleRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchHandleRequest);

        /** MsgMpwWatchHandleRequest c. */
        public c?: (NetMessage.MsgMpwWatchHandleRequest.IC|null);

        /** MsgMpwWatchHandleRequest s. */
        public s?: (NetMessage.MsgMpwWatchHandleRequest.IS|null);

        /**
         * Creates a new MsgMpwWatchHandleRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchHandleRequest instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchHandleRequest): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Encodes the specified MsgMpwWatchHandleRequest message. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.verify|verify} messages.
         * @param message MsgMpwWatchHandleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchHandleRequest message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.verify|verify} messages.
         * @param message MsgMpwWatchHandleRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchHandleRequest, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchHandleRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchHandleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Decodes a MsgMpwWatchHandleRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchHandleRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Verifies a MsgMpwWatchHandleRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchHandleRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchHandleRequest
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchHandleRequest;

        /**
         * Creates a plain object from a MsgMpwWatchHandleRequest message. Also converts values to other types if specified.
         * @param message MsgMpwWatchHandleRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchHandleRequest, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchHandleRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchHandleRequest {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C acceptSrcUserIds */
            acceptSrcUserIds?: (number[]|null);

            /** C declineSrcUserIds */
            declineSrcUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchHandleRequest.IC);

            /** C warId. */
            public warId: number;

            /** C acceptSrcUserIds. */
            public acceptSrcUserIds: number[];

            /** C declineSrcUserIds. */
            public declineSrcUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchHandleRequest.IC): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchHandleRequest.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchHandleRequest.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchHandleRequest.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S acceptSrcUserIds */
            acceptSrcUserIds?: (number[]|null);

            /** S declineSrcUserIds */
            declineSrcUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchHandleRequest.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S acceptSrcUserIds. */
            public acceptSrcUserIds: number[];

            /** S declineSrcUserIds. */
            public declineSrcUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchHandleRequest.IS): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchHandleRequest.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchHandleRequest.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchHandleRequest.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchHandleRequest.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchDeleteWatcher. */
    interface IMsgMpwWatchDeleteWatcher {

        /** MsgMpwWatchDeleteWatcher c */
        c?: (NetMessage.MsgMpwWatchDeleteWatcher.IC|null);

        /** MsgMpwWatchDeleteWatcher s */
        s?: (NetMessage.MsgMpwWatchDeleteWatcher.IS|null);
    }

    /** Represents a MsgMpwWatchDeleteWatcher. */
    class MsgMpwWatchDeleteWatcher implements IMsgMpwWatchDeleteWatcher {

        /**
         * Constructs a new MsgMpwWatchDeleteWatcher.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchDeleteWatcher);

        /** MsgMpwWatchDeleteWatcher c. */
        public c?: (NetMessage.MsgMpwWatchDeleteWatcher.IC|null);

        /** MsgMpwWatchDeleteWatcher s. */
        public s?: (NetMessage.MsgMpwWatchDeleteWatcher.IS|null);

        /**
         * Creates a new MsgMpwWatchDeleteWatcher instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchDeleteWatcher instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchDeleteWatcher): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Encodes the specified MsgMpwWatchDeleteWatcher message. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.verify|verify} messages.
         * @param message MsgMpwWatchDeleteWatcher message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchDeleteWatcher message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.verify|verify} messages.
         * @param message MsgMpwWatchDeleteWatcher message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchDeleteWatcher, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchDeleteWatcher message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchDeleteWatcher
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Decodes a MsgMpwWatchDeleteWatcher message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchDeleteWatcher
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Verifies a MsgMpwWatchDeleteWatcher message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchDeleteWatcher message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchDeleteWatcher
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchDeleteWatcher;

        /**
         * Creates a plain object from a MsgMpwWatchDeleteWatcher message. Also converts values to other types if specified.
         * @param message MsgMpwWatchDeleteWatcher
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchDeleteWatcher, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchDeleteWatcher to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchDeleteWatcher {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C watcherUserIds */
            watcherUserIds?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IC);

            /** C warId. */
            public warId: number;

            /** C watcherUserIds. */
            public watcherUserIds: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IC): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchDeleteWatcher.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchDeleteWatcher.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchDeleteWatcher.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S watcherUserIds */
            watcherUserIds?: (number[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S watcherUserIds. */
            public watcherUserIds: number[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchDeleteWatcher.IS): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchDeleteWatcher.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchDeleteWatcher.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchDeleteWatcher.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchDeleteWatcher.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetUnwatchedWarInfos. */
    interface IMsgMpwWatchGetUnwatchedWarInfos {

        /** MsgMpwWatchGetUnwatchedWarInfos c */
        c?: (NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IC|null);

        /** MsgMpwWatchGetUnwatchedWarInfos s */
        s?: (NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IS|null);
    }

    /** Represents a MsgMpwWatchGetUnwatchedWarInfos. */
    class MsgMpwWatchGetUnwatchedWarInfos implements IMsgMpwWatchGetUnwatchedWarInfos {

        /**
         * Constructs a new MsgMpwWatchGetUnwatchedWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetUnwatchedWarInfos);

        /** MsgMpwWatchGetUnwatchedWarInfos c. */
        public c?: (NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IC|null);

        /** MsgMpwWatchGetUnwatchedWarInfos s. */
        public s?: (NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IS|null);

        /**
         * Creates a new MsgMpwWatchGetUnwatchedWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetUnwatchedWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetUnwatchedWarInfos): NetMessage.MsgMpwWatchGetUnwatchedWarInfos;

        /**
         * Encodes the specified MsgMpwWatchGetUnwatchedWarInfos message. Does not implicitly {@link NetMessage.MsgMpwWatchGetUnwatchedWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetUnwatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetUnwatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetUnwatchedWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetUnwatchedWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetUnwatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetUnwatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetUnwatchedWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetUnwatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetUnwatchedWarInfos;

        /**
         * Decodes a MsgMpwWatchGetUnwatchedWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetUnwatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetUnwatchedWarInfos;

        /**
         * Verifies a MsgMpwWatchGetUnwatchedWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetUnwatchedWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetUnwatchedWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetUnwatchedWarInfos;

        /**
         * Creates a plain object from a MsgMpwWatchGetUnwatchedWarInfos message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetUnwatchedWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetUnwatchedWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetUnwatchedWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IC): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiPlayerWar.IMpwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiPlayerWar.IMpwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IS): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetUnwatchedWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetRequestedWarInfos. */
    interface IMsgMpwWatchGetRequestedWarInfos {

        /** MsgMpwWatchGetRequestedWarInfos c */
        c?: (NetMessage.MsgMpwWatchGetRequestedWarInfos.IC|null);

        /** MsgMpwWatchGetRequestedWarInfos s */
        s?: (NetMessage.MsgMpwWatchGetRequestedWarInfos.IS|null);
    }

    /** Represents a MsgMpwWatchGetRequestedWarInfos. */
    class MsgMpwWatchGetRequestedWarInfos implements IMsgMpwWatchGetRequestedWarInfos {

        /**
         * Constructs a new MsgMpwWatchGetRequestedWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetRequestedWarInfos);

        /** MsgMpwWatchGetRequestedWarInfos c. */
        public c?: (NetMessage.MsgMpwWatchGetRequestedWarInfos.IC|null);

        /** MsgMpwWatchGetRequestedWarInfos s. */
        public s?: (NetMessage.MsgMpwWatchGetRequestedWarInfos.IS|null);

        /**
         * Creates a new MsgMpwWatchGetRequestedWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetRequestedWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetRequestedWarInfos): NetMessage.MsgMpwWatchGetRequestedWarInfos;

        /**
         * Encodes the specified MsgMpwWatchGetRequestedWarInfos message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetRequestedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetRequestedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetRequestedWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetRequestedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetRequestedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetRequestedWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetRequestedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestedWarInfos;

        /**
         * Decodes a MsgMpwWatchGetRequestedWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetRequestedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestedWarInfos;

        /**
         * Verifies a MsgMpwWatchGetRequestedWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetRequestedWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetRequestedWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestedWarInfos;

        /**
         * Creates a plain object from a MsgMpwWatchGetRequestedWarInfos message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetRequestedWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetRequestedWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetRequestedWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetRequestedWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetRequestedWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetRequestedWarInfos.IC): NetMessage.MsgMpwWatchGetRequestedWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetRequestedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetRequestedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestedWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestedWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestedWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetRequestedWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiPlayerWar.IMpwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetRequestedWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiPlayerWar.IMpwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetRequestedWarInfos.IS): NetMessage.MsgMpwWatchGetRequestedWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetRequestedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetRequestedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetRequestedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetRequestedWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetRequestedWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetRequestedWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetRequestedWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetWatchedWarInfos. */
    interface IMsgMpwWatchGetWatchedWarInfos {

        /** MsgMpwWatchGetWatchedWarInfos c */
        c?: (NetMessage.MsgMpwWatchGetWatchedWarInfos.IC|null);

        /** MsgMpwWatchGetWatchedWarInfos s */
        s?: (NetMessage.MsgMpwWatchGetWatchedWarInfos.IS|null);
    }

    /** Represents a MsgMpwWatchGetWatchedWarInfos. */
    class MsgMpwWatchGetWatchedWarInfos implements IMsgMpwWatchGetWatchedWarInfos {

        /**
         * Constructs a new MsgMpwWatchGetWatchedWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetWatchedWarInfos);

        /** MsgMpwWatchGetWatchedWarInfos c. */
        public c?: (NetMessage.MsgMpwWatchGetWatchedWarInfos.IC|null);

        /** MsgMpwWatchGetWatchedWarInfos s. */
        public s?: (NetMessage.MsgMpwWatchGetWatchedWarInfos.IS|null);

        /**
         * Creates a new MsgMpwWatchGetWatchedWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetWatchedWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetWatchedWarInfos): NetMessage.MsgMpwWatchGetWatchedWarInfos;

        /**
         * Encodes the specified MsgMpwWatchGetWatchedWarInfos message. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetWatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetWatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetWatchedWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetWatchedWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetWatchedWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetWatchedWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetWatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetWatchedWarInfos;

        /**
         * Decodes a MsgMpwWatchGetWatchedWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetWatchedWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetWatchedWarInfos;

        /**
         * Verifies a MsgMpwWatchGetWatchedWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetWatchedWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetWatchedWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetWatchedWarInfos;

        /**
         * Creates a plain object from a MsgMpwWatchGetWatchedWarInfos message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetWatchedWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetWatchedWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetWatchedWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetWatchedWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetWatchedWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetWatchedWarInfos.IC): NetMessage.MsgMpwWatchGetWatchedWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetWatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetWatchedWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetWatchedWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetWatchedWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetWatchedWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetWatchedWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiPlayerWar.IMpwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetWatchedWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiPlayerWar.IMpwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetWatchedWarInfos.IS): NetMessage.MsgMpwWatchGetWatchedWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetWatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetWatchedWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetWatchedWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetWatchedWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetWatchedWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetWatchedWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetWatchedWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchGetOngoingWarInfos. */
    interface IMsgMpwWatchGetOngoingWarInfos {

        /** MsgMpwWatchGetOngoingWarInfos c */
        c?: (NetMessage.MsgMpwWatchGetOngoingWarInfos.IC|null);

        /** MsgMpwWatchGetOngoingWarInfos s */
        s?: (NetMessage.MsgMpwWatchGetOngoingWarInfos.IS|null);
    }

    /** Represents a MsgMpwWatchGetOngoingWarInfos. */
    class MsgMpwWatchGetOngoingWarInfos implements IMsgMpwWatchGetOngoingWarInfos {

        /**
         * Constructs a new MsgMpwWatchGetOngoingWarInfos.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchGetOngoingWarInfos);

        /** MsgMpwWatchGetOngoingWarInfos c. */
        public c?: (NetMessage.MsgMpwWatchGetOngoingWarInfos.IC|null);

        /** MsgMpwWatchGetOngoingWarInfos s. */
        public s?: (NetMessage.MsgMpwWatchGetOngoingWarInfos.IS|null);

        /**
         * Creates a new MsgMpwWatchGetOngoingWarInfos instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchGetOngoingWarInfos instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchGetOngoingWarInfos): NetMessage.MsgMpwWatchGetOngoingWarInfos;

        /**
         * Encodes the specified MsgMpwWatchGetOngoingWarInfos message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetOngoingWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchGetOngoingWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchGetOngoingWarInfos message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarInfos.verify|verify} messages.
         * @param message MsgMpwWatchGetOngoingWarInfos message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchGetOngoingWarInfos, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchGetOngoingWarInfos message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchGetOngoingWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOngoingWarInfos;

        /**
         * Decodes a MsgMpwWatchGetOngoingWarInfos message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchGetOngoingWarInfos
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOngoingWarInfos;

        /**
         * Verifies a MsgMpwWatchGetOngoingWarInfos message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchGetOngoingWarInfos message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchGetOngoingWarInfos
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOngoingWarInfos;

        /**
         * Creates a plain object from a MsgMpwWatchGetOngoingWarInfos message. Also converts values to other types if specified.
         * @param message MsgMpwWatchGetOngoingWarInfos
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchGetOngoingWarInfos, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchGetOngoingWarInfos to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchGetOngoingWarInfos {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetOngoingWarInfos.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetOngoingWarInfos.IC): NetMessage.MsgMpwWatchGetOngoingWarInfos.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetOngoingWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarInfos.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetOngoingWarInfos.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOngoingWarInfos.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOngoingWarInfos.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOngoingWarInfos.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetOngoingWarInfos.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infos */
            infos?: (MultiPlayerWar.IMpwWatchInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchGetOngoingWarInfos.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infos. */
            public infos: MultiPlayerWar.IMpwWatchInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchGetOngoingWarInfos.IS): NetMessage.MsgMpwWatchGetOngoingWarInfos.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchGetOngoingWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchGetOngoingWarInfos.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchGetOngoingWarInfos.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchGetOngoingWarInfos.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchGetOngoingWarInfos.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchGetOngoingWarInfos.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchGetOngoingWarInfos.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwWatchContinueWar. */
    interface IMsgMpwWatchContinueWar {

        /** MsgMpwWatchContinueWar c */
        c?: (NetMessage.MsgMpwWatchContinueWar.IC|null);

        /** MsgMpwWatchContinueWar s */
        s?: (NetMessage.MsgMpwWatchContinueWar.IS|null);
    }

    /** Represents a MsgMpwWatchContinueWar. */
    class MsgMpwWatchContinueWar implements IMsgMpwWatchContinueWar {

        /**
         * Constructs a new MsgMpwWatchContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwWatchContinueWar);

        /** MsgMpwWatchContinueWar c. */
        public c?: (NetMessage.MsgMpwWatchContinueWar.IC|null);

        /** MsgMpwWatchContinueWar s. */
        public s?: (NetMessage.MsgMpwWatchContinueWar.IS|null);

        /**
         * Creates a new MsgMpwWatchContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwWatchContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwWatchContinueWar): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Encodes the specified MsgMpwWatchContinueWar message. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.verify|verify} messages.
         * @param message MsgMpwWatchContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwWatchContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.verify|verify} messages.
         * @param message MsgMpwWatchContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwWatchContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwWatchContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwWatchContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Decodes a MsgMpwWatchContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwWatchContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Verifies a MsgMpwWatchContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwWatchContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwWatchContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchContinueWar;

        /**
         * Creates a plain object from a MsgMpwWatchContinueWar message. Also converts values to other types if specified.
         * @param message MsgMpwWatchContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwWatchContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwWatchContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwWatchContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchContinueWar.IC);

            /** C warId. */
            public warId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchContinueWar.IC): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S war */
            war?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwWatchContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S war. */
            public war?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwWatchContinueWar.IS): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwWatchContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwWatchContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwWatchContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwWatchContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionSystemCallWarEvent. */
    interface IMsgMpwActionSystemCallWarEvent {

        /** MsgMpwActionSystemCallWarEvent s */
        s?: (NetMessage.MsgMpwActionSystemCallWarEvent.IS|null);
    }

    /** Represents a MsgMpwActionSystemCallWarEvent. */
    class MsgMpwActionSystemCallWarEvent implements IMsgMpwActionSystemCallWarEvent {

        /**
         * Constructs a new MsgMpwActionSystemCallWarEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionSystemCallWarEvent);

        /** MsgMpwActionSystemCallWarEvent s. */
        public s?: (NetMessage.MsgMpwActionSystemCallWarEvent.IS|null);

        /**
         * Creates a new MsgMpwActionSystemCallWarEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionSystemCallWarEvent instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionSystemCallWarEvent): NetMessage.MsgMpwActionSystemCallWarEvent;

        /**
         * Encodes the specified MsgMpwActionSystemCallWarEvent message. Does not implicitly {@link NetMessage.MsgMpwActionSystemCallWarEvent.verify|verify} messages.
         * @param message MsgMpwActionSystemCallWarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionSystemCallWarEvent message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemCallWarEvent.verify|verify} messages.
         * @param message MsgMpwActionSystemCallWarEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionSystemCallWarEvent, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionSystemCallWarEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionSystemCallWarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemCallWarEvent;

        /**
         * Decodes a MsgMpwActionSystemCallWarEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionSystemCallWarEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemCallWarEvent;

        /**
         * Verifies a MsgMpwActionSystemCallWarEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionSystemCallWarEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionSystemCallWarEvent
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemCallWarEvent;

        /**
         * Creates a plain object from a MsgMpwActionSystemCallWarEvent message. Also converts values to other types if specified.
         * @param message MsgMpwActionSystemCallWarEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionSystemCallWarEvent, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionSystemCallWarEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionSystemCallWarEvent {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionSystemCallWarEvent.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionSystemCallWarEvent.IS): NetMessage.MsgMpwActionSystemCallWarEvent.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionSystemCallWarEvent.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionSystemCallWarEvent.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemCallWarEvent.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionSystemCallWarEvent.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemCallWarEvent.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemCallWarEvent.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemCallWarEvent.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionSystemCallWarEvent.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionSystemDestroyPlayerForce. */
    interface IMsgMpwActionSystemDestroyPlayerForce {

        /** MsgMpwActionSystemDestroyPlayerForce s */
        s?: (NetMessage.MsgMpwActionSystemDestroyPlayerForce.IS|null);
    }

    /** Represents a MsgMpwActionSystemDestroyPlayerForce. */
    class MsgMpwActionSystemDestroyPlayerForce implements IMsgMpwActionSystemDestroyPlayerForce {

        /**
         * Constructs a new MsgMpwActionSystemDestroyPlayerForce.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionSystemDestroyPlayerForce);

        /** MsgMpwActionSystemDestroyPlayerForce s. */
        public s?: (NetMessage.MsgMpwActionSystemDestroyPlayerForce.IS|null);

        /**
         * Creates a new MsgMpwActionSystemDestroyPlayerForce instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionSystemDestroyPlayerForce instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionSystemDestroyPlayerForce): NetMessage.MsgMpwActionSystemDestroyPlayerForce;

        /**
         * Encodes the specified MsgMpwActionSystemDestroyPlayerForce message. Does not implicitly {@link NetMessage.MsgMpwActionSystemDestroyPlayerForce.verify|verify} messages.
         * @param message MsgMpwActionSystemDestroyPlayerForce message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionSystemDestroyPlayerForce message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemDestroyPlayerForce.verify|verify} messages.
         * @param message MsgMpwActionSystemDestroyPlayerForce message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionSystemDestroyPlayerForce, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionSystemDestroyPlayerForce message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionSystemDestroyPlayerForce
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemDestroyPlayerForce;

        /**
         * Decodes a MsgMpwActionSystemDestroyPlayerForce message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionSystemDestroyPlayerForce
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemDestroyPlayerForce;

        /**
         * Verifies a MsgMpwActionSystemDestroyPlayerForce message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionSystemDestroyPlayerForce message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionSystemDestroyPlayerForce
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemDestroyPlayerForce;

        /**
         * Creates a plain object from a MsgMpwActionSystemDestroyPlayerForce message. Also converts values to other types if specified.
         * @param message MsgMpwActionSystemDestroyPlayerForce
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionSystemDestroyPlayerForce, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionSystemDestroyPlayerForce to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionSystemDestroyPlayerForce {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionSystemDestroyPlayerForce.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionSystemDestroyPlayerForce.IS): NetMessage.MsgMpwActionSystemDestroyPlayerForce.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionSystemDestroyPlayerForce.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionSystemDestroyPlayerForce.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemDestroyPlayerForce.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionSystemDestroyPlayerForce.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemDestroyPlayerForce.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemDestroyPlayerForce.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemDestroyPlayerForce.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionSystemDestroyPlayerForce.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionSystemEndWar. */
    interface IMsgMpwActionSystemEndWar {

        /** MsgMpwActionSystemEndWar s */
        s?: (NetMessage.MsgMpwActionSystemEndWar.IS|null);
    }

    /** Represents a MsgMpwActionSystemEndWar. */
    class MsgMpwActionSystemEndWar implements IMsgMpwActionSystemEndWar {

        /**
         * Constructs a new MsgMpwActionSystemEndWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionSystemEndWar);

        /** MsgMpwActionSystemEndWar s. */
        public s?: (NetMessage.MsgMpwActionSystemEndWar.IS|null);

        /**
         * Creates a new MsgMpwActionSystemEndWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionSystemEndWar instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionSystemEndWar): NetMessage.MsgMpwActionSystemEndWar;

        /**
         * Encodes the specified MsgMpwActionSystemEndWar message. Does not implicitly {@link NetMessage.MsgMpwActionSystemEndWar.verify|verify} messages.
         * @param message MsgMpwActionSystemEndWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionSystemEndWar message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemEndWar.verify|verify} messages.
         * @param message MsgMpwActionSystemEndWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionSystemEndWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionSystemEndWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionSystemEndWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemEndWar;

        /**
         * Decodes a MsgMpwActionSystemEndWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionSystemEndWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemEndWar;

        /**
         * Verifies a MsgMpwActionSystemEndWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionSystemEndWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionSystemEndWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemEndWar;

        /**
         * Creates a plain object from a MsgMpwActionSystemEndWar message. Also converts values to other types if specified.
         * @param message MsgMpwActionSystemEndWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionSystemEndWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionSystemEndWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionSystemEndWar {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionSystemEndWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionSystemEndWar.IS): NetMessage.MsgMpwActionSystemEndWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionSystemEndWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionSystemEndWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemEndWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionSystemEndWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemEndWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemEndWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemEndWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionSystemEndWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionSystemBeginTurn. */
    interface IMsgMpwActionSystemBeginTurn {

        /** MsgMpwActionSystemBeginTurn s */
        s?: (NetMessage.MsgMpwActionSystemBeginTurn.IS|null);
    }

    /** Represents a MsgMpwActionSystemBeginTurn. */
    class MsgMpwActionSystemBeginTurn implements IMsgMpwActionSystemBeginTurn {

        /**
         * Constructs a new MsgMpwActionSystemBeginTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionSystemBeginTurn);

        /** MsgMpwActionSystemBeginTurn s. */
        public s?: (NetMessage.MsgMpwActionSystemBeginTurn.IS|null);

        /**
         * Creates a new MsgMpwActionSystemBeginTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionSystemBeginTurn instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionSystemBeginTurn): NetMessage.MsgMpwActionSystemBeginTurn;

        /**
         * Encodes the specified MsgMpwActionSystemBeginTurn message. Does not implicitly {@link NetMessage.MsgMpwActionSystemBeginTurn.verify|verify} messages.
         * @param message MsgMpwActionSystemBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionSystemBeginTurn message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemBeginTurn.verify|verify} messages.
         * @param message MsgMpwActionSystemBeginTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionSystemBeginTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionSystemBeginTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionSystemBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemBeginTurn;

        /**
         * Decodes a MsgMpwActionSystemBeginTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionSystemBeginTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemBeginTurn;

        /**
         * Verifies a MsgMpwActionSystemBeginTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionSystemBeginTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionSystemBeginTurn
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemBeginTurn;

        /**
         * Creates a plain object from a MsgMpwActionSystemBeginTurn message. Also converts values to other types if specified.
         * @param message MsgMpwActionSystemBeginTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionSystemBeginTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionSystemBeginTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionSystemBeginTurn {

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionSystemBeginTurn.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionSystemBeginTurn.IS): NetMessage.MsgMpwActionSystemBeginTurn.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionSystemBeginTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionSystemBeginTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionSystemBeginTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionSystemBeginTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionSystemBeginTurn.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionSystemBeginTurn.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionSystemBeginTurn.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionSystemBeginTurn.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionPlayerEndTurn. */
    interface IMsgMpwActionPlayerEndTurn {

        /** MsgMpwActionPlayerEndTurn c */
        c?: (NetMessage.MsgMpwActionPlayerEndTurn.IC|null);

        /** MsgMpwActionPlayerEndTurn s */
        s?: (NetMessage.MsgMpwActionPlayerEndTurn.IS|null);
    }

    /** Represents a MsgMpwActionPlayerEndTurn. */
    class MsgMpwActionPlayerEndTurn implements IMsgMpwActionPlayerEndTurn {

        /**
         * Constructs a new MsgMpwActionPlayerEndTurn.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionPlayerEndTurn);

        /** MsgMpwActionPlayerEndTurn c. */
        public c?: (NetMessage.MsgMpwActionPlayerEndTurn.IC|null);

        /** MsgMpwActionPlayerEndTurn s. */
        public s?: (NetMessage.MsgMpwActionPlayerEndTurn.IS|null);

        /**
         * Creates a new MsgMpwActionPlayerEndTurn instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionPlayerEndTurn instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionPlayerEndTurn): NetMessage.MsgMpwActionPlayerEndTurn;

        /**
         * Encodes the specified MsgMpwActionPlayerEndTurn message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerEndTurn.verify|verify} messages.
         * @param message MsgMpwActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionPlayerEndTurn message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerEndTurn.verify|verify} messages.
         * @param message MsgMpwActionPlayerEndTurn message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionPlayerEndTurn, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionPlayerEndTurn message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerEndTurn;

        /**
         * Decodes a MsgMpwActionPlayerEndTurn message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionPlayerEndTurn
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerEndTurn;

        /**
         * Verifies a MsgMpwActionPlayerEndTurn message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionPlayerEndTurn message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionPlayerEndTurn
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerEndTurn;

        /**
         * Creates a plain object from a MsgMpwActionPlayerEndTurn message. Also converts values to other types if specified.
         * @param message MsgMpwActionPlayerEndTurn
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionPlayerEndTurn, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionPlayerEndTurn to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionPlayerEndTurn {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerEndTurn.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerEndTurn.IC): NetMessage.MsgMpwActionPlayerEndTurn.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerEndTurn.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerEndTurn.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerEndTurn.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerEndTurn.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerEndTurn.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerEndTurn.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerEndTurn.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerEndTurn.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerEndTurn.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerEndTurn.IS): NetMessage.MsgMpwActionPlayerEndTurn.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerEndTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerEndTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerEndTurn.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerEndTurn.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerEndTurn.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerEndTurn.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerEndTurn.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerEndTurn.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionPlayerSurrender. */
    interface IMsgMpwActionPlayerSurrender {

        /** MsgMpwActionPlayerSurrender c */
        c?: (NetMessage.MsgMpwActionPlayerSurrender.IC|null);

        /** MsgMpwActionPlayerSurrender s */
        s?: (NetMessage.MsgMpwActionPlayerSurrender.IS|null);
    }

    /** Represents a MsgMpwActionPlayerSurrender. */
    class MsgMpwActionPlayerSurrender implements IMsgMpwActionPlayerSurrender {

        /**
         * Constructs a new MsgMpwActionPlayerSurrender.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionPlayerSurrender);

        /** MsgMpwActionPlayerSurrender c. */
        public c?: (NetMessage.MsgMpwActionPlayerSurrender.IC|null);

        /** MsgMpwActionPlayerSurrender s. */
        public s?: (NetMessage.MsgMpwActionPlayerSurrender.IS|null);

        /**
         * Creates a new MsgMpwActionPlayerSurrender instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionPlayerSurrender instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionPlayerSurrender): NetMessage.MsgMpwActionPlayerSurrender;

        /**
         * Encodes the specified MsgMpwActionPlayerSurrender message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerSurrender.verify|verify} messages.
         * @param message MsgMpwActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionPlayerSurrender message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerSurrender.verify|verify} messages.
         * @param message MsgMpwActionPlayerSurrender message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionPlayerSurrender, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionPlayerSurrender message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerSurrender;

        /**
         * Decodes a MsgMpwActionPlayerSurrender message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionPlayerSurrender
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerSurrender;

        /**
         * Verifies a MsgMpwActionPlayerSurrender message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionPlayerSurrender message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionPlayerSurrender
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerSurrender;

        /**
         * Creates a plain object from a MsgMpwActionPlayerSurrender message. Also converts values to other types if specified.
         * @param message MsgMpwActionPlayerSurrender
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionPlayerSurrender, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionPlayerSurrender to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionPlayerSurrender {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C isBoot */
            isBoot?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerSurrender.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C isBoot. */
            public isBoot: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerSurrender.IC): NetMessage.MsgMpwActionPlayerSurrender.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerSurrender.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerSurrender.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerSurrender.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerSurrender.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerSurrender.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerSurrender.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerSurrender.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerSurrender.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerSurrender.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerSurrender.IS): NetMessage.MsgMpwActionPlayerSurrender.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerSurrender.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerSurrender.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerSurrender.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerSurrender.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerSurrender.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerSurrender.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerSurrender.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerSurrender.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionPlayerProduceUnit. */
    interface IMsgMpwActionPlayerProduceUnit {

        /** MsgMpwActionPlayerProduceUnit c */
        c?: (NetMessage.MsgMpwActionPlayerProduceUnit.IC|null);

        /** MsgMpwActionPlayerProduceUnit s */
        s?: (NetMessage.MsgMpwActionPlayerProduceUnit.IS|null);
    }

    /** Represents a MsgMpwActionPlayerProduceUnit. */
    class MsgMpwActionPlayerProduceUnit implements IMsgMpwActionPlayerProduceUnit {

        /**
         * Constructs a new MsgMpwActionPlayerProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionPlayerProduceUnit);

        /** MsgMpwActionPlayerProduceUnit c. */
        public c?: (NetMessage.MsgMpwActionPlayerProduceUnit.IC|null);

        /** MsgMpwActionPlayerProduceUnit s. */
        public s?: (NetMessage.MsgMpwActionPlayerProduceUnit.IS|null);

        /**
         * Creates a new MsgMpwActionPlayerProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionPlayerProduceUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionPlayerProduceUnit): NetMessage.MsgMpwActionPlayerProduceUnit;

        /**
         * Encodes the specified MsgMpwActionPlayerProduceUnit message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerProduceUnit.verify|verify} messages.
         * @param message MsgMpwActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionPlayerProduceUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerProduceUnit.verify|verify} messages.
         * @param message MsgMpwActionPlayerProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionPlayerProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionPlayerProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerProduceUnit;

        /**
         * Decodes a MsgMpwActionPlayerProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionPlayerProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerProduceUnit;

        /**
         * Verifies a MsgMpwActionPlayerProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionPlayerProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionPlayerProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerProduceUnit;

        /**
         * Creates a plain object from a MsgMpwActionPlayerProduceUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionPlayerProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionPlayerProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionPlayerProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionPlayerProduceUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C gridIndex */
            gridIndex?: (Structure.IGridIndex|null);

            /** C unitType */
            unitType?: (number|null);

            /** C unitHp */
            unitHp?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerProduceUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C gridIndex. */
            public gridIndex?: (Structure.IGridIndex|null);

            /** C unitType. */
            public unitType: number;

            /** C unitHp. */
            public unitHp: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerProduceUnit.IC): NetMessage.MsgMpwActionPlayerProduceUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerProduceUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerProduceUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerProduceUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerProduceUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerProduceUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerProduceUnit.IS): NetMessage.MsgMpwActionPlayerProduceUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerProduceUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerProduceUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerProduceUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerProduceUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionPlayerDeleteUnit. */
    interface IMsgMpwActionPlayerDeleteUnit {

        /** MsgMpwActionPlayerDeleteUnit c */
        c?: (NetMessage.MsgMpwActionPlayerDeleteUnit.IC|null);

        /** MsgMpwActionPlayerDeleteUnit s */
        s?: (NetMessage.MsgMpwActionPlayerDeleteUnit.IS|null);
    }

    /** Represents a MsgMpwActionPlayerDeleteUnit. */
    class MsgMpwActionPlayerDeleteUnit implements IMsgMpwActionPlayerDeleteUnit {

        /**
         * Constructs a new MsgMpwActionPlayerDeleteUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionPlayerDeleteUnit);

        /** MsgMpwActionPlayerDeleteUnit c. */
        public c?: (NetMessage.MsgMpwActionPlayerDeleteUnit.IC|null);

        /** MsgMpwActionPlayerDeleteUnit s. */
        public s?: (NetMessage.MsgMpwActionPlayerDeleteUnit.IS|null);

        /**
         * Creates a new MsgMpwActionPlayerDeleteUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionPlayerDeleteUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionPlayerDeleteUnit): NetMessage.MsgMpwActionPlayerDeleteUnit;

        /**
         * Encodes the specified MsgMpwActionPlayerDeleteUnit message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerDeleteUnit.verify|verify} messages.
         * @param message MsgMpwActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionPlayerDeleteUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerDeleteUnit.verify|verify} messages.
         * @param message MsgMpwActionPlayerDeleteUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionPlayerDeleteUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionPlayerDeleteUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerDeleteUnit;

        /**
         * Decodes a MsgMpwActionPlayerDeleteUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionPlayerDeleteUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerDeleteUnit;

        /**
         * Verifies a MsgMpwActionPlayerDeleteUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionPlayerDeleteUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionPlayerDeleteUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerDeleteUnit;

        /**
         * Creates a plain object from a MsgMpwActionPlayerDeleteUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionPlayerDeleteUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionPlayerDeleteUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionPlayerDeleteUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionPlayerDeleteUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C gridIndex */
            gridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerDeleteUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C gridIndex. */
            public gridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerDeleteUnit.IC): NetMessage.MsgMpwActionPlayerDeleteUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerDeleteUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerDeleteUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerDeleteUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerDeleteUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerDeleteUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerDeleteUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerDeleteUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerDeleteUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerDeleteUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerDeleteUnit.IS): NetMessage.MsgMpwActionPlayerDeleteUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerDeleteUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerDeleteUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerDeleteUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerDeleteUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerDeleteUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerDeleteUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerDeleteUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerDeleteUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionPlayerVoteForDraw. */
    interface IMsgMpwActionPlayerVoteForDraw {

        /** MsgMpwActionPlayerVoteForDraw c */
        c?: (NetMessage.MsgMpwActionPlayerVoteForDraw.IC|null);

        /** MsgMpwActionPlayerVoteForDraw s */
        s?: (NetMessage.MsgMpwActionPlayerVoteForDraw.IS|null);
    }

    /** Represents a MsgMpwActionPlayerVoteForDraw. */
    class MsgMpwActionPlayerVoteForDraw implements IMsgMpwActionPlayerVoteForDraw {

        /**
         * Constructs a new MsgMpwActionPlayerVoteForDraw.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionPlayerVoteForDraw);

        /** MsgMpwActionPlayerVoteForDraw c. */
        public c?: (NetMessage.MsgMpwActionPlayerVoteForDraw.IC|null);

        /** MsgMpwActionPlayerVoteForDraw s. */
        public s?: (NetMessage.MsgMpwActionPlayerVoteForDraw.IS|null);

        /**
         * Creates a new MsgMpwActionPlayerVoteForDraw instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionPlayerVoteForDraw instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionPlayerVoteForDraw): NetMessage.MsgMpwActionPlayerVoteForDraw;

        /**
         * Encodes the specified MsgMpwActionPlayerVoteForDraw message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerVoteForDraw.verify|verify} messages.
         * @param message MsgMpwActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionPlayerVoteForDraw message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerVoteForDraw.verify|verify} messages.
         * @param message MsgMpwActionPlayerVoteForDraw message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionPlayerVoteForDraw, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionPlayerVoteForDraw message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerVoteForDraw;

        /**
         * Decodes a MsgMpwActionPlayerVoteForDraw message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionPlayerVoteForDraw
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerVoteForDraw;

        /**
         * Verifies a MsgMpwActionPlayerVoteForDraw message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionPlayerVoteForDraw message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionPlayerVoteForDraw
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerVoteForDraw;

        /**
         * Creates a plain object from a MsgMpwActionPlayerVoteForDraw message. Also converts values to other types if specified.
         * @param message MsgMpwActionPlayerVoteForDraw
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionPlayerVoteForDraw, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionPlayerVoteForDraw to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionPlayerVoteForDraw {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C isAgree */
            isAgree?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerVoteForDraw.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C isAgree. */
            public isAgree: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerVoteForDraw.IC): NetMessage.MsgMpwActionPlayerVoteForDraw.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerVoteForDraw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerVoteForDraw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerVoteForDraw.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerVoteForDraw.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerVoteForDraw.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerVoteForDraw.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerVoteForDraw.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerVoteForDraw.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionPlayerVoteForDraw.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionPlayerVoteForDraw.IS): NetMessage.MsgMpwActionPlayerVoteForDraw.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionPlayerVoteForDraw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionPlayerVoteForDraw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionPlayerVoteForDraw.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionPlayerVoteForDraw.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionPlayerVoteForDraw.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionPlayerVoteForDraw.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionPlayerVoteForDraw.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionPlayerVoteForDraw.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitWait. */
    interface IMsgMpwActionUnitWait {

        /** MsgMpwActionUnitWait c */
        c?: (NetMessage.MsgMpwActionUnitWait.IC|null);

        /** MsgMpwActionUnitWait s */
        s?: (NetMessage.MsgMpwActionUnitWait.IS|null);
    }

    /** Represents a MsgMpwActionUnitWait. */
    class MsgMpwActionUnitWait implements IMsgMpwActionUnitWait {

        /**
         * Constructs a new MsgMpwActionUnitWait.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitWait);

        /** MsgMpwActionUnitWait c. */
        public c?: (NetMessage.MsgMpwActionUnitWait.IC|null);

        /** MsgMpwActionUnitWait s. */
        public s?: (NetMessage.MsgMpwActionUnitWait.IS|null);

        /**
         * Creates a new MsgMpwActionUnitWait instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitWait instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitWait): NetMessage.MsgMpwActionUnitWait;

        /**
         * Encodes the specified MsgMpwActionUnitWait message. Does not implicitly {@link NetMessage.MsgMpwActionUnitWait.verify|verify} messages.
         * @param message MsgMpwActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitWait message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitWait.verify|verify} messages.
         * @param message MsgMpwActionUnitWait message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitWait, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitWait message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitWait;

        /**
         * Decodes a MsgMpwActionUnitWait message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitWait
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitWait;

        /**
         * Verifies a MsgMpwActionUnitWait message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitWait message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitWait
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitWait;

        /**
         * Creates a plain object from a MsgMpwActionUnitWait message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitWait
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitWait, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitWait to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitWait {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitWait.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitWait.IC): NetMessage.MsgMpwActionUnitWait.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitWait.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitWait.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitWait.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitWait.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitWait.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitWait.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitWait.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitWait.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitWait.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitWait.IS): NetMessage.MsgMpwActionUnitWait.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitWait.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitWait.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitWait.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitWait.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitWait.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitWait.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitWait.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitWait.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitBeLoaded. */
    interface IMsgMpwActionUnitBeLoaded {

        /** MsgMpwActionUnitBeLoaded c */
        c?: (NetMessage.MsgMpwActionUnitBeLoaded.IC|null);

        /** MsgMpwActionUnitBeLoaded s */
        s?: (NetMessage.MsgMpwActionUnitBeLoaded.IS|null);
    }

    /** Represents a MsgMpwActionUnitBeLoaded. */
    class MsgMpwActionUnitBeLoaded implements IMsgMpwActionUnitBeLoaded {

        /**
         * Constructs a new MsgMpwActionUnitBeLoaded.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitBeLoaded);

        /** MsgMpwActionUnitBeLoaded c. */
        public c?: (NetMessage.MsgMpwActionUnitBeLoaded.IC|null);

        /** MsgMpwActionUnitBeLoaded s. */
        public s?: (NetMessage.MsgMpwActionUnitBeLoaded.IS|null);

        /**
         * Creates a new MsgMpwActionUnitBeLoaded instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitBeLoaded instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitBeLoaded): NetMessage.MsgMpwActionUnitBeLoaded;

        /**
         * Encodes the specified MsgMpwActionUnitBeLoaded message. Does not implicitly {@link NetMessage.MsgMpwActionUnitBeLoaded.verify|verify} messages.
         * @param message MsgMpwActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitBeLoaded message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitBeLoaded.verify|verify} messages.
         * @param message MsgMpwActionUnitBeLoaded message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitBeLoaded, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitBeLoaded message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitBeLoaded;

        /**
         * Decodes a MsgMpwActionUnitBeLoaded message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitBeLoaded
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitBeLoaded;

        /**
         * Verifies a MsgMpwActionUnitBeLoaded message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitBeLoaded message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitBeLoaded
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitBeLoaded;

        /**
         * Creates a plain object from a MsgMpwActionUnitBeLoaded message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitBeLoaded
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitBeLoaded, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitBeLoaded to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitBeLoaded {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitBeLoaded.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitBeLoaded.IC): NetMessage.MsgMpwActionUnitBeLoaded.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitBeLoaded.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitBeLoaded.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitBeLoaded.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitBeLoaded.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitBeLoaded.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitBeLoaded.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitBeLoaded.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitBeLoaded.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitBeLoaded.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitBeLoaded.IS): NetMessage.MsgMpwActionUnitBeLoaded.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitBeLoaded.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitBeLoaded.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitBeLoaded.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitBeLoaded.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitBeLoaded.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitBeLoaded.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitBeLoaded.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitBeLoaded.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitCaptureTile. */
    interface IMsgMpwActionUnitCaptureTile {

        /** MsgMpwActionUnitCaptureTile c */
        c?: (NetMessage.MsgMpwActionUnitCaptureTile.IC|null);

        /** MsgMpwActionUnitCaptureTile s */
        s?: (NetMessage.MsgMpwActionUnitCaptureTile.IS|null);
    }

    /** Represents a MsgMpwActionUnitCaptureTile. */
    class MsgMpwActionUnitCaptureTile implements IMsgMpwActionUnitCaptureTile {

        /**
         * Constructs a new MsgMpwActionUnitCaptureTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitCaptureTile);

        /** MsgMpwActionUnitCaptureTile c. */
        public c?: (NetMessage.MsgMpwActionUnitCaptureTile.IC|null);

        /** MsgMpwActionUnitCaptureTile s. */
        public s?: (NetMessage.MsgMpwActionUnitCaptureTile.IS|null);

        /**
         * Creates a new MsgMpwActionUnitCaptureTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitCaptureTile instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitCaptureTile): NetMessage.MsgMpwActionUnitCaptureTile;

        /**
         * Encodes the specified MsgMpwActionUnitCaptureTile message. Does not implicitly {@link NetMessage.MsgMpwActionUnitCaptureTile.verify|verify} messages.
         * @param message MsgMpwActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitCaptureTile message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitCaptureTile.verify|verify} messages.
         * @param message MsgMpwActionUnitCaptureTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitCaptureTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitCaptureTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitCaptureTile;

        /**
         * Decodes a MsgMpwActionUnitCaptureTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitCaptureTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitCaptureTile;

        /**
         * Verifies a MsgMpwActionUnitCaptureTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitCaptureTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitCaptureTile
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitCaptureTile;

        /**
         * Creates a plain object from a MsgMpwActionUnitCaptureTile message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitCaptureTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitCaptureTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitCaptureTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitCaptureTile {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitCaptureTile.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitCaptureTile.IC): NetMessage.MsgMpwActionUnitCaptureTile.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitCaptureTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitCaptureTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitCaptureTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitCaptureTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitCaptureTile.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitCaptureTile.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitCaptureTile.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitCaptureTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitCaptureTile.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitCaptureTile.IS): NetMessage.MsgMpwActionUnitCaptureTile.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitCaptureTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitCaptureTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitCaptureTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitCaptureTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitCaptureTile.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitCaptureTile.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitCaptureTile.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitCaptureTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitAttackTile. */
    interface IMsgMpwActionUnitAttackTile {

        /** MsgMpwActionUnitAttackTile c */
        c?: (NetMessage.MsgMpwActionUnitAttackTile.IC|null);

        /** MsgMpwActionUnitAttackTile s */
        s?: (NetMessage.MsgMpwActionUnitAttackTile.IS|null);
    }

    /** Represents a MsgMpwActionUnitAttackTile. */
    class MsgMpwActionUnitAttackTile implements IMsgMpwActionUnitAttackTile {

        /**
         * Constructs a new MsgMpwActionUnitAttackTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitAttackTile);

        /** MsgMpwActionUnitAttackTile c. */
        public c?: (NetMessage.MsgMpwActionUnitAttackTile.IC|null);

        /** MsgMpwActionUnitAttackTile s. */
        public s?: (NetMessage.MsgMpwActionUnitAttackTile.IS|null);

        /**
         * Creates a new MsgMpwActionUnitAttackTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitAttackTile instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitAttackTile): NetMessage.MsgMpwActionUnitAttackTile;

        /**
         * Encodes the specified MsgMpwActionUnitAttackTile message. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackTile.verify|verify} messages.
         * @param message MsgMpwActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitAttackTile message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackTile.verify|verify} messages.
         * @param message MsgMpwActionUnitAttackTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitAttackTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitAttackTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitAttackTile;

        /**
         * Decodes a MsgMpwActionUnitAttackTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitAttackTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitAttackTile;

        /**
         * Verifies a MsgMpwActionUnitAttackTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitAttackTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitAttackTile
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitAttackTile;

        /**
         * Creates a plain object from a MsgMpwActionUnitAttackTile message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitAttackTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitAttackTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitAttackTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitAttackTile {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitAttackTile.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitAttackTile.IC): NetMessage.MsgMpwActionUnitAttackTile.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitAttackTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitAttackTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitAttackTile.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitAttackTile.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitAttackTile.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitAttackTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitAttackTile.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitAttackTile.IS): NetMessage.MsgMpwActionUnitAttackTile.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitAttackTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitAttackTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitAttackTile.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitAttackTile.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitAttackTile.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitAttackTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitAttackUnit. */
    interface IMsgMpwActionUnitAttackUnit {

        /** MsgMpwActionUnitAttackUnit c */
        c?: (NetMessage.MsgMpwActionUnitAttackUnit.IC|null);

        /** MsgMpwActionUnitAttackUnit s */
        s?: (NetMessage.MsgMpwActionUnitAttackUnit.IS|null);
    }

    /** Represents a MsgMpwActionUnitAttackUnit. */
    class MsgMpwActionUnitAttackUnit implements IMsgMpwActionUnitAttackUnit {

        /**
         * Constructs a new MsgMpwActionUnitAttackUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitAttackUnit);

        /** MsgMpwActionUnitAttackUnit c. */
        public c?: (NetMessage.MsgMpwActionUnitAttackUnit.IC|null);

        /** MsgMpwActionUnitAttackUnit s. */
        public s?: (NetMessage.MsgMpwActionUnitAttackUnit.IS|null);

        /**
         * Creates a new MsgMpwActionUnitAttackUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitAttackUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitAttackUnit): NetMessage.MsgMpwActionUnitAttackUnit;

        /**
         * Encodes the specified MsgMpwActionUnitAttackUnit message. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitAttackUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitAttackUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitAttackUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitAttackUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitAttackUnit;

        /**
         * Decodes a MsgMpwActionUnitAttackUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitAttackUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitAttackUnit;

        /**
         * Verifies a MsgMpwActionUnitAttackUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitAttackUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitAttackUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitAttackUnit;

        /**
         * Creates a plain object from a MsgMpwActionUnitAttackUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitAttackUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitAttackUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitAttackUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitAttackUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitAttackUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitAttackUnit.IC): NetMessage.MsgMpwActionUnitAttackUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitAttackUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitAttackUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitAttackUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitAttackUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitAttackUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitAttackUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitAttackUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitAttackUnit.IS): NetMessage.MsgMpwActionUnitAttackUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitAttackUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitAttackUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitAttackUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitAttackUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitAttackUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitAttackUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitAttackUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitDropUnit. */
    interface IMsgMpwActionUnitDropUnit {

        /** MsgMpwActionUnitDropUnit c */
        c?: (NetMessage.MsgMpwActionUnitDropUnit.IC|null);

        /** MsgMpwActionUnitDropUnit s */
        s?: (NetMessage.MsgMpwActionUnitDropUnit.IS|null);
    }

    /** Represents a MsgMpwActionUnitDropUnit. */
    class MsgMpwActionUnitDropUnit implements IMsgMpwActionUnitDropUnit {

        /**
         * Constructs a new MsgMpwActionUnitDropUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitDropUnit);

        /** MsgMpwActionUnitDropUnit c. */
        public c?: (NetMessage.MsgMpwActionUnitDropUnit.IC|null);

        /** MsgMpwActionUnitDropUnit s. */
        public s?: (NetMessage.MsgMpwActionUnitDropUnit.IS|null);

        /**
         * Creates a new MsgMpwActionUnitDropUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitDropUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitDropUnit): NetMessage.MsgMpwActionUnitDropUnit;

        /**
         * Encodes the specified MsgMpwActionUnitDropUnit message. Does not implicitly {@link NetMessage.MsgMpwActionUnitDropUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitDropUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitDropUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitDropUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitDropUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitDropUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitDropUnit;

        /**
         * Decodes a MsgMpwActionUnitDropUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitDropUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitDropUnit;

        /**
         * Verifies a MsgMpwActionUnitDropUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitDropUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitDropUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitDropUnit;

        /**
         * Creates a plain object from a MsgMpwActionUnitDropUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitDropUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitDropUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitDropUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitDropUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C dropDestinations */
            dropDestinations?: (Structure.IDropDestination[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitDropUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C dropDestinations. */
            public dropDestinations: Structure.IDropDestination[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitDropUnit.IC): NetMessage.MsgMpwActionUnitDropUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitDropUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitDropUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitDropUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitDropUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitDropUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitDropUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitDropUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitDropUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitDropUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitDropUnit.IS): NetMessage.MsgMpwActionUnitDropUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitDropUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitDropUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitDropUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitDropUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitDropUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitDropUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitDropUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitDropUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitBuildTile. */
    interface IMsgMpwActionUnitBuildTile {

        /** MsgMpwActionUnitBuildTile c */
        c?: (NetMessage.MsgMpwActionUnitBuildTile.IC|null);

        /** MsgMpwActionUnitBuildTile s */
        s?: (NetMessage.MsgMpwActionUnitBuildTile.IS|null);
    }

    /** Represents a MsgMpwActionUnitBuildTile. */
    class MsgMpwActionUnitBuildTile implements IMsgMpwActionUnitBuildTile {

        /**
         * Constructs a new MsgMpwActionUnitBuildTile.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitBuildTile);

        /** MsgMpwActionUnitBuildTile c. */
        public c?: (NetMessage.MsgMpwActionUnitBuildTile.IC|null);

        /** MsgMpwActionUnitBuildTile s. */
        public s?: (NetMessage.MsgMpwActionUnitBuildTile.IS|null);

        /**
         * Creates a new MsgMpwActionUnitBuildTile instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitBuildTile instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitBuildTile): NetMessage.MsgMpwActionUnitBuildTile;

        /**
         * Encodes the specified MsgMpwActionUnitBuildTile message. Does not implicitly {@link NetMessage.MsgMpwActionUnitBuildTile.verify|verify} messages.
         * @param message MsgMpwActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitBuildTile message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitBuildTile.verify|verify} messages.
         * @param message MsgMpwActionUnitBuildTile message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitBuildTile, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitBuildTile message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitBuildTile;

        /**
         * Decodes a MsgMpwActionUnitBuildTile message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitBuildTile
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitBuildTile;

        /**
         * Verifies a MsgMpwActionUnitBuildTile message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitBuildTile message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitBuildTile
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitBuildTile;

        /**
         * Creates a plain object from a MsgMpwActionUnitBuildTile message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitBuildTile
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitBuildTile, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitBuildTile to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitBuildTile {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitBuildTile.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitBuildTile.IC): NetMessage.MsgMpwActionUnitBuildTile.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitBuildTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitBuildTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitBuildTile.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitBuildTile.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitBuildTile.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitBuildTile.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitBuildTile.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitBuildTile.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitBuildTile.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitBuildTile.IS): NetMessage.MsgMpwActionUnitBuildTile.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitBuildTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitBuildTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitBuildTile.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitBuildTile.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitBuildTile.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitBuildTile.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitBuildTile.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitBuildTile.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitDive. */
    interface IMsgMpwActionUnitDive {

        /** MsgMpwActionUnitDive c */
        c?: (NetMessage.MsgMpwActionUnitDive.IC|null);

        /** MsgMpwActionUnitDive s */
        s?: (NetMessage.MsgMpwActionUnitDive.IS|null);
    }

    /** Represents a MsgMpwActionUnitDive. */
    class MsgMpwActionUnitDive implements IMsgMpwActionUnitDive {

        /**
         * Constructs a new MsgMpwActionUnitDive.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitDive);

        /** MsgMpwActionUnitDive c. */
        public c?: (NetMessage.MsgMpwActionUnitDive.IC|null);

        /** MsgMpwActionUnitDive s. */
        public s?: (NetMessage.MsgMpwActionUnitDive.IS|null);

        /**
         * Creates a new MsgMpwActionUnitDive instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitDive instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitDive): NetMessage.MsgMpwActionUnitDive;

        /**
         * Encodes the specified MsgMpwActionUnitDive message. Does not implicitly {@link NetMessage.MsgMpwActionUnitDive.verify|verify} messages.
         * @param message MsgMpwActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitDive message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitDive.verify|verify} messages.
         * @param message MsgMpwActionUnitDive message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitDive, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitDive message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitDive;

        /**
         * Decodes a MsgMpwActionUnitDive message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitDive
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitDive;

        /**
         * Verifies a MsgMpwActionUnitDive message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitDive message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitDive
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitDive;

        /**
         * Creates a plain object from a MsgMpwActionUnitDive message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitDive
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitDive, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitDive to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitDive {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitDive.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitDive.IC): NetMessage.MsgMpwActionUnitDive.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitDive.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitDive.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitDive.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitDive.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitDive.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitDive.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitDive.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitDive.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitDive.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitDive.IS): NetMessage.MsgMpwActionUnitDive.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitDive.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitDive.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitDive.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitDive.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitDive.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitDive.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitDive.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitDive.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitSurface. */
    interface IMsgMpwActionUnitSurface {

        /** MsgMpwActionUnitSurface c */
        c?: (NetMessage.MsgMpwActionUnitSurface.IC|null);

        /** MsgMpwActionUnitSurface s */
        s?: (NetMessage.MsgMpwActionUnitSurface.IS|null);
    }

    /** Represents a MsgMpwActionUnitSurface. */
    class MsgMpwActionUnitSurface implements IMsgMpwActionUnitSurface {

        /**
         * Constructs a new MsgMpwActionUnitSurface.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitSurface);

        /** MsgMpwActionUnitSurface c. */
        public c?: (NetMessage.MsgMpwActionUnitSurface.IC|null);

        /** MsgMpwActionUnitSurface s. */
        public s?: (NetMessage.MsgMpwActionUnitSurface.IS|null);

        /**
         * Creates a new MsgMpwActionUnitSurface instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitSurface instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitSurface): NetMessage.MsgMpwActionUnitSurface;

        /**
         * Encodes the specified MsgMpwActionUnitSurface message. Does not implicitly {@link NetMessage.MsgMpwActionUnitSurface.verify|verify} messages.
         * @param message MsgMpwActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitSurface message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitSurface.verify|verify} messages.
         * @param message MsgMpwActionUnitSurface message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitSurface, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitSurface message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitSurface;

        /**
         * Decodes a MsgMpwActionUnitSurface message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitSurface
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitSurface;

        /**
         * Verifies a MsgMpwActionUnitSurface message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitSurface message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitSurface
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitSurface;

        /**
         * Creates a plain object from a MsgMpwActionUnitSurface message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitSurface
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitSurface, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitSurface to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitSurface {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitSurface.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitSurface.IC): NetMessage.MsgMpwActionUnitSurface.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitSurface.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitSurface.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitSurface.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitSurface.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitSurface.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitSurface.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitSurface.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitSurface.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitSurface.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitSurface.IS): NetMessage.MsgMpwActionUnitSurface.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitSurface.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitSurface.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitSurface.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitSurface.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitSurface.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitSurface.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitSurface.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitSurface.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitJoinUnit. */
    interface IMsgMpwActionUnitJoinUnit {

        /** MsgMpwActionUnitJoinUnit c */
        c?: (NetMessage.MsgMpwActionUnitJoinUnit.IC|null);

        /** MsgMpwActionUnitJoinUnit s */
        s?: (NetMessage.MsgMpwActionUnitJoinUnit.IS|null);
    }

    /** Represents a MsgMpwActionUnitJoinUnit. */
    class MsgMpwActionUnitJoinUnit implements IMsgMpwActionUnitJoinUnit {

        /**
         * Constructs a new MsgMpwActionUnitJoinUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitJoinUnit);

        /** MsgMpwActionUnitJoinUnit c. */
        public c?: (NetMessage.MsgMpwActionUnitJoinUnit.IC|null);

        /** MsgMpwActionUnitJoinUnit s. */
        public s?: (NetMessage.MsgMpwActionUnitJoinUnit.IS|null);

        /**
         * Creates a new MsgMpwActionUnitJoinUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitJoinUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitJoinUnit): NetMessage.MsgMpwActionUnitJoinUnit;

        /**
         * Encodes the specified MsgMpwActionUnitJoinUnit message. Does not implicitly {@link NetMessage.MsgMpwActionUnitJoinUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitJoinUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitJoinUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitJoinUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitJoinUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitJoinUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitJoinUnit;

        /**
         * Decodes a MsgMpwActionUnitJoinUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitJoinUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitJoinUnit;

        /**
         * Verifies a MsgMpwActionUnitJoinUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitJoinUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitJoinUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitJoinUnit;

        /**
         * Creates a plain object from a MsgMpwActionUnitJoinUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitJoinUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitJoinUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitJoinUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitJoinUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitJoinUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitJoinUnit.IC): NetMessage.MsgMpwActionUnitJoinUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitJoinUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitJoinUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitJoinUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitJoinUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitJoinUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitJoinUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitJoinUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitJoinUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitJoinUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitJoinUnit.IS): NetMessage.MsgMpwActionUnitJoinUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitJoinUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitJoinUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitJoinUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitJoinUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitJoinUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitJoinUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitJoinUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitJoinUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitLaunchFlare. */
    interface IMsgMpwActionUnitLaunchFlare {

        /** MsgMpwActionUnitLaunchFlare c */
        c?: (NetMessage.MsgMpwActionUnitLaunchFlare.IC|null);

        /** MsgMpwActionUnitLaunchFlare s */
        s?: (NetMessage.MsgMpwActionUnitLaunchFlare.IS|null);
    }

    /** Represents a MsgMpwActionUnitLaunchFlare. */
    class MsgMpwActionUnitLaunchFlare implements IMsgMpwActionUnitLaunchFlare {

        /**
         * Constructs a new MsgMpwActionUnitLaunchFlare.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitLaunchFlare);

        /** MsgMpwActionUnitLaunchFlare c. */
        public c?: (NetMessage.MsgMpwActionUnitLaunchFlare.IC|null);

        /** MsgMpwActionUnitLaunchFlare s. */
        public s?: (NetMessage.MsgMpwActionUnitLaunchFlare.IS|null);

        /**
         * Creates a new MsgMpwActionUnitLaunchFlare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitLaunchFlare instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitLaunchFlare): NetMessage.MsgMpwActionUnitLaunchFlare;

        /**
         * Encodes the specified MsgMpwActionUnitLaunchFlare message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchFlare.verify|verify} messages.
         * @param message MsgMpwActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitLaunchFlare message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchFlare.verify|verify} messages.
         * @param message MsgMpwActionUnitLaunchFlare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitLaunchFlare, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitLaunchFlare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLaunchFlare;

        /**
         * Decodes a MsgMpwActionUnitLaunchFlare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitLaunchFlare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLaunchFlare;

        /**
         * Verifies a MsgMpwActionUnitLaunchFlare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitLaunchFlare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitLaunchFlare
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLaunchFlare;

        /**
         * Creates a plain object from a MsgMpwActionUnitLaunchFlare message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitLaunchFlare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitLaunchFlare, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitLaunchFlare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitLaunchFlare {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitLaunchFlare.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitLaunchFlare.IC): NetMessage.MsgMpwActionUnitLaunchFlare.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchFlare.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitLaunchFlare.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchFlare.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitLaunchFlare.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLaunchFlare.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLaunchFlare.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLaunchFlare.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitLaunchFlare.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitLaunchFlare.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitLaunchFlare.IS): NetMessage.MsgMpwActionUnitLaunchFlare.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchFlare.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitLaunchFlare.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchFlare.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitLaunchFlare.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLaunchFlare.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLaunchFlare.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLaunchFlare.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitLaunchFlare.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitLaunchSilo. */
    interface IMsgMpwActionUnitLaunchSilo {

        /** MsgMpwActionUnitLaunchSilo c */
        c?: (NetMessage.MsgMpwActionUnitLaunchSilo.IC|null);

        /** MsgMpwActionUnitLaunchSilo s */
        s?: (NetMessage.MsgMpwActionUnitLaunchSilo.IS|null);
    }

    /** Represents a MsgMpwActionUnitLaunchSilo. */
    class MsgMpwActionUnitLaunchSilo implements IMsgMpwActionUnitLaunchSilo {

        /**
         * Constructs a new MsgMpwActionUnitLaunchSilo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitLaunchSilo);

        /** MsgMpwActionUnitLaunchSilo c. */
        public c?: (NetMessage.MsgMpwActionUnitLaunchSilo.IC|null);

        /** MsgMpwActionUnitLaunchSilo s. */
        public s?: (NetMessage.MsgMpwActionUnitLaunchSilo.IS|null);

        /**
         * Creates a new MsgMpwActionUnitLaunchSilo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitLaunchSilo instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitLaunchSilo): NetMessage.MsgMpwActionUnitLaunchSilo;

        /**
         * Encodes the specified MsgMpwActionUnitLaunchSilo message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchSilo.verify|verify} messages.
         * @param message MsgMpwActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitLaunchSilo message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchSilo.verify|verify} messages.
         * @param message MsgMpwActionUnitLaunchSilo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitLaunchSilo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitLaunchSilo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLaunchSilo;

        /**
         * Decodes a MsgMpwActionUnitLaunchSilo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitLaunchSilo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLaunchSilo;

        /**
         * Verifies a MsgMpwActionUnitLaunchSilo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitLaunchSilo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitLaunchSilo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLaunchSilo;

        /**
         * Creates a plain object from a MsgMpwActionUnitLaunchSilo message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitLaunchSilo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitLaunchSilo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitLaunchSilo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitLaunchSilo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C targetGridIndex */
            targetGridIndex?: (Structure.IGridIndex|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitLaunchSilo.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C targetGridIndex. */
            public targetGridIndex?: (Structure.IGridIndex|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitLaunchSilo.IC): NetMessage.MsgMpwActionUnitLaunchSilo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchSilo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitLaunchSilo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchSilo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitLaunchSilo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLaunchSilo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLaunchSilo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLaunchSilo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitLaunchSilo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitLaunchSilo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitLaunchSilo.IS): NetMessage.MsgMpwActionUnitLaunchSilo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchSilo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitLaunchSilo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLaunchSilo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitLaunchSilo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLaunchSilo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLaunchSilo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLaunchSilo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitLaunchSilo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitProduceUnit. */
    interface IMsgMpwActionUnitProduceUnit {

        /** MsgMpwActionUnitProduceUnit c */
        c?: (NetMessage.MsgMpwActionUnitProduceUnit.IC|null);

        /** MsgMpwActionUnitProduceUnit s */
        s?: (NetMessage.MsgMpwActionUnitProduceUnit.IS|null);
    }

    /** Represents a MsgMpwActionUnitProduceUnit. */
    class MsgMpwActionUnitProduceUnit implements IMsgMpwActionUnitProduceUnit {

        /**
         * Constructs a new MsgMpwActionUnitProduceUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitProduceUnit);

        /** MsgMpwActionUnitProduceUnit c. */
        public c?: (NetMessage.MsgMpwActionUnitProduceUnit.IC|null);

        /** MsgMpwActionUnitProduceUnit s. */
        public s?: (NetMessage.MsgMpwActionUnitProduceUnit.IS|null);

        /**
         * Creates a new MsgMpwActionUnitProduceUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitProduceUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitProduceUnit): NetMessage.MsgMpwActionUnitProduceUnit;

        /**
         * Encodes the specified MsgMpwActionUnitProduceUnit message. Does not implicitly {@link NetMessage.MsgMpwActionUnitProduceUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitProduceUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitProduceUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitProduceUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitProduceUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitProduceUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitProduceUnit;

        /**
         * Decodes a MsgMpwActionUnitProduceUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitProduceUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitProduceUnit;

        /**
         * Verifies a MsgMpwActionUnitProduceUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitProduceUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitProduceUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitProduceUnit;

        /**
         * Creates a plain object from a MsgMpwActionUnitProduceUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitProduceUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitProduceUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitProduceUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitProduceUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitProduceUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitProduceUnit.IC): NetMessage.MsgMpwActionUnitProduceUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitProduceUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitProduceUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitProduceUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitProduceUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitProduceUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitProduceUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitProduceUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitProduceUnit.IS): NetMessage.MsgMpwActionUnitProduceUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitProduceUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitProduceUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitProduceUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitProduceUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitProduceUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitProduceUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitSupplyUnit. */
    interface IMsgMpwActionUnitSupplyUnit {

        /** MsgMpwActionUnitSupplyUnit c */
        c?: (NetMessage.MsgMpwActionUnitSupplyUnit.IC|null);

        /** MsgMpwActionUnitSupplyUnit s */
        s?: (NetMessage.MsgMpwActionUnitSupplyUnit.IS|null);
    }

    /** Represents a MsgMpwActionUnitSupplyUnit. */
    class MsgMpwActionUnitSupplyUnit implements IMsgMpwActionUnitSupplyUnit {

        /**
         * Constructs a new MsgMpwActionUnitSupplyUnit.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitSupplyUnit);

        /** MsgMpwActionUnitSupplyUnit c. */
        public c?: (NetMessage.MsgMpwActionUnitSupplyUnit.IC|null);

        /** MsgMpwActionUnitSupplyUnit s. */
        public s?: (NetMessage.MsgMpwActionUnitSupplyUnit.IS|null);

        /**
         * Creates a new MsgMpwActionUnitSupplyUnit instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitSupplyUnit instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitSupplyUnit): NetMessage.MsgMpwActionUnitSupplyUnit;

        /**
         * Encodes the specified MsgMpwActionUnitSupplyUnit message. Does not implicitly {@link NetMessage.MsgMpwActionUnitSupplyUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitSupplyUnit message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitSupplyUnit.verify|verify} messages.
         * @param message MsgMpwActionUnitSupplyUnit message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitSupplyUnit, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitSupplyUnit message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitSupplyUnit;

        /**
         * Decodes a MsgMpwActionUnitSupplyUnit message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitSupplyUnit
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitSupplyUnit;

        /**
         * Verifies a MsgMpwActionUnitSupplyUnit message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitSupplyUnit message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitSupplyUnit
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitSupplyUnit;

        /**
         * Creates a plain object from a MsgMpwActionUnitSupplyUnit message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitSupplyUnit
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitSupplyUnit, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitSupplyUnit to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitSupplyUnit {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitSupplyUnit.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitSupplyUnit.IC): NetMessage.MsgMpwActionUnitSupplyUnit.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitSupplyUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitSupplyUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitSupplyUnit.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitSupplyUnit.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitSupplyUnit.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitSupplyUnit.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitSupplyUnit.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitSupplyUnit.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitSupplyUnit.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitSupplyUnit.IS): NetMessage.MsgMpwActionUnitSupplyUnit.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitSupplyUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitSupplyUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitSupplyUnit.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitSupplyUnit.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitSupplyUnit.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitSupplyUnit.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitSupplyUnit.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitSupplyUnit.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitLoadCo. */
    interface IMsgMpwActionUnitLoadCo {

        /** MsgMpwActionUnitLoadCo c */
        c?: (NetMessage.MsgMpwActionUnitLoadCo.IC|null);

        /** MsgMpwActionUnitLoadCo s */
        s?: (NetMessage.MsgMpwActionUnitLoadCo.IS|null);
    }

    /** Represents a MsgMpwActionUnitLoadCo. */
    class MsgMpwActionUnitLoadCo implements IMsgMpwActionUnitLoadCo {

        /**
         * Constructs a new MsgMpwActionUnitLoadCo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitLoadCo);

        /** MsgMpwActionUnitLoadCo c. */
        public c?: (NetMessage.MsgMpwActionUnitLoadCo.IC|null);

        /** MsgMpwActionUnitLoadCo s. */
        public s?: (NetMessage.MsgMpwActionUnitLoadCo.IS|null);

        /**
         * Creates a new MsgMpwActionUnitLoadCo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitLoadCo instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitLoadCo): NetMessage.MsgMpwActionUnitLoadCo;

        /**
         * Encodes the specified MsgMpwActionUnitLoadCo message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLoadCo.verify|verify} messages.
         * @param message MsgMpwActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitLoadCo message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLoadCo.verify|verify} messages.
         * @param message MsgMpwActionUnitLoadCo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitLoadCo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitLoadCo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLoadCo;

        /**
         * Decodes a MsgMpwActionUnitLoadCo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitLoadCo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLoadCo;

        /**
         * Verifies a MsgMpwActionUnitLoadCo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitLoadCo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitLoadCo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLoadCo;

        /**
         * Creates a plain object from a MsgMpwActionUnitLoadCo message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitLoadCo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitLoadCo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitLoadCo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitLoadCo {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitLoadCo.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitLoadCo.IC): NetMessage.MsgMpwActionUnitLoadCo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLoadCo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitLoadCo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLoadCo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitLoadCo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLoadCo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLoadCo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLoadCo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitLoadCo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitLoadCo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitLoadCo.IS): NetMessage.MsgMpwActionUnitLoadCo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitLoadCo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitLoadCo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitLoadCo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitLoadCo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitLoadCo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitLoadCo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitLoadCo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitLoadCo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMpwActionUnitUseCoSkill. */
    interface IMsgMpwActionUnitUseCoSkill {

        /** MsgMpwActionUnitUseCoSkill c */
        c?: (NetMessage.MsgMpwActionUnitUseCoSkill.IC|null);

        /** MsgMpwActionUnitUseCoSkill s */
        s?: (NetMessage.MsgMpwActionUnitUseCoSkill.IS|null);
    }

    /** Represents a MsgMpwActionUnitUseCoSkill. */
    class MsgMpwActionUnitUseCoSkill implements IMsgMpwActionUnitUseCoSkill {

        /**
         * Constructs a new MsgMpwActionUnitUseCoSkill.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMpwActionUnitUseCoSkill);

        /** MsgMpwActionUnitUseCoSkill c. */
        public c?: (NetMessage.MsgMpwActionUnitUseCoSkill.IC|null);

        /** MsgMpwActionUnitUseCoSkill s. */
        public s?: (NetMessage.MsgMpwActionUnitUseCoSkill.IS|null);

        /**
         * Creates a new MsgMpwActionUnitUseCoSkill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMpwActionUnitUseCoSkill instance
         */
        public static create(properties?: NetMessage.IMsgMpwActionUnitUseCoSkill): NetMessage.MsgMpwActionUnitUseCoSkill;

        /**
         * Encodes the specified MsgMpwActionUnitUseCoSkill message. Does not implicitly {@link NetMessage.MsgMpwActionUnitUseCoSkill.verify|verify} messages.
         * @param message MsgMpwActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMpwActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMpwActionUnitUseCoSkill message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitUseCoSkill.verify|verify} messages.
         * @param message MsgMpwActionUnitUseCoSkill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMpwActionUnitUseCoSkill, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMpwActionUnitUseCoSkill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMpwActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitUseCoSkill;

        /**
         * Decodes a MsgMpwActionUnitUseCoSkill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMpwActionUnitUseCoSkill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitUseCoSkill;

        /**
         * Verifies a MsgMpwActionUnitUseCoSkill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMpwActionUnitUseCoSkill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMpwActionUnitUseCoSkill
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitUseCoSkill;

        /**
         * Creates a plain object from a MsgMpwActionUnitUseCoSkill message. Also converts values to other types if specified.
         * @param message MsgMpwActionUnitUseCoSkill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMpwActionUnitUseCoSkill, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMpwActionUnitUseCoSkill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMpwActionUnitUseCoSkill {

        /** Properties of a C. */
        interface IC {

            /** C warId */
            warId?: (number|null);

            /** C actionId */
            actionId?: (number|null);

            /** C path */
            path?: (Structure.IGridIndex[]|null);

            /** C launchUnitId */
            launchUnitId?: (number|null);

            /** C skillType */
            skillType?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitUseCoSkill.IC);

            /** C warId. */
            public warId: number;

            /** C actionId. */
            public actionId: number;

            /** C path. */
            public path: Structure.IGridIndex[];

            /** C launchUnitId. */
            public launchUnitId: number;

            /** C skillType. */
            public skillType: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitUseCoSkill.IC): NetMessage.MsgMpwActionUnitUseCoSkill.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMpwActionUnitUseCoSkill.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitUseCoSkill.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitUseCoSkill.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitUseCoSkill.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitUseCoSkill.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitUseCoSkill.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitUseCoSkill.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitUseCoSkill.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S warId */
            warId?: (number|null);

            /** S actionContainer */
            actionContainer?: (WarAction.IWarActionContainer|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMpwActionUnitUseCoSkill.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S warId. */
            public warId: number;

            /** S actionContainer. */
            public actionContainer?: (WarAction.IWarActionContainer|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMpwActionUnitUseCoSkill.IS): NetMessage.MsgMpwActionUnitUseCoSkill.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMpwActionUnitUseCoSkill.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMpwActionUnitUseCoSkill.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMpwActionUnitUseCoSkill.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMpwActionUnitUseCoSkill.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMpwActionUnitUseCoSkill.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMpwActionUnitUseCoSkill.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMpwActionUnitUseCoSkill.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMpwActionUnitUseCoSkill.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrCreateWar. */
    interface IMsgScrCreateWar {

        /** MsgScrCreateWar c */
        c?: (NetMessage.MsgScrCreateWar.IC|null);

        /** MsgScrCreateWar s */
        s?: (NetMessage.MsgScrCreateWar.IS|null);
    }

    /** Represents a MsgScrCreateWar. */
    class MsgScrCreateWar implements IMsgScrCreateWar {

        /**
         * Constructs a new MsgScrCreateWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrCreateWar);

        /** MsgScrCreateWar c. */
        public c?: (NetMessage.MsgScrCreateWar.IC|null);

        /** MsgScrCreateWar s. */
        public s?: (NetMessage.MsgScrCreateWar.IS|null);

        /**
         * Creates a new MsgScrCreateWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrCreateWar instance
         */
        public static create(properties?: NetMessage.IMsgScrCreateWar): NetMessage.MsgScrCreateWar;

        /**
         * Encodes the specified MsgScrCreateWar message. Does not implicitly {@link NetMessage.MsgScrCreateWar.verify|verify} messages.
         * @param message MsgScrCreateWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrCreateWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrCreateWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateWar.verify|verify} messages.
         * @param message MsgScrCreateWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrCreateWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrCreateWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrCreateWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateWar;

        /**
         * Decodes a MsgScrCreateWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrCreateWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateWar;

        /**
         * Verifies a MsgScrCreateWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrCreateWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrCreateWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateWar;

        /**
         * Creates a plain object from a MsgScrCreateWar message. Also converts values to other types if specified.
         * @param message MsgScrCreateWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrCreateWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrCreateWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrCreateWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C settingsForCommon */
            settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForScw */
            settingsForScw?: (WarSettings.ISettingsForScw|null);

            /** C playerInfoList */
            playerInfoList?: (Structure.IDataForPlayerInRoom[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C settingsForCommon. */
            public settingsForCommon?: (WarSettings.ISettingsForCommon|null);

            /** C settingsForScw. */
            public settingsForScw?: (WarSettings.ISettingsForScw|null);

            /** C playerInfoList. */
            public playerInfoList: Structure.IDataForPlayerInRoom[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrCreateWar.IC): NetMessage.MsgScrCreateWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrCreateWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrCreateWar.IS): NetMessage.MsgScrCreateWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrCreateWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrGetSaveSlotInfoList. */
    interface IMsgScrGetSaveSlotInfoList {

        /** MsgScrGetSaveSlotInfoList c */
        c?: (NetMessage.MsgScrGetSaveSlotInfoList.IC|null);

        /** MsgScrGetSaveSlotInfoList s */
        s?: (NetMessage.MsgScrGetSaveSlotInfoList.IS|null);
    }

    /** Represents a MsgScrGetSaveSlotInfoList. */
    class MsgScrGetSaveSlotInfoList implements IMsgScrGetSaveSlotInfoList {

        /**
         * Constructs a new MsgScrGetSaveSlotInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrGetSaveSlotInfoList);

        /** MsgScrGetSaveSlotInfoList c. */
        public c?: (NetMessage.MsgScrGetSaveSlotInfoList.IC|null);

        /** MsgScrGetSaveSlotInfoList s. */
        public s?: (NetMessage.MsgScrGetSaveSlotInfoList.IS|null);

        /**
         * Creates a new MsgScrGetSaveSlotInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrGetSaveSlotInfoList instance
         */
        public static create(properties?: NetMessage.IMsgScrGetSaveSlotInfoList): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Encodes the specified MsgScrGetSaveSlotInfoList message. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.verify|verify} messages.
         * @param message MsgScrGetSaveSlotInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrGetSaveSlotInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrGetSaveSlotInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.verify|verify} messages.
         * @param message MsgScrGetSaveSlotInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrGetSaveSlotInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrGetSaveSlotInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrGetSaveSlotInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Decodes a MsgScrGetSaveSlotInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrGetSaveSlotInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Verifies a MsgScrGetSaveSlotInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrGetSaveSlotInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrGetSaveSlotInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrGetSaveSlotInfoList;

        /**
         * Creates a plain object from a MsgScrGetSaveSlotInfoList message. Also converts values to other types if specified.
         * @param message MsgScrGetSaveSlotInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrGetSaveSlotInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrGetSaveSlotInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrGetSaveSlotInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IC): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrGetSaveSlotInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrGetSaveSlotInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrGetSaveSlotInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrGetSaveSlotInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S infoList */
            infoList?: (SingleCustomRoom.IScrSaveSlotInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S infoList. */
            public infoList: SingleCustomRoom.IScrSaveSlotInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrGetSaveSlotInfoList.IS): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrGetSaveSlotInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrGetSaveSlotInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrGetSaveSlotInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrGetSaveSlotInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrGetSaveSlotInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrContinueWar. */
    interface IMsgScrContinueWar {

        /** MsgScrContinueWar c */
        c?: (NetMessage.MsgScrContinueWar.IC|null);

        /** MsgScrContinueWar s */
        s?: (NetMessage.MsgScrContinueWar.IS|null);
    }

    /** Represents a MsgScrContinueWar. */
    class MsgScrContinueWar implements IMsgScrContinueWar {

        /**
         * Constructs a new MsgScrContinueWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrContinueWar);

        /** MsgScrContinueWar c. */
        public c?: (NetMessage.MsgScrContinueWar.IC|null);

        /** MsgScrContinueWar s. */
        public s?: (NetMessage.MsgScrContinueWar.IS|null);

        /**
         * Creates a new MsgScrContinueWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrContinueWar instance
         */
        public static create(properties?: NetMessage.IMsgScrContinueWar): NetMessage.MsgScrContinueWar;

        /**
         * Encodes the specified MsgScrContinueWar message. Does not implicitly {@link NetMessage.MsgScrContinueWar.verify|verify} messages.
         * @param message MsgScrContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrContinueWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrContinueWar.verify|verify} messages.
         * @param message MsgScrContinueWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrContinueWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrContinueWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrContinueWar;

        /**
         * Decodes a MsgScrContinueWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrContinueWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrContinueWar;

        /**
         * Verifies a MsgScrContinueWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrContinueWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrContinueWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrContinueWar;

        /**
         * Creates a plain object from a MsgScrContinueWar message. Also converts values to other types if specified.
         * @param message MsgScrContinueWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrContinueWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrContinueWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrContinueWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrContinueWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrContinueWar.IC): NetMessage.MsgScrContinueWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrContinueWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrContinueWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrContinueWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrContinueWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrContinueWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrContinueWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S encodedSlot */
            encodedSlot?: (Uint8Array|null);

            /** S encodedWar */
            encodedWar?: (Uint8Array|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrContinueWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S encodedSlot. */
            public encodedSlot: Uint8Array;

            /** S encodedWar. */
            public encodedWar: Uint8Array;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrContinueWar.IS): NetMessage.MsgScrContinueWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrContinueWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrContinueWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrContinueWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrContinueWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrContinueWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrContinueWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrSaveWar. */
    interface IMsgScrSaveWar {

        /** MsgScrSaveWar c */
        c?: (NetMessage.MsgScrSaveWar.IC|null);

        /** MsgScrSaveWar s */
        s?: (NetMessage.MsgScrSaveWar.IS|null);
    }

    /** Represents a MsgScrSaveWar. */
    class MsgScrSaveWar implements IMsgScrSaveWar {

        /**
         * Constructs a new MsgScrSaveWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrSaveWar);

        /** MsgScrSaveWar c. */
        public c?: (NetMessage.MsgScrSaveWar.IC|null);

        /** MsgScrSaveWar s. */
        public s?: (NetMessage.MsgScrSaveWar.IS|null);

        /**
         * Creates a new MsgScrSaveWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrSaveWar instance
         */
        public static create(properties?: NetMessage.IMsgScrSaveWar): NetMessage.MsgScrSaveWar;

        /**
         * Encodes the specified MsgScrSaveWar message. Does not implicitly {@link NetMessage.MsgScrSaveWar.verify|verify} messages.
         * @param message MsgScrSaveWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrSaveWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrSaveWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrSaveWar.verify|verify} messages.
         * @param message MsgScrSaveWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrSaveWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrSaveWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrSaveWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrSaveWar;

        /**
         * Decodes a MsgScrSaveWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrSaveWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrSaveWar;

        /**
         * Verifies a MsgScrSaveWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrSaveWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrSaveWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrSaveWar;

        /**
         * Creates a plain object from a MsgScrSaveWar message. Also converts values to other types if specified.
         * @param message MsgScrSaveWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrSaveWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrSaveWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrSaveWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotComment */
            slotComment?: (string|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrSaveWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotComment. */
            public slotComment: string;

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrSaveWar.IC): NetMessage.MsgScrSaveWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrSaveWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrSaveWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrSaveWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrSaveWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrSaveWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrSaveWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrSaveWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrSaveWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrSaveWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrSaveWar.IS): NetMessage.MsgScrSaveWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrSaveWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrSaveWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrSaveWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrSaveWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrSaveWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrSaveWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrSaveWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrSaveWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrCreateCustomWar. */
    interface IMsgScrCreateCustomWar {

        /** MsgScrCreateCustomWar c */
        c?: (NetMessage.MsgScrCreateCustomWar.IC|null);

        /** MsgScrCreateCustomWar s */
        s?: (NetMessage.MsgScrCreateCustomWar.IS|null);
    }

    /** Represents a MsgScrCreateCustomWar. */
    class MsgScrCreateCustomWar implements IMsgScrCreateCustomWar {

        /**
         * Constructs a new MsgScrCreateCustomWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrCreateCustomWar);

        /** MsgScrCreateCustomWar c. */
        public c?: (NetMessage.MsgScrCreateCustomWar.IC|null);

        /** MsgScrCreateCustomWar s. */
        public s?: (NetMessage.MsgScrCreateCustomWar.IS|null);

        /**
         * Creates a new MsgScrCreateCustomWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrCreateCustomWar instance
         */
        public static create(properties?: NetMessage.IMsgScrCreateCustomWar): NetMessage.MsgScrCreateCustomWar;

        /**
         * Encodes the specified MsgScrCreateCustomWar message. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.verify|verify} messages.
         * @param message MsgScrCreateCustomWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrCreateCustomWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrCreateCustomWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.verify|verify} messages.
         * @param message MsgScrCreateCustomWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrCreateCustomWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrCreateCustomWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrCreateCustomWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateCustomWar;

        /**
         * Decodes a MsgScrCreateCustomWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrCreateCustomWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateCustomWar;

        /**
         * Verifies a MsgScrCreateCustomWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrCreateCustomWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrCreateCustomWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateCustomWar;

        /**
         * Creates a plain object from a MsgScrCreateCustomWar message. Also converts values to other types if specified.
         * @param message MsgScrCreateCustomWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrCreateCustomWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrCreateCustomWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrCreateCustomWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);

            /** C slotComment */
            slotComment?: (string|null);

            /** C warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateCustomWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /** C slotComment. */
            public slotComment: string;

            /** C warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrCreateCustomWar.IC): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateCustomWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateCustomWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateCustomWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateCustomWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);

            /** S slotComment */
            slotComment?: (string|null);

            /** S warData */
            warData?: (WarSerialization.ISerialWar|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrCreateCustomWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /** S slotComment. */
            public slotComment: string;

            /** S warData. */
            public warData?: (WarSerialization.ISerialWar|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrCreateCustomWar.IS): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrCreateCustomWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrCreateCustomWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrCreateCustomWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrCreateCustomWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrCreateCustomWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgScrDeleteWar. */
    interface IMsgScrDeleteWar {

        /** MsgScrDeleteWar c */
        c?: (NetMessage.MsgScrDeleteWar.IC|null);

        /** MsgScrDeleteWar s */
        s?: (NetMessage.MsgScrDeleteWar.IS|null);
    }

    /** Represents a MsgScrDeleteWar. */
    class MsgScrDeleteWar implements IMsgScrDeleteWar {

        /**
         * Constructs a new MsgScrDeleteWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgScrDeleteWar);

        /** MsgScrDeleteWar c. */
        public c?: (NetMessage.MsgScrDeleteWar.IC|null);

        /** MsgScrDeleteWar s. */
        public s?: (NetMessage.MsgScrDeleteWar.IS|null);

        /**
         * Creates a new MsgScrDeleteWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgScrDeleteWar instance
         */
        public static create(properties?: NetMessage.IMsgScrDeleteWar): NetMessage.MsgScrDeleteWar;

        /**
         * Encodes the specified MsgScrDeleteWar message. Does not implicitly {@link NetMessage.MsgScrDeleteWar.verify|verify} messages.
         * @param message MsgScrDeleteWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgScrDeleteWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgScrDeleteWar message, length delimited. Does not implicitly {@link NetMessage.MsgScrDeleteWar.verify|verify} messages.
         * @param message MsgScrDeleteWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgScrDeleteWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgScrDeleteWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgScrDeleteWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrDeleteWar;

        /**
         * Decodes a MsgScrDeleteWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgScrDeleteWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrDeleteWar;

        /**
         * Verifies a MsgScrDeleteWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgScrDeleteWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgScrDeleteWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrDeleteWar;

        /**
         * Creates a plain object from a MsgScrDeleteWar message. Also converts values to other types if specified.
         * @param message MsgScrDeleteWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgScrDeleteWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgScrDeleteWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgScrDeleteWar {

        /** Properties of a C. */
        interface IC {

            /** C slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrDeleteWar.IC);

            /** C slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgScrDeleteWar.IC): NetMessage.MsgScrDeleteWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgScrDeleteWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrDeleteWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgScrDeleteWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrDeleteWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrDeleteWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrDeleteWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrDeleteWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrDeleteWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S slotIndex */
            slotIndex?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgScrDeleteWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S slotIndex. */
            public slotIndex: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgScrDeleteWar.IS): NetMessage.MsgScrDeleteWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgScrDeleteWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgScrDeleteWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgScrDeleteWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgScrDeleteWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgScrDeleteWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgScrDeleteWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgScrDeleteWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgScrDeleteWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrSetMaxConcurrentCount. */
    interface IMsgMrrSetMaxConcurrentCount {

        /** MsgMrrSetMaxConcurrentCount c */
        c?: (NetMessage.MsgMrrSetMaxConcurrentCount.IC|null);

        /** MsgMrrSetMaxConcurrentCount s */
        s?: (NetMessage.MsgMrrSetMaxConcurrentCount.IS|null);
    }

    /** Represents a MsgMrrSetMaxConcurrentCount. */
    class MsgMrrSetMaxConcurrentCount implements IMsgMrrSetMaxConcurrentCount {

        /**
         * Constructs a new MsgMrrSetMaxConcurrentCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrSetMaxConcurrentCount);

        /** MsgMrrSetMaxConcurrentCount c. */
        public c?: (NetMessage.MsgMrrSetMaxConcurrentCount.IC|null);

        /** MsgMrrSetMaxConcurrentCount s. */
        public s?: (NetMessage.MsgMrrSetMaxConcurrentCount.IS|null);

        /**
         * Creates a new MsgMrrSetMaxConcurrentCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrSetMaxConcurrentCount instance
         */
        public static create(properties?: NetMessage.IMsgMrrSetMaxConcurrentCount): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Encodes the specified MsgMrrSetMaxConcurrentCount message. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrSetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrSetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrSetMaxConcurrentCount message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrSetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrSetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrSetMaxConcurrentCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrSetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Decodes a MsgMrrSetMaxConcurrentCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrSetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Verifies a MsgMrrSetMaxConcurrentCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrSetMaxConcurrentCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrSetMaxConcurrentCount
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetMaxConcurrentCount;

        /**
         * Creates a plain object from a MsgMrrSetMaxConcurrentCount message. Also converts values to other types if specified.
         * @param message MsgMrrSetMaxConcurrentCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrSetMaxConcurrentCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrSetMaxConcurrentCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrSetMaxConcurrentCount {

        /** Properties of a C. */
        interface IC {

            /** C maxCountForStd */
            maxCountForStd?: (number|null);

            /** C maxCountForFog */
            maxCountForFog?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IC);

            /** C maxCountForStd. */
            public maxCountForStd: number;

            /** C maxCountForFog. */
            public maxCountForFog: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IC): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetMaxConcurrentCount.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetMaxConcurrentCount.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maxCountForStd */
            maxCountForStd?: (number|null);

            /** S maxCountForFog */
            maxCountForFog?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maxCountForStd. */
            public maxCountForStd: number;

            /** S maxCountForFog. */
            public maxCountForFog: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrSetMaxConcurrentCount.IS): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetMaxConcurrentCount.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetMaxConcurrentCount.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrGetMaxConcurrentCount. */
    interface IMsgMrrGetMaxConcurrentCount {

        /** MsgMrrGetMaxConcurrentCount c */
        c?: (NetMessage.MsgMrrGetMaxConcurrentCount.IC|null);

        /** MsgMrrGetMaxConcurrentCount s */
        s?: (NetMessage.MsgMrrGetMaxConcurrentCount.IS|null);
    }

    /** Represents a MsgMrrGetMaxConcurrentCount. */
    class MsgMrrGetMaxConcurrentCount implements IMsgMrrGetMaxConcurrentCount {

        /**
         * Constructs a new MsgMrrGetMaxConcurrentCount.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrGetMaxConcurrentCount);

        /** MsgMrrGetMaxConcurrentCount c. */
        public c?: (NetMessage.MsgMrrGetMaxConcurrentCount.IC|null);

        /** MsgMrrGetMaxConcurrentCount s. */
        public s?: (NetMessage.MsgMrrGetMaxConcurrentCount.IS|null);

        /**
         * Creates a new MsgMrrGetMaxConcurrentCount instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrGetMaxConcurrentCount instance
         */
        public static create(properties?: NetMessage.IMsgMrrGetMaxConcurrentCount): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Encodes the specified MsgMrrGetMaxConcurrentCount message. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrGetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrGetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrGetMaxConcurrentCount message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.verify|verify} messages.
         * @param message MsgMrrGetMaxConcurrentCount message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrGetMaxConcurrentCount, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrGetMaxConcurrentCount message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrGetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Decodes a MsgMrrGetMaxConcurrentCount message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrGetMaxConcurrentCount
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Verifies a MsgMrrGetMaxConcurrentCount message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrGetMaxConcurrentCount message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrGetMaxConcurrentCount
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMaxConcurrentCount;

        /**
         * Creates a plain object from a MsgMrrGetMaxConcurrentCount message. Also converts values to other types if specified.
         * @param message MsgMrrGetMaxConcurrentCount
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrGetMaxConcurrentCount, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrGetMaxConcurrentCount to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrGetMaxConcurrentCount {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IC): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetMaxConcurrentCount.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMaxConcurrentCount.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetMaxConcurrentCount.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S maxCountForStd */
            maxCountForStd?: (number|null);

            /** S maxCountForFog */
            maxCountForFog?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S maxCountForStd. */
            public maxCountForStd: number;

            /** S maxCountForFog. */
            public maxCountForFog: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrGetMaxConcurrentCount.IS): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMaxConcurrentCount.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetMaxConcurrentCount.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMaxConcurrentCount.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetMaxConcurrentCount.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrGetMyRoomPublicInfoList. */
    interface IMsgMrrGetMyRoomPublicInfoList {

        /** MsgMrrGetMyRoomPublicInfoList c */
        c?: (NetMessage.MsgMrrGetMyRoomPublicInfoList.IC|null);

        /** MsgMrrGetMyRoomPublicInfoList s */
        s?: (NetMessage.MsgMrrGetMyRoomPublicInfoList.IS|null);
    }

    /** Represents a MsgMrrGetMyRoomPublicInfoList. */
    class MsgMrrGetMyRoomPublicInfoList implements IMsgMrrGetMyRoomPublicInfoList {

        /**
         * Constructs a new MsgMrrGetMyRoomPublicInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrGetMyRoomPublicInfoList);

        /** MsgMrrGetMyRoomPublicInfoList c. */
        public c?: (NetMessage.MsgMrrGetMyRoomPublicInfoList.IC|null);

        /** MsgMrrGetMyRoomPublicInfoList s. */
        public s?: (NetMessage.MsgMrrGetMyRoomPublicInfoList.IS|null);

        /**
         * Creates a new MsgMrrGetMyRoomPublicInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrGetMyRoomPublicInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMrrGetMyRoomPublicInfoList): NetMessage.MsgMrrGetMyRoomPublicInfoList;

        /**
         * Encodes the specified MsgMrrGetMyRoomPublicInfoList message. Does not implicitly {@link NetMessage.MsgMrrGetMyRoomPublicInfoList.verify|verify} messages.
         * @param message MsgMrrGetMyRoomPublicInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrGetMyRoomPublicInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrGetMyRoomPublicInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMyRoomPublicInfoList.verify|verify} messages.
         * @param message MsgMrrGetMyRoomPublicInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrGetMyRoomPublicInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrGetMyRoomPublicInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrGetMyRoomPublicInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMyRoomPublicInfoList;

        /**
         * Decodes a MsgMrrGetMyRoomPublicInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrGetMyRoomPublicInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMyRoomPublicInfoList;

        /**
         * Verifies a MsgMrrGetMyRoomPublicInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrGetMyRoomPublicInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrGetMyRoomPublicInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMyRoomPublicInfoList;

        /**
         * Creates a plain object from a MsgMrrGetMyRoomPublicInfoList message. Also converts values to other types if specified.
         * @param message MsgMrrGetMyRoomPublicInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrGetMyRoomPublicInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrGetMyRoomPublicInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrGetMyRoomPublicInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetMyRoomPublicInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrGetMyRoomPublicInfoList.IC): NetMessage.MsgMrrGetMyRoomPublicInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrGetMyRoomPublicInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetMyRoomPublicInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMyRoomPublicInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetMyRoomPublicInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMyRoomPublicInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMyRoomPublicInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMyRoomPublicInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetMyRoomPublicInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiRankRoom.IMrrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetMyRoomPublicInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiRankRoom.IMrrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrGetMyRoomPublicInfoList.IS): NetMessage.MsgMrrGetMyRoomPublicInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrGetMyRoomPublicInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetMyRoomPublicInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetMyRoomPublicInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetMyRoomPublicInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetMyRoomPublicInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetMyRoomPublicInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetMyRoomPublicInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetMyRoomPublicInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrGetRoomPublicInfo. */
    interface IMsgMrrGetRoomPublicInfo {

        /** MsgMrrGetRoomPublicInfo c */
        c?: (NetMessage.MsgMrrGetRoomPublicInfo.IC|null);

        /** MsgMrrGetRoomPublicInfo s */
        s?: (NetMessage.MsgMrrGetRoomPublicInfo.IS|null);
    }

    /** Represents a MsgMrrGetRoomPublicInfo. */
    class MsgMrrGetRoomPublicInfo implements IMsgMrrGetRoomPublicInfo {

        /**
         * Constructs a new MsgMrrGetRoomPublicInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrGetRoomPublicInfo);

        /** MsgMrrGetRoomPublicInfo c. */
        public c?: (NetMessage.MsgMrrGetRoomPublicInfo.IC|null);

        /** MsgMrrGetRoomPublicInfo s. */
        public s?: (NetMessage.MsgMrrGetRoomPublicInfo.IS|null);

        /**
         * Creates a new MsgMrrGetRoomPublicInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrGetRoomPublicInfo instance
         */
        public static create(properties?: NetMessage.IMsgMrrGetRoomPublicInfo): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Encodes the specified MsgMrrGetRoomPublicInfo message. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.verify|verify} messages.
         * @param message MsgMrrGetRoomPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrGetRoomPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrGetRoomPublicInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.verify|verify} messages.
         * @param message MsgMrrGetRoomPublicInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrGetRoomPublicInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrGetRoomPublicInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrGetRoomPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Decodes a MsgMrrGetRoomPublicInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrGetRoomPublicInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Verifies a MsgMrrGetRoomPublicInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrGetRoomPublicInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrGetRoomPublicInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetRoomPublicInfo;

        /**
         * Creates a plain object from a MsgMrrGetRoomPublicInfo message. Also converts values to other types if specified.
         * @param message MsgMrrGetRoomPublicInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrGetRoomPublicInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrGetRoomPublicInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrGetRoomPublicInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IC): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetRoomPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetRoomPublicInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetRoomPublicInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetRoomPublicInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomInfo */
            roomInfo?: (MultiRankRoom.IMrrRoomInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomInfo. */
            public roomInfo?: (MultiRankRoom.IMrrRoomInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrGetRoomPublicInfo.IS): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrGetRoomPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrGetRoomPublicInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrGetRoomPublicInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrGetRoomPublicInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrGetRoomPublicInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrDeleteRoom. */
    interface IMsgMrrDeleteRoom {

        /** MsgMrrDeleteRoom s */
        s?: (NetMessage.MsgMrrDeleteRoom.IS|null);
    }

    /** Represents a MsgMrrDeleteRoom. */
    class MsgMrrDeleteRoom implements IMsgMrrDeleteRoom {

        /**
         * Constructs a new MsgMrrDeleteRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrDeleteRoom);

        /** MsgMrrDeleteRoom s. */
        public s?: (NetMessage.MsgMrrDeleteRoom.IS|null);

        /**
         * Creates a new MsgMrrDeleteRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrDeleteRoom instance
         */
        public static create(properties?: NetMessage.IMsgMrrDeleteRoom): NetMessage.MsgMrrDeleteRoom;

        /**
         * Encodes the specified MsgMrrDeleteRoom message. Does not implicitly {@link NetMessage.MsgMrrDeleteRoom.verify|verify} messages.
         * @param message MsgMrrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrDeleteRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMrrDeleteRoom.verify|verify} messages.
         * @param message MsgMrrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrDeleteRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrDeleteRoom;

        /**
         * Decodes a MsgMrrDeleteRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrDeleteRoom;

        /**
         * Verifies a MsgMrrDeleteRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrDeleteRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrDeleteRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrDeleteRoom;

        /**
         * Creates a plain object from a MsgMrrDeleteRoom message. Also converts values to other types if specified.
         * @param message MsgMrrDeleteRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrDeleteRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrDeleteRoom {

        /** Properties of a S. */
        interface IS {

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrDeleteRoom.IS);

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrDeleteRoom.IS): NetMessage.MsgMrrDeleteRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrDeleteRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrDeleteRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrDeleteRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrSetBannedCoIdList. */
    interface IMsgMrrSetBannedCoIdList {

        /** MsgMrrSetBannedCoIdList c */
        c?: (NetMessage.MsgMrrSetBannedCoIdList.IC|null);

        /** MsgMrrSetBannedCoIdList s */
        s?: (NetMessage.MsgMrrSetBannedCoIdList.IS|null);
    }

    /** Represents a MsgMrrSetBannedCoIdList. */
    class MsgMrrSetBannedCoIdList implements IMsgMrrSetBannedCoIdList {

        /**
         * Constructs a new MsgMrrSetBannedCoIdList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrSetBannedCoIdList);

        /** MsgMrrSetBannedCoIdList c. */
        public c?: (NetMessage.MsgMrrSetBannedCoIdList.IC|null);

        /** MsgMrrSetBannedCoIdList s. */
        public s?: (NetMessage.MsgMrrSetBannedCoIdList.IS|null);

        /**
         * Creates a new MsgMrrSetBannedCoIdList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrSetBannedCoIdList instance
         */
        public static create(properties?: NetMessage.IMsgMrrSetBannedCoIdList): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Encodes the specified MsgMrrSetBannedCoIdList message. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.verify|verify} messages.
         * @param message MsgMrrSetBannedCoIdList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrSetBannedCoIdList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrSetBannedCoIdList message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.verify|verify} messages.
         * @param message MsgMrrSetBannedCoIdList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrSetBannedCoIdList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrSetBannedCoIdList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrSetBannedCoIdList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Decodes a MsgMrrSetBannedCoIdList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrSetBannedCoIdList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Verifies a MsgMrrSetBannedCoIdList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrSetBannedCoIdList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrSetBannedCoIdList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetBannedCoIdList;

        /**
         * Creates a plain object from a MsgMrrSetBannedCoIdList message. Also converts values to other types if specified.
         * @param message MsgMrrSetBannedCoIdList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrSetBannedCoIdList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrSetBannedCoIdList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrSetBannedCoIdList {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C bannedCoIdList */
            bannedCoIdList?: (number[]|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetBannedCoIdList.IC);

            /** C roomId. */
            public roomId: number;

            /** C bannedCoIdList. */
            public bannedCoIdList: number[];

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrSetBannedCoIdList.IC): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetBannedCoIdList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetBannedCoIdList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetBannedCoIdList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetBannedCoIdList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetBannedCoIdList.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrSetBannedCoIdList.IS): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetBannedCoIdList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetBannedCoIdList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetBannedCoIdList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetBannedCoIdList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetBannedCoIdList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMrrSetSelfSettings. */
    interface IMsgMrrSetSelfSettings {

        /** MsgMrrSetSelfSettings c */
        c?: (NetMessage.MsgMrrSetSelfSettings.IC|null);

        /** MsgMrrSetSelfSettings s */
        s?: (NetMessage.MsgMrrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMrrSetSelfSettings. */
    class MsgMrrSetSelfSettings implements IMsgMrrSetSelfSettings {

        /**
         * Constructs a new MsgMrrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMrrSetSelfSettings);

        /** MsgMrrSetSelfSettings c. */
        public c?: (NetMessage.MsgMrrSetSelfSettings.IC|null);

        /** MsgMrrSetSelfSettings s. */
        public s?: (NetMessage.MsgMrrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMrrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMrrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMrrSetSelfSettings): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Encodes the specified MsgMrrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.verify|verify} messages.
         * @param message MsgMrrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMrrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMrrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.verify|verify} messages.
         * @param message MsgMrrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMrrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMrrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMrrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Decodes a MsgMrrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMrrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Verifies a MsgMrrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMrrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMrrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMrrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMrrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMrrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMrrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMrrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C coId */
            coId?: (number|null);

            /** C unitAndTileSkinId */
            unitAndTileSkinId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C coId. */
            public coId: number;

            /** C unitAndTileSkinId. */
            public unitAndTileSkinId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMrrSetSelfSettings.IC): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMrrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMrrSetSelfSettings.IS): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMrrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMrrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMrrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMrrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMrrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrCreateRoom. */
    interface IMsgMfrCreateRoom {

        /** MsgMfrCreateRoom c */
        c?: (NetMessage.MsgMfrCreateRoom.IC|null);

        /** MsgMfrCreateRoom s */
        s?: (NetMessage.MsgMfrCreateRoom.IS|null);
    }

    /** Represents a MsgMfrCreateRoom. */
    class MsgMfrCreateRoom implements IMsgMfrCreateRoom {

        /**
         * Constructs a new MsgMfrCreateRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrCreateRoom);

        /** MsgMfrCreateRoom c. */
        public c?: (NetMessage.MsgMfrCreateRoom.IC|null);

        /** MsgMfrCreateRoom s. */
        public s?: (NetMessage.MsgMfrCreateRoom.IS|null);

        /**
         * Creates a new MsgMfrCreateRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrCreateRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrCreateRoom): NetMessage.MsgMfrCreateRoom;

        /**
         * Encodes the specified MsgMfrCreateRoom message. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.verify|verify} messages.
         * @param message MsgMfrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrCreateRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.verify|verify} messages.
         * @param message MsgMfrCreateRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrCreateRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrCreateRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrCreateRoom;

        /**
         * Decodes a MsgMfrCreateRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrCreateRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrCreateRoom;

        /**
         * Verifies a MsgMfrCreateRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrCreateRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrCreateRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrCreateRoom;

        /**
         * Creates a plain object from a MsgMfrCreateRoom message. Also converts values to other types if specified.
         * @param message MsgMfrCreateRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrCreateRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrCreateRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrCreateRoom {

        /** Properties of a C. */
        interface IC {

            /** C settingsForMfw */
            settingsForMfw?: (WarSettings.ISettingsForMfw|null);

            /** C selfPlayerIndex */
            selfPlayerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrCreateRoom.IC);

            /** C settingsForMfw. */
            public settingsForMfw?: (WarSettings.ISettingsForMfw|null);

            /** C selfPlayerIndex. */
            public selfPlayerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrCreateRoom.IC): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrCreateRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrCreateRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrCreateRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrCreateRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrCreateRoom.IS): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrCreateRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrCreateRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrCreateRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrCreateRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrExitRoom. */
    interface IMsgMfrExitRoom {

        /** MsgMfrExitRoom c */
        c?: (NetMessage.MsgMfrExitRoom.IC|null);

        /** MsgMfrExitRoom s */
        s?: (NetMessage.MsgMfrExitRoom.IS|null);
    }

    /** Represents a MsgMfrExitRoom. */
    class MsgMfrExitRoom implements IMsgMfrExitRoom {

        /**
         * Constructs a new MsgMfrExitRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrExitRoom);

        /** MsgMfrExitRoom c. */
        public c?: (NetMessage.MsgMfrExitRoom.IC|null);

        /** MsgMfrExitRoom s. */
        public s?: (NetMessage.MsgMfrExitRoom.IS|null);

        /**
         * Creates a new MsgMfrExitRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrExitRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrExitRoom): NetMessage.MsgMfrExitRoom;

        /**
         * Encodes the specified MsgMfrExitRoom message. Does not implicitly {@link NetMessage.MsgMfrExitRoom.verify|verify} messages.
         * @param message MsgMfrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrExitRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrExitRoom.verify|verify} messages.
         * @param message MsgMfrExitRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrExitRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrExitRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrExitRoom;

        /**
         * Decodes a MsgMfrExitRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrExitRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrExitRoom;

        /**
         * Verifies a MsgMfrExitRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrExitRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrExitRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrExitRoom;

        /**
         * Creates a plain object from a MsgMfrExitRoom message. Also converts values to other types if specified.
         * @param message MsgMfrExitRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrExitRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrExitRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrExitRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrExitRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrExitRoom.IC): NetMessage.MsgMfrExitRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrExitRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrExitRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrExitRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrExitRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrExitRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrExitRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrExitRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrExitRoom.IS): NetMessage.MsgMfrExitRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrExitRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrExitRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrExitRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrExitRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrExitRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrExitRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetJoinedRoomInfoList. */
    interface IMsgMfrGetJoinedRoomInfoList {

        /** MsgMfrGetJoinedRoomInfoList c */
        c?: (NetMessage.MsgMfrGetJoinedRoomInfoList.IC|null);

        /** MsgMfrGetJoinedRoomInfoList s */
        s?: (NetMessage.MsgMfrGetJoinedRoomInfoList.IS|null);
    }

    /** Represents a MsgMfrGetJoinedRoomInfoList. */
    class MsgMfrGetJoinedRoomInfoList implements IMsgMfrGetJoinedRoomInfoList {

        /**
         * Constructs a new MsgMfrGetJoinedRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetJoinedRoomInfoList);

        /** MsgMfrGetJoinedRoomInfoList c. */
        public c?: (NetMessage.MsgMfrGetJoinedRoomInfoList.IC|null);

        /** MsgMfrGetJoinedRoomInfoList s. */
        public s?: (NetMessage.MsgMfrGetJoinedRoomInfoList.IS|null);

        /**
         * Creates a new MsgMfrGetJoinedRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetJoinedRoomInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetJoinedRoomInfoList): NetMessage.MsgMfrGetJoinedRoomInfoList;

        /**
         * Encodes the specified MsgMfrGetJoinedRoomInfoList message. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMfrGetJoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetJoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetJoinedRoomInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomInfoList.verify|verify} messages.
         * @param message MsgMfrGetJoinedRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetJoinedRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetJoinedRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetJoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinedRoomInfoList;

        /**
         * Decodes a MsgMfrGetJoinedRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetJoinedRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinedRoomInfoList;

        /**
         * Verifies a MsgMfrGetJoinedRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetJoinedRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetJoinedRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinedRoomInfoList;

        /**
         * Creates a plain object from a MsgMfrGetJoinedRoomInfoList message. Also converts values to other types if specified.
         * @param message MsgMfrGetJoinedRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetJoinedRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetJoinedRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetJoinedRoomInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinedRoomInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinedRoomInfoList.IC): NetMessage.MsgMfrGetJoinedRoomInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinedRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinedRoomInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinedRoomInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinedRoomInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinedRoomInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiFreeRoom.IMfrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinedRoomInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiFreeRoom.IMfrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinedRoomInfoList.IS): NetMessage.MsgMfrGetJoinedRoomInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinedRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinedRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinedRoomInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinedRoomInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinedRoomInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinedRoomInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetRoomInfo. */
    interface IMsgMfrGetRoomInfo {

        /** MsgMfrGetRoomInfo c */
        c?: (NetMessage.MsgMfrGetRoomInfo.IC|null);

        /** MsgMfrGetRoomInfo s */
        s?: (NetMessage.MsgMfrGetRoomInfo.IS|null);
    }

    /** Represents a MsgMfrGetRoomInfo. */
    class MsgMfrGetRoomInfo implements IMsgMfrGetRoomInfo {

        /**
         * Constructs a new MsgMfrGetRoomInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetRoomInfo);

        /** MsgMfrGetRoomInfo c. */
        public c?: (NetMessage.MsgMfrGetRoomInfo.IC|null);

        /** MsgMfrGetRoomInfo s. */
        public s?: (NetMessage.MsgMfrGetRoomInfo.IS|null);

        /**
         * Creates a new MsgMfrGetRoomInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetRoomInfo instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetRoomInfo): NetMessage.MsgMfrGetRoomInfo;

        /**
         * Encodes the specified MsgMfrGetRoomInfo message. Does not implicitly {@link NetMessage.MsgMfrGetRoomInfo.verify|verify} messages.
         * @param message MsgMfrGetRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetRoomInfo message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomInfo.verify|verify} messages.
         * @param message MsgMfrGetRoomInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetRoomInfo, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetRoomInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomInfo;

        /**
         * Decodes a MsgMfrGetRoomInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetRoomInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomInfo;

        /**
         * Verifies a MsgMfrGetRoomInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetRoomInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetRoomInfo
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomInfo;

        /**
         * Creates a plain object from a MsgMfrGetRoomInfo message. Also converts values to other types if specified.
         * @param message MsgMfrGetRoomInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetRoomInfo, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetRoomInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetRoomInfo {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetRoomInfo.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetRoomInfo.IC): NetMessage.MsgMfrGetRoomInfo.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetRoomInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetRoomInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomInfo.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetRoomInfo.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomInfo.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomInfo.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomInfo.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetRoomInfo.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S roomInfo */
            roomInfo?: (MultiFreeRoom.IMfrRoomInfo|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetRoomInfo.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S roomInfo. */
            public roomInfo?: (MultiFreeRoom.IMfrRoomInfo|null);

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetRoomInfo.IS): NetMessage.MsgMfrGetRoomInfo.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetRoomInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetRoomInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetRoomInfo.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetRoomInfo.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetRoomInfo.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetRoomInfo.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetRoomInfo.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetRoomInfo.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrGetJoinableRoomInfoList. */
    interface IMsgMfrGetJoinableRoomInfoList {

        /** MsgMfrGetJoinableRoomInfoList c */
        c?: (NetMessage.MsgMfrGetJoinableRoomInfoList.IC|null);

        /** MsgMfrGetJoinableRoomInfoList s */
        s?: (NetMessage.MsgMfrGetJoinableRoomInfoList.IS|null);
    }

    /** Represents a MsgMfrGetJoinableRoomInfoList. */
    class MsgMfrGetJoinableRoomInfoList implements IMsgMfrGetJoinableRoomInfoList {

        /**
         * Constructs a new MsgMfrGetJoinableRoomInfoList.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrGetJoinableRoomInfoList);

        /** MsgMfrGetJoinableRoomInfoList c. */
        public c?: (NetMessage.MsgMfrGetJoinableRoomInfoList.IC|null);

        /** MsgMfrGetJoinableRoomInfoList s. */
        public s?: (NetMessage.MsgMfrGetJoinableRoomInfoList.IS|null);

        /**
         * Creates a new MsgMfrGetJoinableRoomInfoList instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrGetJoinableRoomInfoList instance
         */
        public static create(properties?: NetMessage.IMsgMfrGetJoinableRoomInfoList): NetMessage.MsgMfrGetJoinableRoomInfoList;

        /**
         * Encodes the specified MsgMfrGetJoinableRoomInfoList message. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomInfoList.verify|verify} messages.
         * @param message MsgMfrGetJoinableRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrGetJoinableRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrGetJoinableRoomInfoList message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomInfoList.verify|verify} messages.
         * @param message MsgMfrGetJoinableRoomInfoList message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrGetJoinableRoomInfoList, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrGetJoinableRoomInfoList message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrGetJoinableRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinableRoomInfoList;

        /**
         * Decodes a MsgMfrGetJoinableRoomInfoList message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrGetJoinableRoomInfoList
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinableRoomInfoList;

        /**
         * Verifies a MsgMfrGetJoinableRoomInfoList message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrGetJoinableRoomInfoList message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrGetJoinableRoomInfoList
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinableRoomInfoList;

        /**
         * Creates a plain object from a MsgMfrGetJoinableRoomInfoList message. Also converts values to other types if specified.
         * @param message MsgMfrGetJoinableRoomInfoList
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrGetJoinableRoomInfoList, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrGetJoinableRoomInfoList to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrGetJoinableRoomInfoList {

        /** Properties of a C. */
        interface IC {
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinableRoomInfoList.IC);

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinableRoomInfoList.IC): NetMessage.MsgMfrGetJoinableRoomInfoList.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinableRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomInfoList.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinableRoomInfoList.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinableRoomInfoList.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinableRoomInfoList.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinableRoomInfoList.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinableRoomInfoList.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomInfoList */
            roomInfoList?: (MultiFreeRoom.IMfrRoomInfo[]|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrGetJoinableRoomInfoList.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomInfoList. */
            public roomInfoList: MultiFreeRoom.IMfrRoomInfo[];

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrGetJoinableRoomInfoList.IS): NetMessage.MsgMfrGetJoinableRoomInfoList.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrGetJoinableRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrGetJoinableRoomInfoList.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrGetJoinableRoomInfoList.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrGetJoinableRoomInfoList.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrGetJoinableRoomInfoList.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrGetJoinableRoomInfoList.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrGetJoinableRoomInfoList.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrJoinRoom. */
    interface IMsgMfrJoinRoom {

        /** MsgMfrJoinRoom c */
        c?: (NetMessage.MsgMfrJoinRoom.IC|null);

        /** MsgMfrJoinRoom s */
        s?: (NetMessage.MsgMfrJoinRoom.IS|null);
    }

    /** Represents a MsgMfrJoinRoom. */
    class MsgMfrJoinRoom implements IMsgMfrJoinRoom {

        /**
         * Constructs a new MsgMfrJoinRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrJoinRoom);

        /** MsgMfrJoinRoom c. */
        public c?: (NetMessage.MsgMfrJoinRoom.IC|null);

        /** MsgMfrJoinRoom s. */
        public s?: (NetMessage.MsgMfrJoinRoom.IS|null);

        /**
         * Creates a new MsgMfrJoinRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrJoinRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrJoinRoom): NetMessage.MsgMfrJoinRoom;

        /**
         * Encodes the specified MsgMfrJoinRoom message. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.verify|verify} messages.
         * @param message MsgMfrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrJoinRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.verify|verify} messages.
         * @param message MsgMfrJoinRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrJoinRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrJoinRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrJoinRoom;

        /**
         * Decodes a MsgMfrJoinRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrJoinRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrJoinRoom;

        /**
         * Verifies a MsgMfrJoinRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrJoinRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrJoinRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrJoinRoom;

        /**
         * Creates a plain object from a MsgMfrJoinRoom message. Also converts values to other types if specified.
         * @param message MsgMfrJoinRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrJoinRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrJoinRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrJoinRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrJoinRoom.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrJoinRoom.IC): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrJoinRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrJoinRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrJoinRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrJoinRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrJoinRoom.IS): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrJoinRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrJoinRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrJoinRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrJoinRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrDeleteRoom. */
    interface IMsgMfrDeleteRoom {

        /** MsgMfrDeleteRoom c */
        c?: (NetMessage.MsgMfrDeleteRoom.IC|null);

        /** MsgMfrDeleteRoom s */
        s?: (NetMessage.MsgMfrDeleteRoom.IS|null);
    }

    /** Represents a MsgMfrDeleteRoom. */
    class MsgMfrDeleteRoom implements IMsgMfrDeleteRoom {

        /**
         * Constructs a new MsgMfrDeleteRoom.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrDeleteRoom);

        /** MsgMfrDeleteRoom c. */
        public c?: (NetMessage.MsgMfrDeleteRoom.IC|null);

        /** MsgMfrDeleteRoom s. */
        public s?: (NetMessage.MsgMfrDeleteRoom.IS|null);

        /**
         * Creates a new MsgMfrDeleteRoom instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrDeleteRoom instance
         */
        public static create(properties?: NetMessage.IMsgMfrDeleteRoom): NetMessage.MsgMfrDeleteRoom;

        /**
         * Encodes the specified MsgMfrDeleteRoom message. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.verify|verify} messages.
         * @param message MsgMfrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrDeleteRoom message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.verify|verify} messages.
         * @param message MsgMfrDeleteRoom message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrDeleteRoom, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrDeleteRoom message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeleteRoom;

        /**
         * Decodes a MsgMfrDeleteRoom message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrDeleteRoom
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeleteRoom;

        /**
         * Verifies a MsgMfrDeleteRoom message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrDeleteRoom message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrDeleteRoom
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeleteRoom;

        /**
         * Creates a plain object from a MsgMfrDeleteRoom message. Also converts values to other types if specified.
         * @param message MsgMfrDeleteRoom
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrDeleteRoom, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrDeleteRoom to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrDeleteRoom {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeleteRoom.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrDeleteRoom.IC): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeleteRoom.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeleteRoom.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeleteRoom.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeleteRoom.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrDeleteRoom.IS): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeleteRoom.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeleteRoom.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeleteRoom.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeleteRoom.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrSetReady. */
    interface IMsgMfrSetReady {

        /** MsgMfrSetReady c */
        c?: (NetMessage.MsgMfrSetReady.IC|null);

        /** MsgMfrSetReady s */
        s?: (NetMessage.MsgMfrSetReady.IS|null);
    }

    /** Represents a MsgMfrSetReady. */
    class MsgMfrSetReady implements IMsgMfrSetReady {

        /**
         * Constructs a new MsgMfrSetReady.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrSetReady);

        /** MsgMfrSetReady c. */
        public c?: (NetMessage.MsgMfrSetReady.IC|null);

        /** MsgMfrSetReady s. */
        public s?: (NetMessage.MsgMfrSetReady.IS|null);

        /**
         * Creates a new MsgMfrSetReady instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrSetReady instance
         */
        public static create(properties?: NetMessage.IMsgMfrSetReady): NetMessage.MsgMfrSetReady;

        /**
         * Encodes the specified MsgMfrSetReady message. Does not implicitly {@link NetMessage.MsgMfrSetReady.verify|verify} messages.
         * @param message MsgMfrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrSetReady message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetReady.verify|verify} messages.
         * @param message MsgMfrSetReady message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrSetReady, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrSetReady message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetReady;

        /**
         * Decodes a MsgMfrSetReady message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrSetReady
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetReady;

        /**
         * Verifies a MsgMfrSetReady message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrSetReady message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrSetReady
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetReady;

        /**
         * Creates a plain object from a MsgMfrSetReady message. Also converts values to other types if specified.
         * @param message MsgMfrSetReady
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrSetReady, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrSetReady to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrSetReady {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C isReady */
            isReady?: (boolean|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetReady.IC);

            /** C roomId. */
            public roomId: number;

            /** C isReady. */
            public isReady: boolean;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrSetReady.IC): NetMessage.MsgMfrSetReady.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetReady.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetReady.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetReady.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetReady.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetReady.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetReady.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetReady.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrSetReady.IS): NetMessage.MsgMfrSetReady.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetReady.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetReady.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetReady.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetReady.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetReady.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetReady.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrDeletePlayer. */
    interface IMsgMfrDeletePlayer {

        /** MsgMfrDeletePlayer c */
        c?: (NetMessage.MsgMfrDeletePlayer.IC|null);

        /** MsgMfrDeletePlayer s */
        s?: (NetMessage.MsgMfrDeletePlayer.IS|null);
    }

    /** Represents a MsgMfrDeletePlayer. */
    class MsgMfrDeletePlayer implements IMsgMfrDeletePlayer {

        /**
         * Constructs a new MsgMfrDeletePlayer.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrDeletePlayer);

        /** MsgMfrDeletePlayer c. */
        public c?: (NetMessage.MsgMfrDeletePlayer.IC|null);

        /** MsgMfrDeletePlayer s. */
        public s?: (NetMessage.MsgMfrDeletePlayer.IS|null);

        /**
         * Creates a new MsgMfrDeletePlayer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrDeletePlayer instance
         */
        public static create(properties?: NetMessage.IMsgMfrDeletePlayer): NetMessage.MsgMfrDeletePlayer;

        /**
         * Encodes the specified MsgMfrDeletePlayer message. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.verify|verify} messages.
         * @param message MsgMfrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrDeletePlayer message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.verify|verify} messages.
         * @param message MsgMfrDeletePlayer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrDeletePlayer, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrDeletePlayer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeletePlayer;

        /**
         * Decodes a MsgMfrDeletePlayer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrDeletePlayer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeletePlayer;

        /**
         * Verifies a MsgMfrDeletePlayer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrDeletePlayer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrDeletePlayer
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeletePlayer;

        /**
         * Creates a plain object from a MsgMfrDeletePlayer message. Also converts values to other types if specified.
         * @param message MsgMfrDeletePlayer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrDeletePlayer, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrDeletePlayer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrDeletePlayer {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeletePlayer.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrDeletePlayer.IC): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeletePlayer.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeletePlayer.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeletePlayer.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);

            /** S targetPlayerIndex */
            targetPlayerIndex?: (number|null);

            /** S targetUserId */
            targetUserId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrDeletePlayer.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /** S targetPlayerIndex. */
            public targetPlayerIndex: number;

            /** S targetUserId. */
            public targetUserId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrDeletePlayer.IS): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrDeletePlayer.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrDeletePlayer.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrDeletePlayer.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrDeletePlayer.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrSetSelfSettings. */
    interface IMsgMfrSetSelfSettings {

        /** MsgMfrSetSelfSettings c */
        c?: (NetMessage.MsgMfrSetSelfSettings.IC|null);

        /** MsgMfrSetSelfSettings s */
        s?: (NetMessage.MsgMfrSetSelfSettings.IS|null);
    }

    /** Represents a MsgMfrSetSelfSettings. */
    class MsgMfrSetSelfSettings implements IMsgMfrSetSelfSettings {

        /**
         * Constructs a new MsgMfrSetSelfSettings.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrSetSelfSettings);

        /** MsgMfrSetSelfSettings c. */
        public c?: (NetMessage.MsgMfrSetSelfSettings.IC|null);

        /** MsgMfrSetSelfSettings s. */
        public s?: (NetMessage.MsgMfrSetSelfSettings.IS|null);

        /**
         * Creates a new MsgMfrSetSelfSettings instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrSetSelfSettings instance
         */
        public static create(properties?: NetMessage.IMsgMfrSetSelfSettings): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Encodes the specified MsgMfrSetSelfSettings message. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.verify|verify} messages.
         * @param message MsgMfrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrSetSelfSettings message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.verify|verify} messages.
         * @param message MsgMfrSetSelfSettings message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrSetSelfSettings, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrSetSelfSettings message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Decodes a MsgMfrSetSelfSettings message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrSetSelfSettings
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Verifies a MsgMfrSetSelfSettings message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrSetSelfSettings message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrSetSelfSettings
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetSelfSettings;

        /**
         * Creates a plain object from a MsgMfrSetSelfSettings message. Also converts values to other types if specified.
         * @param message MsgMfrSetSelfSettings
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrSetSelfSettings, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrSetSelfSettings to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrSetSelfSettings {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);

            /** C playerIndex */
            playerIndex?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetSelfSettings.IC);

            /** C roomId. */
            public roomId: number;

            /** C playerIndex. */
            public playerIndex: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrSetSelfSettings.IC): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetSelfSettings.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetSelfSettings.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetSelfSettings.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrSetSelfSettings.IS);

            /** S errorCode. */
            public errorCode: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrSetSelfSettings.IS): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrSetSelfSettings.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrSetSelfSettings.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrSetSelfSettings.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrSetSelfSettings.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a MsgMfrStartWar. */
    interface IMsgMfrStartWar {

        /** MsgMfrStartWar c */
        c?: (NetMessage.MsgMfrStartWar.IC|null);

        /** MsgMfrStartWar s */
        s?: (NetMessage.MsgMfrStartWar.IS|null);
    }

    /** Represents a MsgMfrStartWar. */
    class MsgMfrStartWar implements IMsgMfrStartWar {

        /**
         * Constructs a new MsgMfrStartWar.
         * @param [properties] Properties to set
         */
        constructor(properties?: NetMessage.IMsgMfrStartWar);

        /** MsgMfrStartWar c. */
        public c?: (NetMessage.MsgMfrStartWar.IC|null);

        /** MsgMfrStartWar s. */
        public s?: (NetMessage.MsgMfrStartWar.IS|null);

        /**
         * Creates a new MsgMfrStartWar instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MsgMfrStartWar instance
         */
        public static create(properties?: NetMessage.IMsgMfrStartWar): NetMessage.MsgMfrStartWar;

        /**
         * Encodes the specified MsgMfrStartWar message. Does not implicitly {@link NetMessage.MsgMfrStartWar.verify|verify} messages.
         * @param message MsgMfrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: NetMessage.IMsgMfrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Encodes the specified MsgMfrStartWar message, length delimited. Does not implicitly {@link NetMessage.MsgMfrStartWar.verify|verify} messages.
         * @param message MsgMfrStartWar message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: NetMessage.IMsgMfrStartWar, writer?: protobuf.Writer): protobuf.Writer;

        /**
         * Decodes a MsgMfrStartWar message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MsgMfrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrStartWar;

        /**
         * Decodes a MsgMfrStartWar message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MsgMfrStartWar
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrStartWar;

        /**
         * Verifies a MsgMfrStartWar message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MsgMfrStartWar message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MsgMfrStartWar
         */
        public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrStartWar;

        /**
         * Creates a plain object from a MsgMfrStartWar message. Also converts values to other types if specified.
         * @param message MsgMfrStartWar
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: NetMessage.MsgMfrStartWar, options?: protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MsgMfrStartWar to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MsgMfrStartWar {

        /** Properties of a C. */
        interface IC {

            /** C roomId */
            roomId?: (number|null);
        }

        /** Represents a C. */
        class C implements IC {

            /**
             * Constructs a new C.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrStartWar.IC);

            /** C roomId. */
            public roomId: number;

            /**
             * Creates a new C instance using the specified properties.
             * @param [properties] Properties to set
             * @returns C instance
             */
            public static create(properties?: NetMessage.MsgMfrStartWar.IC): NetMessage.MsgMfrStartWar.C;

            /**
             * Encodes the specified C message. Does not implicitly {@link NetMessage.MsgMfrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified C message, length delimited. Does not implicitly {@link NetMessage.MsgMfrStartWar.C.verify|verify} messages.
             * @param message C message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrStartWar.IC, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a C message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrStartWar.C;

            /**
             * Decodes a C message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns C
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrStartWar.C;

            /**
             * Verifies a C message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a C message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns C
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrStartWar.C;

            /**
             * Creates a plain object from a C message. Also converts values to other types if specified.
             * @param message C
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrStartWar.C, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this C to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a S. */
        interface IS {

            /** S errorCode */
            errorCode?: (number|null);

            /** S roomId */
            roomId?: (number|null);
        }

        /** Represents a S. */
        class S implements IS {

            /**
             * Constructs a new S.
             * @param [properties] Properties to set
             */
            constructor(properties?: NetMessage.MsgMfrStartWar.IS);

            /** S errorCode. */
            public errorCode: number;

            /** S roomId. */
            public roomId: number;

            /**
             * Creates a new S instance using the specified properties.
             * @param [properties] Properties to set
             * @returns S instance
             */
            public static create(properties?: NetMessage.MsgMfrStartWar.IS): NetMessage.MsgMfrStartWar.S;

            /**
             * Encodes the specified S message. Does not implicitly {@link NetMessage.MsgMfrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: NetMessage.MsgMfrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Encodes the specified S message, length delimited. Does not implicitly {@link NetMessage.MsgMfrStartWar.S.verify|verify} messages.
             * @param message S message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: NetMessage.MsgMfrStartWar.IS, writer?: protobuf.Writer): protobuf.Writer;

            /**
             * Decodes a S message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): NetMessage.MsgMfrStartWar.S;

            /**
             * Decodes a S message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns S
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): NetMessage.MsgMfrStartWar.S;

            /**
             * Verifies a S message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a S message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns S
             */
            public static fromObject(object: { [k: string]: any }): NetMessage.MsgMfrStartWar.S;

            /**
             * Creates a plain object from a S message. Also converts values to other types if specified.
             * @param message S
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: NetMessage.MsgMfrStartWar.S, options?: protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this S to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}

/** Properties of a RPCC_SayHello. */
export declare interface IRPCC_SayHello {

    /** RPCC_SayHello name */
    name?: (string|null);
}

/** Represents a RPCC_SayHello. */
export declare class RPCC_SayHello implements IRPCC_SayHello {

    /**
     * Constructs a new RPCC_SayHello.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRPCC_SayHello);

    /** RPCC_SayHello name. */
    public name: string;

    /**
     * Creates a new RPCC_SayHello instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RPCC_SayHello instance
     */
    public static create(properties?: IRPCC_SayHello): RPCC_SayHello;

    /**
     * Encodes the specified RPCC_SayHello message. Does not implicitly {@link RPCC_SayHello.verify|verify} messages.
     * @param message RPCC_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRPCC_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified RPCC_SayHello message, length delimited. Does not implicitly {@link RPCC_SayHello.verify|verify} messages.
     * @param message RPCC_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRPCC_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a RPCC_SayHello message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RPCC_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): RPCC_SayHello;

    /**
     * Decodes a RPCC_SayHello message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RPCC_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): RPCC_SayHello;

    /**
     * Verifies a RPCC_SayHello message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RPCC_SayHello message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RPCC_SayHello
     */
    public static fromObject(object: { [k: string]: any }): RPCC_SayHello;

    /**
     * Creates a plain object from a RPCC_SayHello message. Also converts values to other types if specified.
     * @param message RPCC_SayHello
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RPCC_SayHello, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RPCC_SayHello to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a RPCS_SayHello. */
export declare interface IRPCS_SayHello {

    /** RPCS_SayHello message */
    message?: (string|null);
}

/** Represents a RPCS_SayHello. */
export declare class RPCS_SayHello implements IRPCS_SayHello {

    /**
     * Constructs a new RPCS_SayHello.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRPCS_SayHello);

    /** RPCS_SayHello message. */
    public message: string;

    /**
     * Creates a new RPCS_SayHello instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RPCS_SayHello instance
     */
    public static create(properties?: IRPCS_SayHello): RPCS_SayHello;

    /**
     * Encodes the specified RPCS_SayHello message. Does not implicitly {@link RPCS_SayHello.verify|verify} messages.
     * @param message RPCS_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRPCS_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Encodes the specified RPCS_SayHello message, length delimited. Does not implicitly {@link RPCS_SayHello.verify|verify} messages.
     * @param message RPCS_SayHello message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRPCS_SayHello, writer?: protobuf.Writer): protobuf.Writer;

    /**
     * Decodes a RPCS_SayHello message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RPCS_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: (protobuf.Reader|Uint8Array), length?: number): RPCS_SayHello;

    /**
     * Decodes a RPCS_SayHello message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RPCS_SayHello
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: (protobuf.Reader|Uint8Array)): RPCS_SayHello;

    /**
     * Verifies a RPCS_SayHello message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RPCS_SayHello message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RPCS_SayHello
     */
    public static fromObject(object: { [k: string]: any }): RPCS_SayHello;

    /**
     * Creates a plain object from a RPCS_SayHello message. Also converts values to other types if specified.
     * @param message RPCS_SayHello
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RPCS_SayHello, options?: protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RPCS_SayHello to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Represents a ReplayValidator */
export declare class ReplayValidator extends protobuf.rpc.Service {

    /**
     * Constructs a new ReplayValidator service.
     * @param rpcImpl RPC implementation
     * @param [requestDelimited=false] Whether requests are length-delimited
     * @param [responseDelimited=false] Whether responses are length-delimited
     */
    constructor(rpcImpl: protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

    /**
     * Creates new ReplayValidator service using the specified rpc implementation.
     * @param rpcImpl RPC implementation
     * @param [requestDelimited=false] Whether requests are length-delimited
     * @param [responseDelimited=false] Whether responses are length-delimited
     * @returns RPC service. Useful where requests and/or responses are streamed.
     */
    public static create(rpcImpl: protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): ReplayValidator;

    /**
     * Calls sayHello.
     * @param request RPCC_SayHello message or plain object
     * @param callback Node-style callback called with the error, if any, and RPCS_SayHello
     */
    public sayHello(request: IRPCC_SayHello, callback: ReplayValidator.sayHelloCallback): void;

    /**
     * Calls sayHello.
     * @param request RPCC_SayHello message or plain object
     * @returns Promise
     */
    public sayHello(request: IRPCC_SayHello): Promise<RPCS_SayHello>;
}

export declare namespace ReplayValidator {

    /**
     * Callback as used by {@link ReplayValidator#sayHello}.
     * @param error Error, if any
     * @param [response] RPCS_SayHello
     */
    type sayHelloCallback = (error: (Error|null), response?: RPCS_SayHello) => void;
}
}}
